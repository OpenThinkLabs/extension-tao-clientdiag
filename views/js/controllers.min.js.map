{"version":3,"file":"routes.js","sources":["routes.js","CompatibilityChecker/checker.js","CompatibilityChecker/data.js"],"names":["define","CompatibilityChecker","actions","index","helpers","Controller","init","current","this","$","on","_start","remove","$info","append","nVer","navigator","appVersion","nAgt","userAgent","browser","_browser","os","_osName","osVersion","test","exec","replace","information","name","browserVersion","version","post","_url","data","$os","$browser","find","removeClass","html","image","nameOffset","verOffset","ix","found","appName","parseFloat","id","navigatorName","nav","indexOf","string","substring","length","lastIndexOf","toLowerCase","toUpperCase","majorVersion","parseInt","isNaN","operatingStrings","op","regex"],"mappings":"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","sourcesContent":["define('taoClientDiagnostic/controller/routes',[],function(){\n    return {\n        'CompatibilityChecker' : {\n            'actions' : {\n                'index' : 'controller/compatibilityChecker/index'\n            }\n        }\n    };\n});\n\n","/**\n * @author Antoine Robin <antoine.robin@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/checker',[\n    'helpers'\n],  function(helpers) {\n\n    var Controller = {\n\n        init : function(){\n            var current = this;\n            $(\"#proceed\").on('click', function(){\n                current._start();\n            });\n\n        },\n\n        _start : function(){\n\n            $('.index').remove();\n            var $info = $('#checker-box');\n            $info.append('<div class=\"loading\"></div>');\n            //browser\n            var nVer = navigator.appVersion;\n            var nAgt = navigator.userAgent;\n\n            //browser\n            var browser = this._browser(nAgt);\n            // system\n            var os = this._osName(nAgt);\n\n\n            var osVersion = \"-\";\n            if (/Windows/.test(os)) {\n                osVersion = /Windows (.*)/.exec(os)[1];\n                os = 'Windows';\n            }\n\n            switch (os) {\n                case 'Mac OS X':\n                    osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\n                    break;\n\n                case 'Android':\n                    osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\n                    break;\n\n                case 'iOS':\n                    osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\n                    osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\n                    break;\n            }\n\n\n            osVersion = osVersion.replace(/_/g, '.')\n\n\n            var information = {\n                browser: browser.name,\n                browserVersion: browser.version,\n                os: os,\n                osVersion: osVersion\n            };\n\n\n            $.post(\n                helpers._url('check', 'CompatibilityChecker', 'taoClientDiagnostic'),\n                information,\n                function(data){\n                    var $os = $('#os'),\n                        $browser = $('#browser');\n                    $info.find('.loading').remove();\n                    $os.append(information.os + ' ' + information.osVersion);\n\n                    $browser.append(information.browser + ' ' + information.browserVersion);\n                    $os.removeClass('hidden');\n                    $browser.removeClass('hidden');\n\n                    $('#message').html('<img height=\"45\" src=\"' + data.image +'\"/>').removeClass('hidden');\n                },\n                \"json\"\n            );\n\n        },\n        _browser : function(nAgt){\n            var browser = {};\n            var nameOffset, verOffset, ix;\n            var found = false;\n\n            browser.name = navigator.appName;\n            browser.version = '' + parseFloat(navigator.appVersion);\n\n            for (var id in navigatorName) {\n                var nav = navigatorName[id];\n                if ((verOffset = nAgt.indexOf(nav.name)) !== -1) {\n                    browser.name = nav.string;\n                    browser.version = nAgt.substring(verOffset + nav.name.length + 1);\n                    if (nav.name === 'Trident/') {\n                        browser.version = nAgt.substring(nAgt.indexOf('rv:') + 3);\n                    }\n                    if ((verOffset = nAgt.indexOf('Version')) !== -1) {\n                        browser.version = nAgt.substring(verOffset + 8);\n                    }\n                    found = true;\n                    break;\n                }\n            }\n\n            // Default\n            if (!found && (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n                browser.name = nAgt.substring(nameOffset, verOffset);\n                browser.version = nAgt.substring(verOffset + 1);\n                if (browser.name.toLowerCase() === browser.name.toUpperCase()) {\n                    browser.name = navigator.appName;\n                }\n            }\n            // trim the version string\n            if ((ix = browser.version.indexOf(';')) !== -1){browser.version = browser.version.substring(0, ix);}\n            if ((ix = browser.version.indexOf(' ')) !== -1){browser.version = browser.version.substring(0, ix);}\n            if ((ix = browser.version.indexOf(')')) !== -1){browser.version = browser.version.substring(0, ix);}\n\n            majorVersion = parseInt('' + browser.version, 10);\n            if (isNaN(majorVersion)) {\n                browser.version = '' + parseFloat(navigator.appVersion);\n                majorVersion = parseInt(navigator.appVersion, 10);\n            }\n\n            return browser;\n\n        },\n\n        _osName : function(nAgt){\n            for (var id in operatingStrings) {\n                var op = operatingStrings[id];\n                if (op.regex.test(nAgt)) {\n                    return op.name;\n                }\n            }\n            return \"-\";\n        }\n\n    };\n\n    return Controller.init();\n});\n\n","var operatingStrings = [\n    {\"name\":\"Windows 95\",             \"regex\":/(Windows 95|Win95|Windows_95)/},\n    {\"name\":\"Windows ME\",             \"regex\":/(Win 9x 4.90|Windows ME)/},\n    {\"name\":\"Windows 98\",             \"regex\":/(Windows 98|Win98)/},\n    {\"name\":\"Windows CE\",             \"regex\":/Windows CE/},\n    {\"name\":\"Windows 2000\",           \"regex\":/(Windows NT 5.0|Windows 2000)/},\n    {\"name\":\"Windows XP\",             \"regex\":/(Windows NT 5.1|Windows XP)/},\n    {\"name\":\"Windows Server 2003\",    \"regex\":/Windows NT 5.2/},\n    {\"name\":\"Windows Vista\",          \"regex\":/Windows NT 6.0/},\n    {\"name\":\"Windows 7\",              \"regex\":/(Windows 7|Windows NT 6.1)/},\n    {\"name\":\"Windows 8.1\",            \"regex\":/(Windows 8.1|Windows NT 6.3)/},\n    {\"name\":\"Windows 8\",              \"regex\":/(Windows 8|Windows NT 6.2)/},\n    {\"name\":\"Windows NT 4.0\",         \"regex\":/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},\n    {\"name\":\"Windows ME\",             \"regex\":/Windows ME/},\n    {\"name\":\"Open BSD\",               \"regex\":/OpenBSD/},\n    {\"name\":\"Sun OS\",                 \"regex\":/SunOS/},\n    {\"name\":\"Android\",                \"regex\":/Android/},\n    {\"name\":\"iOS\",                    \"regex\":/(iPhone|iPad|iPod)/},\n    {\"name\":\"Mac OS X\",               \"regex\":/Mac OS X/},\n    {\"name\":\"Mac OS\",                 \"regex\":/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},\n    {\"name\":\"QNX\",                    \"regex\":/QNX/},\n    {\"name\":\"UNIX\",                   \"regex\":/UNIX/},\n    {\"name\":\"BeOS\",                   \"regex\":/BeOS/},\n    {\"name\":\"OS/2\",                   \"regex\":/OS\\/2/},\n    {\"name\":\"Linux\",                  \"regex\":/(Linux|X11)/},\n    {\"name\":\"Search Bot\",             \"regex\":/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/}\n];\n\nvar navigatorName = [\n    {name : \"Opera\",    string : \"Opera\"},\n    {name : \"MSIE\",     string : \"Microsoft Internet Explorer\"},\n    {name : \"Chrome\",   string : \"Chrome\"},\n    {name : \"Safari\",   string : \"Safari\"},\n    {name : \"Firefox\",  string : \"Firefox\"},\n    {name : \"Trident/\", string : \"Microsoft Internet Explorer\"}\n];\n\ndefine(\"taoClientDiagnostic/controller/CompatibilityChecker/data\", function(){});\n\n"]}