{"version":3,"sources":["routes.js","../tools/fixedDecimals.js","../tools/stats.js","../../taoQtiItem/qtiItem/core/qtiClasses.js","../../taoQtiItem/qtiItem/helper/util.js","../../taoQtiItem/qtiItem/helper/rendererConfig.js","../../taoQtiItem/qtiItem/core/Element.js","../../taoQtiItem/qtiItem/core/Loader.js","../../taoQtiItem/qtiItem/helper/interactionHelper.js","../../taoQtiItem/qtiRunner/core/Renderer.js","../../taoItems/assets/manager.js","../../taoItems/assets/strategies.js","../../taoQtiItem/qtiCommonRenderer/renderers/config.js","../../taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","CompatibilityChecker/diagnostics.js"],"names":["define","CompatibilityChecker","actions","index","fixedDecimals","value","decimals","shift","Math","pow","abs","round","Number","_","stats","list","fieldName","variance","avg","med","middle","getValue","results","sum","sum2","min","MAX_VALUE","max","count","values","isFunction","item","forEach","undefined","push","diff","sqrt","sort","floor","ceil","average","median","key","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","img","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","util","buildSerial","prefix","id","chars","i","charAt","random","length","buildId","usedIds","suffix","exists","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","this","qtiClass","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","Error","each","collectionName","collection","split","nameToken","elt","parent","find","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","original","slash","node","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","options","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","Class","rendererConfig","_instances","Element","extend","serial","relatedItem","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","prop","document","trigger","removeData","removeAttr","removeAttributes","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","location","getRelatedItem","setRelatedItem","recursive","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","body","resolveUrl","merge","getData","rendering","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","qtiClasses","loadPortableCustomElementData","portableElement","typeIdentifier","entryPoint","properties","libraries","Loader","classesLocation","qti","setClassesLocation","getRequiredClasses","union","loadRequiredClasses","callback","reload","requiredClasses","required","requiredClass","_this","require","QtiClass","prototype","call","getLoadedClasses","keys","loadItemData","Qti","loadContainer","outcomes","outcome","buildOutcome","addOutcomeDeclaration","feedbacks","feedback","buildElement","addModalFeedback","stylesheets","addStylesheet","responses","response","buildResponse","addResponseDeclaration","feedbackRules","forIn","fbData","buildSimpleFeedbackRule","setResponseProcessing","buildResponseProcessing","setNamespaces","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","template","howMatch","defaultValue","correctResponse","correctResponses","size","mapping","mapEntries","areaMapping","mappingAttributes","feedbackRule","setCondition","condition","comparedValue","feedbackOutcome","feedbackThen","modalFeedbacks","feedbackElse","comparedOutcome","rp","processingType","xml","bodyObject","bodyData","elements","eltData","setElement","defaults","bdy","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","interaction","buildInteractionChoices","loadPciData","choices","set","matchSet","choice","addChoice","gapImgs","addGapImg","val","text","_alt","setMathML","mathML","annotations","encoding","setAnnotation","pci","pic","convertChoices","outputType","c","findChoices","inputType","getChoice","getChoiceByIdentifier","shuffleChoices","r","f","j","n","k","tmp","serialToIdentifier","choiceSerial","Handlebars","Promise","interactionHelper","themeLoader","getDocumentBaseUrl","window","protocol","host","pathname","_isValidRenderer","valid","classCorrect","_renderableClasses","pos","slice","subClass","_renderableSubclasses","_dependencies","_defaults","Renderer","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","opts","getOption","getAssetManager","assetManager","getThemeLoader","qtiSubclass","res","decorators","isObject","before","after","renderDirect","tpl","compile","setResponse","qtiInteraction","$container","getResponse","resetResponse","getState","setState","destroy","getLoadedRenderers","register","renderersLocations","load","self","themes","base","available","theme","path","intersection","reqClass","deps","requiredSubClasses","unload","setShuffledChoices","identificationType","pluck","getShuffledChoices","reshuffle","returnedType","getChoices","getRenderers","getLocations","url","resolve","getAbsoluteUrl","relUrl","warn","absUrl","runtimeLocations","runtimeLocation","baseUrl","build","defaultOptions","NewRenderer","apply","urlUtil","assetManagerFactory","strategies","cache","parseUrl","_strategies","addStrategy","strategy","handle","setStrategies","newStrategies","setData","resolved","inputUrl","hasOwnProperty","parse","result","resolveBy","clearCache","isRelative","slashcat","directory","encodeURIComponent","file","external","isAbsolute","toString","base64","isBase64","taomedia","context","assetStrategies","itemThemes","get","portableAssetStrategy","source","relative","root_url","locations","simpleChoice.choiceInteraction","simpleChoice.orderInteraction","simpleAssociableChoice.matchInteraction","simpleAssociableChoice.associateInteraction","config","async","helpers","loadItem","done","qtiJsonFile","urlTokens","extension","fullpath","s","contexts","paths","loader","itemData","duration","start","end","performance","now","appendTo","remove","_second","_defaultTimeout","_defaultOccurrencesCount","_defaultSamples","_sampleBaseId","performancesTester","samples","occurrences","timeout","idx","_samples","map","sample","nb","tests","cb","partial","iterations","series","err","measures","_kilo","_mega","_downloadData","10KB","threshold","100KB","1MB","10MB","100MB","download","timeoutId","request","bandwidth","Date","XMLHttpRequest","open","setRequestHeader","onload","bytes","seconds","speed","clearTimeout","onerror","delay","send","bandwidthTester","bind","__","loadingBar","displayTestResult","status","$bar","$indicator","message","isNumber","label","fadeIn","animate","left","percentage","outerWidth","updateTestResult","score","displaySummary","total","getStatus","summaryThresholds","checkBrowser","info","WhichBrowser","browser","os","information","browserVersion","version","osVersion","alias","post","_url","storeData","details","omit","checkBandwidth","unit","bandwidthUnit","tt","ideal","testTakers","maxTT","maxTestTakers","st","bandwidthThresholds","checkPerformance","optimal","performanceOptimal","range","performanceThreshold","cursor","thresholds","displayDetails","$detailsTable","empty","line","step","len","getResultConfig","$result","$testTriggerBtn","$detailsBtn","scores","$feedbackBox","on","hide","assign","performancesMin","performancesMax","performancesAverage","bandwidthMin","bandwidthMax","bandwidthAverage","stop","error"],"mappings":"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":"taoClientDiagnostic/controller/routes.js","sourcesContent":["define('taoClientDiagnostic/controller/routes',[],function(){\n    return {\n        'CompatibilityChecker' : {\n            'actions' : {\n                'index' : 'controller/compatibilityChecker/index'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function () {\n    'use strict';\n\n    /**\n     * Rounds a value to a fixed number of decimals\n     * @param {Number} value The value to round\n     * @param {Number} decimals The number of decimal\n     * @returns {Number}\n     */\n    var fixedDecimals = function fixedDecimals(value, decimals) {\n        var shift = Math.pow(10, Math.abs(decimals || 1));\n        return Math.round(Number(value) * shift) / shift || 0;\n    };\n\n    return fixedDecimals;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/stats',[\n    'lodash',\n    'taoClientDiagnostic/tools/fixedDecimals'\n], function (_, fixedDecimals) {\n    'use strict';\n\n    /**\n     * Computes some stats on a list from a particular field\n     * @param {Array|Object} list The list to compute stats on\n     * @param {String|Function} fieldName The name of the field to process, or a callback method returning the value\n     * @param {Number} [decimals] Optional number of fixed decimals for values\n     * @returns {{min: Number, max: Number, sum: Number, count: Number, average: Number, median: Number, variance: Number, values: *}}\n     */\n    var stats = function stats(list, fieldName, decimals) {\n        var sum = 0;\n        var sum2 = 0;\n        var min = Number.MAX_VALUE;\n        var max = 0;\n        var variance;\n        var count = 0;\n        var values = [];\n        var avg;\n        var med;\n        var middle;\n        var getValue;\n        var results;\n\n        if (_.isFunction(fieldName)) {\n            getValue = fieldName;\n        } else {\n            getValue = function(item) {\n                return item && item[fieldName] || 0;\n            };\n        }\n\n        // process 1st pass stats: compute sum, min and max values\n        _.forEach(list, function(item) {\n            var value;\n            if (undefined !== item) {\n                value = getValue(item);\n                values.push(value);\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n                sum += value;\n                count++;\n            }\n        });\n\n        // compute the average value\n        avg = sum / (count || 1);\n\n        // process 2nd pass stats: compute variance\n        _.forEach(values, function(value) {\n            var diff = value - avg;\n            sum2 += diff * diff;\n        });\n\n        // compute de standard variance\n        variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\n\n        // compute the median value\n        values.sort();\n        middle = count / 2;\n        med = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\n\n        results = {\n            min : min,\n            max : max,\n            sum : sum,\n            count : count,\n            average : avg,\n            median : med,\n            variance : variance\n        };\n\n        if (decimals) {\n            _.forEach(results, function(value, key) {\n                results[key] = fixedDecimals(value, decimals);\n            });\n        }\n\n        results.values = list;\n        return results;\n    };\n\n    return stats;\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\n    return {\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\n        'math' : 'taoQtiItem/qtiItem/core/Math',\n        'img' : 'taoQtiItem/qtiItem/core/Img',\n        'object' : 'taoQtiItem/qtiItem/core/Object',\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiItem/core/Include'\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * Common basic util functions\n */\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\n    'use strict';\n\n    var util = {\n\n        buildSerial : function buildSerial(prefix){\n            var id = prefix || '';\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n            for(var i = 0; i < 22; i++){\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId : function buildId(item, prefix){\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIds();\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(_.contains(usedIds, id)){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier : function buildIdentifier(item, prefix, useSuffix){\n\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if(prefix){\n                prefix = prefix.replace(/_[0-9]+$/ig, '_') //detect incremental id of type choice_12, response_3, etc.\n                               .replace(/[^a-zA-Z0-9_]/ig, '_')\n                               .replace(/(_)+/ig, '_');\n                if(useSuffix){\n                    suffix = '_' + i;\n                }\n            } else {\n                prefix = this.qtiClass;\n                suffix = '_' + i;\n            }\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(usedIds[id]){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\n\n            var found = null;\n\n            if(_.isString(collectionNames)){\n                collectionNames = [collectionNames];\n            }\n\n            if(_.isArray(collectionNames)){\n\n                _.each(collectionNames, function(collectionName){\n\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken){\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if(elt){\n                        found = {'parent' : element, 'element' : elt};\n                        return false;//break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt){\n\n                        if(_.isFunction(elt.find)){\n                            found = elt.find(searchedSerial);\n                            if(found){\n                                return false;//break the each loop\n                            }\n                        }\n\n                    });\n\n                    if(found){\n                        return false;//break the each loop\n                    }\n\n                });\n\n            }else{\n\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\n            if(ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4){\n                    if($2.indexOf(':')>0){\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<'+ $1 + ns + ':'+$2+$3+$4+'>';\n                });\n                return markup;\n            }\n            return markup;\n\n        },\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\n                namespaces.push(ns);\n                return '<'+slash+node+'>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args){\n\n        var options = {\n            data : {},\n            placeholder : null,\n            subclass : '',\n            renderer : null\n        };\n        \n        _.each(args, function(arg){\n            if(arg){\n                if(arg.isRenderer){\n                    options.renderer = arg;\n                }else if(arg instanceof $ && arg.length){\n                    options.placeholder = arg;\n                }else if(_.isString(arg)){\n                    options.subclass = arg;\n                }else if(_.isPlainObject(arg)){\n                    options.data = arg;\n                }else{\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n        \n        return options;\n    };\n    \n    return rendererConfigHelper;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiItem/core/Element',[\n    'jquery',\n    'lodash',\n    'class',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Class, util, rendererConfig){\n    'use strict';\n\n    var _instances = {};\n\n    var Element = Class.extend({\n        qtiClass : '',\n        serial : '',\n        relatedItem : null,\n        init : function(serial, attributes){\n\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(!serial){\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\n            }\n\n            if(!_instances[serial]){\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            }else{\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                this.initContainer(arguments[2] || '');\n            }\n            if(typeof this.initObject === 'function'){\n                this.initObject();\n            }\n        },\n        is : function(qtiClass){\n            return (qtiClass === this.qtiClass);\n        },\n        placeholder : function(){\n            return '{{' + this.serial + '}}';\n        },\n        getSerial : function(){\n            return this.serial;\n        },\n        getUsedIdentifiers : function(){\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for(var i in elts){\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if(id){\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds : function getUsedIds(){\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt){\n                var id = elt.attr('id');\n                if(id && !_.contains(usedIds, id)){\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.attributes[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.attr(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.attributes[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.data(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.metaData[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData : function(name){\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr : function(name){\n            return this.removeAttributes(name);\n        },\n        setAttributes : function(attributes){\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes : function(){\n            return _.clone(this.attributes);\n        },\n        removeAttributes : function(attrNames){\n            if(typeof (attrNames) === 'string'){\n                attrNames = [attrNames];\n            }\n            for(var i in attrNames){\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements : function(){\n            var elts = {};\n            function append(element){\n                elts[element.getSerial()] = element;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if(typeof this.initContainer === 'function'){\n                append(this.getBody());\n            }\n            if(typeof this.initObject === 'function'){\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v){\n                if(Element.isA(v, '_container')){\n                    append(v);\n                }else if(_.isArray(v)){\n                    _.each(v, function(v){\n                        if(Element.isA(v, '_container')){\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses : function(){\n\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt){\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find : function(serial){\n\n            var found = null;\n\n            if(typeof this.initObject === 'function'){\n                var object = this.getObject();\n                if(object.serial === serial){\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\n                }\n            }\n\n            if(!found && typeof this.initContainer === 'function'){\n                found = this.getBody().find(serial, this);\n            }\n\n            return found;\n        },\n        parent : function(){\n            var item = this.getRelatedItem();\n            if(item){\n                var found = item.find(this.getSerial());\n                if(found){\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        setRelatedItem : function(item, recursive){\n\n            recursive = (typeof recursive === 'undefined') ? true : recursive;\n\n            if(Element.isA(item, 'assessmentItem')){\n                this.relatedItem = item;\n                var composingElts = this.getComposingElements();\n                for(var i in composingElts){\n                    composingElts[i].setRelatedItem(item, false);\n                }\n            }\n\n        },\n        getRelatedItem : function(){\n            var ret = null;\n            if(Element.isA(this.relatedItem, 'assessmentItem')){\n                ret = this.relatedItem;\n            }\n            return ret;\n        },\n        setRenderer : function(renderer){\n            if(renderer && renderer.isRenderer){\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for(var serial in elts){\n                    elts[serial].setRenderer(renderer);\n                }\n            }else{\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer : function(){\n            return this.renderer;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n\n            var tplData = {},\n                defaultData = {\n                    'tag' : this.qtiClass,\n                    'serial' : this.serial,\n                    'attributes' : this.getAttributes()\n                };\n\n            if(!_renderer){\n                throw 'render: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if(typeof this.initObject === 'function'){\n                defaultData.object = {\n                    attributes : this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            var rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if(args.placeholder){\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender : function(data, altClassName, renderer){\n\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender({}, '', renderer);\n            }\n\n            if(_renderer){\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            }else{\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer : function($scope, subclass){\n            var renderer = this.getRenderer();\n            if(renderer){\n                return renderer.getContainer(this, $scope, subclass);\n            }else{\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                type : this.qtiClass,\n                attributes : this.getAttributes()\n            };\n\n            if(typeof this.initContainer === 'function'){\n                arr.body = this.getBody().toArray();\n            }\n            if(typeof this.initObject === 'function'){\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty : function(){\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass : function(className){\n            var clazz = this.attr('class') || '';\n            if(!_containClass(clazz, className)){\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass : function(className){\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass : function(className){\n\n            var clazz = this.attr('class') || '';\n            if(clazz){\n\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if(clazz){\n                    this.attr('class', clazz);\n                }else{\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass : function(className, state) {\n\n            if(typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if(this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset : function(){\n            return Element.issetElement(this.serial);\n        },\n        unset : function(){\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className){\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass){\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\n    };\n\n    Element.getElementBySerial = function(serial){\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial){\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial){\n\n        var element = Element.getElementBySerial(serial);\n\n        if(element){\n\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt){\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n//@todo : move this to the ../helper directory\ndefine('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element'], function(_, Class, qtiClasses, Element){\n\n    var Loader = Class.extend({\n        init : function(item, classesLocation){\n\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n\n            this.item = item || null;//starts either from scratch or with an existing item object\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\n        },\n        setClassesLocation : function(qtiClasses){\n            _.extend(this.classesLocation, qtiClasses);\n            return this;\n        },\n        getRequiredClasses : function(data){\n            var ret = [];\n            for(var i in data){\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'relatedItem'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                }else if(typeof(data[i]) === 'object' && i !== 'responseRules'){    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n            return ret;\n        },\n        loadRequiredClasses : function(data, callback, reload){\n\n            var requiredClasses = this.getRequiredClasses(data, reload), required = [];\n\n            for(var i in requiredClasses){\n                var requiredClass = requiredClasses[i];\n                if(this.classesLocation[requiredClass]){\n                    required.push(this.classesLocation[requiredClass]);\n                }else{\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\n                }\n            }\n\n            var _this = this;\n            require(required, function(){\n                _.each(arguments, function(QtiClass){\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(_this, _this.qti);\n            });\n        },\n        getLoadedClasses : function(){\n            return _.keys(this.qti);\n        },\n        loadItemData : function(data, callback){\n\n            var _this = this;\n            _this.loadRequiredClasses(data, function(Qti){\n                var i;\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\n\n                    //unload an item from it's serial (in case of a reload)\n                    if(data.serial){\n                        Element.unsetElement(data.serial);\n                    }\n\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    _this.loadContainer(_this.item.getBody(), data.body);\n\n                    for(i in data.outcomes){\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\n                        if(outcome){\n                            _this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n                    for(i in data.feedbacks){\n                        var feedback = _this.buildElement(data.feedbacks[i]);\n                        if(feedback){\n                            _this.item.addModalFeedback(feedback);\n                        }\n                    }\n                    for(i in data.stylesheets){\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\n                        if(stylesheet){\n                            _this.item.addStylesheet(stylesheet);\n                        }\n                    }\n                    \n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    for(i in data.responses){\n                        var response = _this.buildResponse(data.responses[i]);\n                        if(response){\n                            _this.item.addResponseDeclaration(response);\n\n                            var feedbackRules = data.responses[i].feedbackRules;\n                            if(feedbackRules){\n                                _.forIn(feedbackRules, function(fbData, serial){\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData, response);\n                                });\n                            }\n                        }\n                    }\n                    \n                    if(data.responseProcessing){\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\n                    }\n                    _this.item.setNamespaces(data.namespaces);\n                }\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, _this.item);\n                }\n            });\n        },\n        loadAndBuildElement : function(data, callback){\n\n            var _this = this;\n\n            _this.loadRequiredClasses(data, function(Qti){\n\n                var element = _this.buildElement(data);\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        loadElement : function(element, data, callback){\n\n            var _this = this;\n            this.loadRequiredClasses(data, function(){\n                _this.loadElementData(element, data);\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements : function(data, callback){\n\n            var _this = this;\n\n            if(_this.item){\n\n                this.loadRequiredClasses(data, function(){\n\n                    var allElements = _this.item.getComposingElements();\n\n                    for(var i in data){\n                        var elementData = data[i];\n                        if(elementData && elementData.qtiClass && elementData.serial){\n                            //find and update element\n                            if(allElements[elementData.serial]){\n                                _this.loadElementData(allElements[elementData.serial], elementData);\n                            }\n                        }\n                    }\n\n                    if(typeof(callback) === 'function'){\n                        callback.call(_this, _this.item);\n                    }\n                });\n            }else{\n                throw 'QtiLoader : cannot load elements in empty item';\n            }\n\n        },\n        buildResponse : function(data){\n\n            var response = this.buildElement(data);\n\n            response.template = data.howMatch || null;\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if(_.size(data.mapping)){\n                response.mapEntries = data.mapping;\n            }else if(_.size(data.areaMapping)){\n                response.mapEntries = data.areaMapping;\n            }else{\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule : function(data, response){\n\n            var feedbackRule = this.buildElement(data);\n            \n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n            \n//            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n            \n            //associate the compared outcome to the feedbacks if applicable\n            var response = feedbackRule.comparedOutcome;\n            if(feedbackRule.feedbackThen){\n                feedbackRule.feedbackThen.data('relatedResponse', response);\n            }\n            if(feedbackRule.feedbackElse){\n                feedbackRule.feedbackElse.data('relatedResponse', response);\n            }\n            \n            return feedbackRule;\n        },\n        buildOutcome : function(data){\n            var outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n            return outcome;\n        },\n        buildResponseProcessing : function(data){\n            var rp = this.buildElement(data);\n            if(data && data.processingType){\n                if(data.processingType === 'custom'){\n                    rp.xml = data.data;\n                    rp.processingType = 'custom';\n                }else{\n                    rp.processingType = 'templateDriven';\n                }\n            }\n            return rp;\n        },\n        loadContainer : function(bodyObject, bodyData){\n            if(!Element.isA(bodyObject, '_container')){\n                throw 'bodyObject must be a QTI Container';\n            }\n\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\n                for(var serial in bodyData.elements){\n                    var eltData = bodyData.elements[serial];\n                    //check if class is loaded:\n                    var element = this.buildElement(eltData);\n                    if(element){\n                        bodyObject.setElement(element, bodyData.body);\n                    }\n                }\n                bodyObject.body(bodyData.body);\n            }else{\n                throw 'wrong bodydata format';\n            }\n        },\n        buildElement : function(elementData){\n            var elt = null;\n            if(elementData && elementData.qtiClass && elementData.serial){\n                var className = elementData.qtiClass;\n                if(this.qti[className]){\n                    elt = new this.qti[className](elementData.serial);\n                    this.loadElementData(elt, elementData);\n                }else{\n                    throw 'the qti element class does not exist: ' + className;\n                }\n            }else{\n                throw 'wrong elementData format';\n            }\n            return elt;\n        },\n        loadElementData : function(element, data){\n\n            //merge attributes when loading element data\n            var attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if(element.body && data.body){\n                if(element.bdy){\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if(element.object && data.object){\n                if(element.object){\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if(Element.isA(element, 'interaction')){\n                this.loadInteractionData(element, data);\n            }else if(Element.isA(element, 'choice')){\n                this.loadChoiceData(element, data);\n            }else if(Element.isA(element, 'math')){\n                this.loadMathData(element, data);\n            }else if(Element.isA(element, 'infoControl')){\n                this.loadPicData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData : function(interaction, data){\n            if(Element.isA(interaction, 'blockInteraction')){\n                if(data.prompt){\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if(Element.isA(interaction, 'customInteraction')){\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices : function(interaction, data){\n\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if(data.choices){\n                if(Element.isA(interaction, 'matchInteraction')){\n                    for(var set = 0; set < 2; set++){\n                        if(!data.choices[set]){\n                            throw 'missing match set #' + set;\n                        }\n                        var matchSet = data.choices[set];\n                        for(var serial in matchSet){\n                            var choice = this.buildElement(matchSet[serial]);\n                            if(choice){\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                }else{\n                    for(var serial in data.choices){\n                        var choice = this.buildElement(data.choices[serial]);\n                        if(choice){\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\n                    if(data.gapImgs){\n                        for(var serial in data.gapImgs){\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\n                            if(gapImg){\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        },\n        loadChoiceData : function(choice, data){\n            if(Element.isA(choice, 'textVariableChoice')){\n                choice.val(data.text);\n            }else if(Element.isA(choice, 'gapImg')){\n                //has already been taken care of in buildElement()\n            }else if(Element.isA(choice, 'containerChoice')){\n                //has already been taken care of in buildElement()\n            }\n        },\n        loadObjectData : function(object, data){\n            object.setAttributes(data.attributes);\n            //@todo: manage object like a container\n            if(data._alt){\n                if(data._alt.qtiClass === 'object'){\n                    object._alt = Loader.buildElement(data._alt);\n                }else{\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData : function(math, data){\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, function(value, encoding){\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadPciData : function(pci, data){\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData : function(pic, data){\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    function loadPortableCustomElementData(portableElement, data){\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.properties = data.properties;\n        portableElement.libraries = data.libraries;\n    }\n\n    return Loader;\n});\n\n","/**\n * Common helper functions\n */\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\n    return {\n        convertChoices : function(choices, outputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                if(Element.isA(c, 'choice')){\n                    switch(outputType){\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n\n                }else if(_.isArray(c)){\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices : function(interaction, choices, inputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                var choice;\n                if(_.isString(c)){\n                    if(inputType === 'serial'){\n                        choice = interaction.getChoice(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else if(inputType === 'identifier'){\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else{\n                        ret.push(c);\n                    }\n                }else if(_.isArray(c)){\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                }else{\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices : function(choices){\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for(var i in choices){\n                if(Element.isA(choices[i], 'choice')){\n                    var choice = choices[i];\n                    if(choice.attr('fixed')){\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                }else{\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for(var n = 0; n < r.length - 1; n++){\n                if(f[n]){\n                    continue;\n                }\n                var k = -1;\n                do{\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                }while(f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier : function(interaction, choiceSerial){\n            var choice = interaction.getChoice(choiceSerial);\n            if(choice){\n                return choice.id();\n            }else{\n                return '';\n            }\n        }\n    }\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * A factory to create a QTI renderer.\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiRunner/core/Renderer',[\n    'lodash',\n    'jquery',\n    'handlebars',\n    'core/promise',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/interactionHelper',\n    'ui/themeLoader'\n], function(_, $, Handlebars, Promise, Element, interactionHelper, themeLoader){\n    'use strict';\n\n    var _isValidRenderer = function(renderer){\n\n        var valid = true;\n\n        if(typeof (renderer) !== 'object'){\n            return false;\n        }\n\n        var classCorrect = false;\n        if(renderer.qtiClass){\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\n                classCorrect = true;\n            }else{\n                var pos = renderer.qtiClass.indexOf('.');\n                if(pos > 0){\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\n                    var subClass = renderer.qtiClass.slice(pos + 1);\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if(!classCorrect){\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if(!renderer.template){\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    var _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        'img',\n        'math',\n        'object',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    var _dependencies = {\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock : ['_container'],\n        associateInteraction : ['simpleAssociableChoice'],\n        choiceInteraction : ['simpleChoice'],\n        gapMatchInteraction : ['gap', 'gapText'],\n        graphicAssociateInteraction : ['associableHotspot'],\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction : ['hotspotChoice'],\n        hotspotInteraction : ['hotspotChoice'],\n        hottextInteraction : ['hottext'],\n        inlineChoiceInteraction : ['inlineChoice'],\n        matchInteraction : ['simpleAssociableChoice'],\n        orderInteraction : ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    var _renderableSubclasses = {\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    var _defaults = {\n        shuffleChoices : true\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl(){\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    var Renderer = function(options){\n\n        /**\n         * Store the registered renderer location\n         */\n        var _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        var _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        var _getClassRenderer = function(qtiClass){\n            var ret = null;\n            if(_renderers[qtiClass]){\n                ret = _renderers[qtiClass];\n            }else{\n                var pos = qtiClass.indexOf('.');\n                if(pos > 0){\n                    qtiClass = qtiClass.slice(0, pos);\n                    if(_renderers[qtiClass]){\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value){\n            if(typeof (key) === 'string'){\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts){\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key){\n            if(typeof (key) === 'string' && options[key]){\n                return options[key];\n            }\n            return null;\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager(){\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader(){\n            return this.themeLoader;\n        };\n\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass){\n\n            var res;\n            var ret        = '';\n            var tplFound   = false;\n            var qtiClass   = qtiSubclass || element.qtiClass;\n            var renderer   = _getClassRenderer(qtiClass);\n            var decorators = this.getOption('decorators');\n\n            if(!renderer || !_.isFunction(renderer.template)){\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.before)){\n\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n\n            //post rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.after)){\n\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass){\n\n            var ret = data,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getData) === 'function'){\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data){\n            return Handlebars.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\n\n            var ret = null,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                ret = renderer.getContainer(qtiElement, $scope);\n            }else{\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiElement.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer && typeof (renderer.render) === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.setResponse) === 'function'){\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\n                    if($container instanceof $ && $container.length){\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getResponse) === 'function'){\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.resetResponse) === 'function'){\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass){\n\n            var ret = false;\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.getState)){\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState =  function(qtiInteraction, state, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.setState)){\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function(){\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations){\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses){\n           var self = this;\n            var required = [];\n\n            if(options.themes){\n\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index){\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load();\n            }\n\n            if(requiredClasses){\n                if(_.isArray(requiredClasses)){\n\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass){\n                        var deps = _dependencies[reqClass];\n                        if(deps){\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass){\n\n                        if(_renderableSubclasses[qtiClass]){\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass){\n                                if(_locations[qtiClass + '.' + subclass]){\n                                    required.push(_locations[qtiClass + '.' + subclass]);\n                                }else if(_locations[qtiClass]){\n                                    required.push(_locations[qtiClass]);\n                                }else{\n                                    throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\n                                }\n                            });\n                        } else {\n                            if(_locations[qtiClass] === false){\n                                _renderers[qtiClass] = false;//mark this class as not renderable\n                            }else if(_locations[qtiClass]){\n                                required.push(_locations[qtiClass]);\n                            }else{\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n\n            }else{\n                required = _.values(_locations);\n            }\n\n            var _this = this;\n            require(required, function(){\n\n                _.each(arguments, function(clazz){\n                    if(_isValidRenderer(clazz)){\n                        _renderers[clazz.qtiClass] = clazz;\n                    }\n                });\n\n                if(typeof (callback) === 'function'){\n                    callback.call(_this, _renderers);\n                }\n            });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload(){\n            if(this.themeLoader){\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType){\n            if(Element.isA(interaction, 'interaction')){\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(interactionHelper.findChoices(interaction, choices, identificationType), 'serial');\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\n            var choices = [];\n            var shuffled = [];\n            var serial, i;\n\n            if(Element.isA(interaction, 'interaction')){\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if(!this.shuffledChoices[serial] || reshuffle){\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        this.shuffledChoices[serial] = [];\n                        for(i = 0; i < 2; i++){\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                //otherwise get the choices from the serials\n                } else {\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        _.forEach(choices, function(choice, index){\n                            if(index < 2){\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial){\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial){\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if(returnedType === 'serial' || returnedType === 'identifier'){\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function(){\n            return _renderers;\n        };\n\n        this.getLocations = function(){\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url){\n            if(!options.assetManager){\n                return url;\n            }\n            if(typeof url === 'string' && url.length > 0){\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl){\n\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if(this.getOption('userRelativeUrl')){\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if(/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)){\n                //already absolute or base64 encoded\n                return relUrl;\n            }else{\n\n                var absUrl = '';\n                var runtimeLocations = this.getOption('runtimeLocations');\n\n                if(runtimeLocations && _.size(runtimeLocations)){\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\n                        if(relUrl.indexOf(typeIdentifier) === 0){\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false;//break\n                        }\n                    });\n                }\n\n                if(absUrl){\n                    return absUrl;\n                }else{\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n\n            }\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    return {\n\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build : function(renderersLocations, name, defaultOptions){\n            var NewRenderer = function(){\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * The asset manager proposes you to resolve your asset URLs for you!\n * You need to add the resolution strategies, it will then evaluate each strategy until the right one is found\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/manager',[\n    'lodash',\n    'util/url'\n], function(_, urlUtil){\n    'use strict';\n\n    /**\n     * @typedef AssetStrategy Defines a way to resolve an asset path\n     * @property {String} name - the strategy name\n     * @property {assetStrategyHandle} handle - how to resolve the strategy.\n     */\n\n    /**\n     * @callback assetStrategyHandle\n     * @param {String|Object} url - the URL to resolved. If parseUrl, it's an object that contains host, port, search, queryString, etc.\n     * @param {Object} data - the context data\n     * @returns {String?} falsy if not resolved otherwise the resolved URL\n     */\n\n\n    /**\n     * The assetManagerFactory create a new assetManager with the given resolution stratgies and a data context.\n     *\n     * @example\n     *   //define AssetStrategies with a name and a handle method\n     *   var strategies = [{\n     *       name : 'external',\n     *       handle : function(url, data){\n     *           if(/^http/.test(url)){\n     *               return path;\n     *           }\n     *       }\n     *   }, {\n     *       name : 'relative',\n     *       handle : function(url, data){\n     *           if(/^((\\.\\/)|(\\w\\/))/){\n     *               return data.baseUrl + '/' + url ;\n     *           }\n     *       }\n     *   }]);\n     *\n     *   var assetManager = assetManagerFactory(strategies, { baseUrl : 'http://t.oa/public/assets/' });\n     *   assetManager.resolve('http://foo/bar.png'); //will resolved using external\n     *   assetManager.resolve('bar.png'); //will resolved using relative strategy\n     *\n     * @param {AssetStrategy[]} strategies - the strategies\n     * @param {Object} data - the context data\n     * @param {Object} [options] - the manager options\n     * @param {Boolean} [options.parseUrl = true] - If the URL to give to the stragies should be parsed or given as it is.\n     * @param {Boolean} [options.cache] - resolve the same URL only once and store the result in memory.\n     *\n     * @exports taoItems/assets/manager\n     * @namespace assetManagerFactory\n     */\n    var assetManagerFactory = function assetManagerFactory(strategies, data, options) {\n\n        var cache  = {};\n\n        strategies = _.isArray(strategies) ? strategies : [strategies];\n        data       = data || {};\n        options    = _.defaults(options || {}, {\n            parseUrl : true\n        });\n\n        /**\n         * A brand new asset manager is created by the factory\n         */\n        var assetManager = {\n\n            /**\n             * The stack of strategies that would be used to resolve the asset path\n             * @type {AssetStrategy[]}\n             */\n            _strategies : [],\n\n            /**\n             * Add an asset resolution strategy.\n             * The strategies will be evaluated in the order they've been added.\n             * @param {AssetStrategy} strategy - the strategy to add\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            addStrategy : function addStrategy (strategy){\n\n                if(!_.isPlainObject(strategy) || !_.isFunction(strategy.handle) || !_.isString(strategy.name)){\n                    throw new TypeError('An asset resolution strategy is an object with a handle method and a name');\n                }\n\n                this._strategies.push(strategy);\n            },\n\n            /**\n             * Change the strategies\n             * @param {AssetStrategy[]} strategies - the strategies\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            setStrategies : function setStrategies(newStrategies){\n                var self = this;\n\n                this._strategies = [];\n\n                //assign the strategies to the assetManager\n                _.forEach(newStrategies, function(strategy){\n\n                    //if it's an object we add it directly\n                    if(_.isPlainObject(strategy)){\n                        assetManager.addStrategy(strategy);\n\n                    //if it's a function, we create the strategy with a generated name\n                    } else if(_.isFunction(strategy)){\n                        self.addStrategy({\n                            name   : 'strategy_' + (self._strategies.length + 1),\n                            handle : strategy\n                        });\n                    }\n                });\n            },\n\n            /**\n             * Set context data\n             * @param {String|Object} [key] - the key of the data to set or the data values if it's an object\n             * @param {*} [value] - the value to set if a key is given\n             */\n            setData : function setData(key, value){\n                if(_.isString(key) && typeof value !== 'undefined'){\n                    data[key] = value;\n                } else if(_.isPlainObject(key)){\n                    data = key;\n                }\n            },\n\n            /**\n             * Get context data\n             * @param {String} [key] - if we want the value of a particuar key\n             * @returns {Object|*} all the data or the proprety value if key is given\n             */\n            getData : function getData(key){\n                if(_.isString(key)){\n                    return data[key];\n                }\n                return data;\n            },\n\n            /**\n             * Resolve the given URL against the strategies\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolve : function resolve(url){\n                var resolved;\n                var inputUrl;\n\n                //if caching try to load the value from the cache\n                if(options.cache && cache.hasOwnProperty(url)){\n                    return cache[url];\n                }\n\n                //parse the url ?\n                inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n\n                //call strategies handlers, in their order until once returns somethin\n                _.forEach(this._strategies, function(strategy){\n                    var result = strategy.handle(inputUrl, data);\n                    if(result){\n                        resolved = result;\n                        return false;\n                    }\n                });\n\n                resolved = resolved || '';\n\n                if(options.cache){\n                    cache[url] = resolved;\n                }\n\n                return resolved;\n            },\n\n            /**\n             * Resolve the given URL against the strategy identified by the given name\n             * @param {String} name - the strategy name\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolveBy : function resolveBy(name, url){\n                var inputUrl;\n                var resolved = '';\n                var strategy = _.find(this._strategies, {name : name});\n                if(strategy){\n                    //parse the url ?\n                    inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n                    resolved = strategy.handle(inputUrl, data);\n                }\n                return resolved;\n            },\n\n            /**\n             * When the cache is used, it could be useful to clear the cache\n             */\n            clearCache : function clearCache(){\n                if(options.cache){\n                    cache = {};\n                }\n            }\n        };\n\n        assetManager.setStrategies(strategies);\n\n        return assetManager;\n    };\n\n    return assetManagerFactory;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Provides common strategies to resolved assets\n * that may be used by any type of items.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/strategies',[\n    'util/url'\n], function(urlUtil){\n    'use strict';\n\n    /**\n     * Unrelated strategies accessible by there name.\n     * Remember to not use the whole object, but each one in an array since the order matters.\n     *\n     * @exports taoItems/assets/strategies\n     */\n    var strategies = {\n\n        //the baseUrl concats the baseUrl in data if the url is relative\n        baseUrl : {\n            name : 'baseUrl',\n            handle : function handleBaseUrl(url, data){\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) ){\n\n                    //is slashcat we manage slash concact\n                    if(data.slashcat === true){\n                        return data.baseUrl.replace(/\\/$/, '') + '/' + url.directory.replace(/^\\.\\//, '').replace(/^\\//, '')\n                            + encodeURIComponent(url.file.replace(/^\\.\\//, '').replace(/^\\//, ''));\n                    }\n\n                    return data.baseUrl + url.directory.replace(/^\\.?\\//, '') + encodeURIComponent(url.file.replace(/^\\.?\\//, ''));\n                }\n            }\n        },\n\n        //absolute URL are just left intact\n        external : {\n            name : 'external',\n            handle : function handleExternal(url, data){\n                if(urlUtil.isAbsolute(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //the base64 encoded resources are also left intact\n        base64 : {\n            name : 'base64',\n            handle : function handleB64(url){\n                if(urlUtil.isBase64(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //special tao media protocol\n        taomedia : {\n            name : 'taomedia',\n            handle : function handleTaoMedia(url, data){\n                //either a baseUrl is given or if empty, taomedia resources are managed as relative resources\n                var baseUrl = data.baseUrl || './';\n                if( (typeof url === 'object' && url.protocol === 'taomedia') ||\n                    (/^taomedia:\\/\\//.test(url.toString())) ){\n                    return baseUrl + url.toString();\n                }\n            }\n        }\n    };\n    return strategies;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/config',[\n    'lodash',\n    'context',\n    'ui/themes',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies',\n], function(_, context, themes, assetManagerFactory, assetStrategies){\n    'use strict';\n\n    var itemThemes = themes.get('items');\n\n    //stratgy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the ususal way and should be called only using resolveBy.\n    var portableAssetStrategy = {\n        name : 'portableElementLocation',\n        handle : function handlePortableElementLocation(url){\n            if(url.source === url.relative){\n                return window.location.pathname.replace(/([^\\/]*)$/, '') + url.toString() + '/';\n            }\n        }\n    };\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory([{\n            name : 'theme',\n            handle : function handleTheme(url){\n                if(itemThemes && url.path && (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))){\n                    return context.root_url + url.toString();\n                }\n            }\n        },\n        assetStrategies.taomedia,\n        assetStrategies.external,\n        assetStrategies.base64,\n        assetStrategies.baseUrl,\n        portableAssetStrategy\n    ], {baseUrl : ''});\n\n    //renderers locations\n    var locations = {\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        '_simpleFeedbackRule' : false,\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        'outcomeDeclaration' : false,\n        'responseDeclaration' : false,\n        'responseProcessing' : false,\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        'hotspotChoice' : false,\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        'associableHotspot' : false,\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    return {\n        name:'commonRenderer',\n        locations: locations,\n        options:   {\n            assetManager: assetManager,\n            themes : itemThemes\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Qti Item Common Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Renderer',[\n    'taoQtiItem/qtiRunner/core/Renderer',\n    'taoQtiItem/qtiCommonRenderer/renderers/config'\n], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/performances/tester',[\n    'jquery',\n    'lodash',\n    'async',\n    'context',\n    'helpers',\n    'taoClientDiagnostic/tools/stats',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'lib/polyfill/performance-now'\n], function($, _, async, context, helpers, stats, Loader, Renderer) {\n    'use strict';\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * Default timeout duration\n     * @type {Number}\n     * @private\n     */\n    var _defaultTimeout = 30 * _second;\n\n    /**\n     * Default number of renderings by samples\n     * @type {Number}\n     * @private\n     */\n    var _defaultOccurrencesCount = 10;\n\n    /**\n     * List of default samples\n     * @type {Array}\n     */\n    var _defaultSamples = [\n        'taoClientDiagnostic/tools/performances/data/sample1/',\n        'taoClientDiagnostic/tools/performances/data/sample2/',\n        'taoClientDiagnostic/tools/performances/data/sample3/'\n    ];\n\n    /**\n     * Base text used to build sample identifiers\n     * @type {String}\n     * @private\n     */\n    var _sampleBaseId = 'sample';\n\n    /**\n     * Loads a page inside a div and compute the time to load\n     * @param {Object} data The descriptor of the page to load\n     * @param {Function} done A callback function called to provide the result\n     */\n    function loadItem(data, done){\n\n        //item location config\n        var qtiJsonFile = data.url + 'qti.json';\n        var urlTokens = data.url.split('/');\n        var extension = urlTokens[0];\n        var fullpath = require.s.contexts._.config.paths[extension];\n        var baseUrl = data.url.replace(extension, fullpath);\n        var loader = new Loader();\n        var renderer = new Renderer({\n            baseUrl : baseUrl       // compatibility mode for legacy installations\n        });\n\n        // check needed by compatibility mode for legacy installations\n        if (renderer.getAssetManager) {\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\n        }\n\n        require(['json!'+qtiJsonFile], function(itemData){\n\n            loader.loadItemData(itemData, function(item){\n                renderer.load(function(){\n\n                    var $container,\n                        duration,\n                        start,\n                        end,\n                        result;\n\n                    //start right before rendering\n                    start = window.performance.now();\n\n                    //set renderer\n                    item.setRenderer(this);\n\n                    //render markup\n                    $container = $('<div>').appendTo('body');\n                    $container.append(item.render());\n\n                    //execute javascript\n                    item.postRender();\n\n                    //remove item\n                    $container.remove();\n\n                    //done\n                    end = window.performance.now();\n\n                    duration = (end - start) / _second;\n\n                    result = {\n                        id : data.id,\n                        url : data.url,\n                        duration: duration\n                    };\n\n                    done(null, result);\n\n                }, this.getLoadedClasses());\n            });\n\n        });\n\n    }\n\n    /**\n     * Performs a browser performances test by running a heavy page\n     *\n     * @param {Array} [samples]\n     * @param {Number} [occurrences]\n     * @param {Number} [timeout]\n     * @returns {Object}\n     */\n    var performancesTester = function performancesTester(samples, occurrences, timeout) {\n        var idx = 0;\n        var _samples = _.map(!_.isEmpty(samples) && samples || _defaultSamples, function(sample) {\n            idx ++;\n            return {\n                id : _sampleBaseId + idx,\n                url : sample,\n                timeout : timeout || _defaultTimeout,\n                nb : occurrences || _defaultOccurrencesCount\n            };\n        });\n\n        // add one occurrence on the first sample to obfuscate the time needed to load the runner\n        _samples[0].nb ++;\n\n        return {\n            /**\n             * Performs a performances test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start: function start(done) {\n                var tests = [];\n                _.forEach(_samples, function(data) {\n                    var cb = _.partial(loadItem, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                async.series(tests, function(err, measures) {\n                    var decimals = 2;\n                    var results;\n\n                    if(err && !measures.length){\n                        //something went wrong\n                        throw err;\n                    }\n\n                    // remove the first result to obfuscate the time needed to load the runner\n                    measures.shift();\n\n                    results = stats(measures, 'duration', decimals);\n\n                    done(results.average, results);\n                });\n            }\n        };\n    };\n\n    return performancesTester;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\n    'lodash',\n    'async',\n    'context',\n    'taoClientDiagnostic/tools/stats',\n    'taoClientDiagnostic/tools/fixedDecimals',\n    'lib/polyfill/performance-now'\n], function(_, async, context, stats, fixedDecimals) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {Number}\n     * @private\n     */\n    var _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {Number}\n     * @private\n     */\n    var _mega = _kilo * _kilo;\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * List of descriptors defining the data sets to download.\n     * - file : path of the file containing the test data\n     * - size : the given size of the file\n     * - timeout : the timeout for the download\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\n     * - nb : number of download iterations\n     * @type {Object}\n     */\n    var _downloadData = {\n        \"10KB\" : {\n            id : '10KB',\n            file : 'data/bin10KB.data',\n            size : 10 * _kilo,\n            timeout : _second,\n            threshold : 0,\n            nb : 10\n        },\n        \"100KB\" : {\n            id : '100KB',\n            file : 'data/bin100KB.data',\n            size : 100 * _kilo,\n            timeout : 2 * _second,\n            threshold : 0,\n            nb : 5\n        },\n        \"1MB\" : {\n            id : '1MB',\n            file : 'data/bin1MB.data',\n            size : _mega,\n            timeout : 20 * _second,\n            threshold : 0,\n            nb : 3\n        },\n        \"10MB\" : {\n            id : '10MB',\n            file : 'data/bin10MB.data',\n            size : 10 * _mega,\n            timeout : 20 * _second,\n            threshold : 8,\n            nb : 3\n        },\n        \"100MB\" : {\n            id : '100MB',\n            file : 'data/bin100MB.data',\n            size : 100 * _mega,\n            timeout : 60 * _second,\n            threshold : 20,\n            nb : 3\n        }\n    };\n\n    /**\n     * Download a data set as described by the provided descriptor and compute the duration.\n     * @param {Object} data The data set descriptor to use for download\n     * @param {Function} cb A callback function called at the end of the download.\n     * This callback is also called if a timeout breaks the download;\n     */\n    var download = function download(data, cb) {\n        var self = this;\n        var start, end;\n        var timeoutId;\n        var url;\n        var request;\n\n        if (data.threshold && this.bandwidth < data.threshold) {\n            return cb('threshold');\n        }\n\n        url = context.root_url + '/taoClientDiagnostic/views/js/tools/bandwidth/' + data.file + '?' + Date.now();\n        request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.setRequestHeader('Accept', 'application/octet-stream');\n\n        request.onload = function onRequestLoad () {\n            var duration;\n            var bytes;\n            var seconds;\n            var speed;\n\n            end = window.performance.now();\n            clearTimeout(timeoutId);\n\n            duration = end - start;\n            bytes = data.size;\n            seconds = duration / _second;\n\n            // speed in Mbps\n            speed = ((bytes * 8) / seconds) / _mega;\n\n            self.bandwidth = Math.max(self.bandwidth, speed);\n\n            return cb(null, {\n                id : data.id,\n                file : data.file,\n                size : data.size,\n                duration : duration,\n                speed : speed\n            });\n        };\n        request.onerror = function onRequestError (err) {\n            clearTimeout(timeoutId);\n            cb(err);\n        };\n\n        timeoutId = _.delay(cb, data.timeout, 'timeout');\n        start = window.performance.now();\n        request.send();\n    };\n\n    /**\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\n     *\n     * @returns {{start: Function}}\n     */\n    var bandwidthTester = function bandwidthTester (){\n        return {\n            /**\n             * Performs a bandwidth test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start : function start(done){\n                var self = this;\n                var tests = [];\n                _.forEach(_downloadData, function(data) {\n                    var cb = _.bind(download, self, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                this.bandwidth = 0;\n\n                async.series(tests, function(err, measures) {\n                    var duration = 0;\n                    var size = 0;\n                    var decimals = 2;\n                    var getValue;\n                    var results;\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n\n                    getValue = function(value) {\n                        var speed = 0;\n\n                        if (value) {\n                            duration += value.duration;\n                            size += value.size;\n\n                            speed = value.speed;\n                            value.speed = fixedDecimals(speed, decimals);\n                        }\n\n                        return speed;\n                    };\n\n                    results = stats(measures, getValue, decimals);\n\n                    results.duration = fixedDecimals(duration / _second, decimals);\n                    results.size = size;\n\n                    done(results.average, results);\n                });\n            }\n        };\n    };\n\n    return bandwidthTester;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n *\n * @author dieter <dieter@taotesting.com>\n */\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/diagnostics',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'helpers',\n    'layout/loading-bar',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/bandwidth/tester',\n    'ui/feedback'\n], function ($, _, __, async, helpers, loadingBar, performancesTester, bandwidthTester, feedback) {\n    'use strict';\n\n    /**\n     * The typical bandwidth needed for a test taker (Mbps)\n     * @type {Number}\n     */\n    var bandwidthUnit = 0.16;\n\n    /**\n     * The thresholds for optimal bandwidth. One by bar.\n     * @type {Array}\n     */\n    var testTakers = [\n        45\n    ];\n\n    /**\n     * Maximum number of test takers to display\n     * @type {Number}\n     */\n    var maxTestTakers = 100;\n\n    /**\n     * The threshold for optimal performances\n     * @type {Number}\n     */\n    var performanceOptimal = 0.025;\n\n    /**\n     * The threshold for minimal performances\n     * @type {Number}\n     */\n    var performanceThreshold = 0.25;\n\n    /**\n     * A list of thresholds\n     * @type {Array}\n     */\n    var thresholds = [{\n        threshold: 0,\n        message: __('Very slow performance'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average performance'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good performance'),\n        type: 'success'\n    }];\n\n    /**\n     * A list of thresholds for bandwidth\n     * @type {Array}\n     */\n    var bandwidthThresholds = [{\n        threshold: 0,\n        message: __('Low bandwidth'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average bandwidth'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good bandwidth'),\n        type: 'success'\n    }];\n\n    /**\n     * A list of thresholds for summary\n     * @type {Array}\n     */\n    var summaryThresholds = [{\n        threshold: 0,\n        message: __('Your system requires a compatibility update, please contact your system administrator.'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Your system is not optimal, please contact your system administrator.'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Your system is fully compliant.'),\n        type: 'success'\n    }];\n\n    /**\n     * Gets the correct status message for a given percentage\n     * @param {Number} percentage\n     * @returns {String}\n     */\n    var getStatus = function(thresholds, percentage) {\n        var len = thresholds.length;\n        var status = thresholds[0];\n        var i, step;\n\n        percentage = Math.max(0, Math.min(100, Math.round(percentage)));\n\n        for(i = 1; i < len; i++) {\n            step = thresholds[i];\n            if (step && percentage >= step.threshold) {\n                status = step;\n            } else {\n                break;\n            }\n        }\n\n        status = _.clone(status);\n        status.percentage = percentage;\n\n        return status;\n    };\n\n    /**\n     * Gets the config related to a particular checker\n     * @param {String} name\n     * @returns {Object}\n     */\n    var getResultConfig = function(name) {\n        var $result = $('[data-result=\"' + name + '\"]');\n        var config = $result.data('config');\n        return config || {};\n    };\n\n    /**\n     * Set indicator and display bar\n     *\n     * @param {string} name\n     * @param {object} status\n     */\n    function displayTestResult(name, status) {\n        var $bar = $('[data-result=\"' + name + '\"]'),\n            $indicator = $bar.find('.quality-indicator');\n\n        $bar.find('.feedback')\n            .removeClass('feedback-error feedback-warning feedback-success')\n            .addClass('feedback-' + status.type)\n            .find('.msg').text(status.message);\n\n        $bar.find('.icon')\n            .removeClass('icon-error icon-warning icon-success')\n            .addClass('icon-' + status.type);\n\n        if (_.isNumber(status.label) || _.isString(status.label)) {\n            $indicator.attr('title', status.label);\n            $indicator.toggleClass('wide', status.label.toString().length > 2);\n        }\n\n        $bar.fadeIn(function() {\n            if($indicator.length){\n                $indicator.animate({\n                    left: (status.percentage * $bar.outerWidth() / 100) - ($indicator.outerWidth() / 2)\n                });\n            }\n        });\n    }\n\n    /**\n     * Sets a particular bar, and update the total\n     * @param {String} name\n     * @param {Object} status\n     * @param {Object} score\n     */\n    function updateTestResult(name, status, score) {\n        displayTestResult(name, status);\n        if (score) {\n            score[name] = status;\n        }\n    }\n\n    /**\n     * Displays the results summary\n     * @param {Object} score\n     */\n    function displaySummary(score) {\n        var total = _.min(score, 'percentage');\n        displayTestResult('total', getStatus(summaryThresholds, total.percentage));\n    }\n\n    /**\n     * Performs a browser checks\n     * @param {Function} done\n     */\n    function checkBrowser(done) {\n        var info = new WhichBrowser();\n        var browser = info.browser;\n        var os = info.os;\n        var information = {\n            browser: browser && browser.name || __('Unknown browser'),\n            browserVersion: browser && browser.version && browser.version.original || __('Unknown version'),\n            os: os && os.name || __('Unknown OS'),\n            osVersion: os && os.version && (os.version.alias || os.version.original) || __('Unknown version')\n        };\n\n        // which browser\n        $.post(\n            helpers._url('check', 'CompatibilityChecker', 'taoClientDiagnostic'),\n            information,\n            function(data){\n                if ('success' === data.type) {\n                    data.percentage = 100;\n                } else {\n                    data.percentage = 0;\n                }\n                done(data, information);\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     * Sends the detailed stats to the server\n     * @param {String} type The type of stats\n     * @param {Object} details The stats details\n     * @param {Function} done A callback method called once server has responded\n     */\n    function storeData(type, details, done) {\n        details = _.omit(details, 'values');\n        details.type = type;\n\n        $.post(\n            helpers._url('storeData', 'CompatibilityChecker', 'taoClientDiagnostic'),\n            details,\n            done,\n            \"json\"\n        );\n    };\n\n    /**\n     * Performs a browser bandwidth check\n     * @param {Object} config\n     * @param {Number} [config.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {Number} [config.ideal] - The ideal number of simultaneous test takers\n     * @param {Number} [config.max] - Maximum number of test takers to display on a bar\n     * @param {Function} done\n     */\n    function checkBandwidth(config, done) {\n        var unit = config.unit || bandwidthUnit;\n        var tt = config.ideal || testTakers;\n        var maxTT = config.max || maxTestTakers;\n\n        if (!_.isArray(tt)) {\n            tt = [tt];\n        }\n\n        bandwidthTester().start(function(average, details) {\n            storeData('bandwidth', details, function(){\n                var status = [];\n\n                _.forEach(tt, function(threshold) {\n                    var max = threshold * unit;\n                    var st = getStatus(bandwidthThresholds, details.max / max * 100);\n                    var nb = Math.floor(details.max / unit);\n\n                    if (nb > maxTT) {\n                        nb = '>' + maxTT;\n                    }\n\n                    st.label = nb;\n                    status.push(st);\n                });\n\n                done(status, details);\n            });\n        });\n    }\n\n    /**\n     * Performs a browser performances check\n     * @param {Object} config\n     * @param {Array} [config.samples] - A list of samples to render in order to compute the rendering performances\n     * @param {Number} [config.occurrences] - The number of renderings by samples\n     * @param {Number} [config.timeout] - Max allowed duration for a sample rendering\n     * @param {Number} [config.optimal] - The threshold for optimal performances\n     * @param {Number} [config.threshold] - The threshold for minimal performances\n     * @param {Function} done\n     */\n    function checkPerformance(config, done) {\n        var optimal = config.optimal || performanceOptimal;\n        var range = Math.abs(optimal - (config.threshold || performanceThreshold));\n\n        performancesTester(config.samples, config.occurrences, config.timeout * 1000).start(function(average, details) {\n            var cursor = range - average + optimal;\n            var status = getStatus(thresholds, cursor / range * 100);\n\n            storeData('performance', details, function(){\n                done(status, details);\n            });\n        });\n    }\n\n    /**\n     * Updates the displayed details\n     * @param {Object} information\n     */\n    function displayDetails(information) {\n        var $detailsTable = $('#details');\n        $('tbody', $detailsTable).empty();\n        $.each(information, function(index, object) {\n            var line = '<td>'+ object.message +'</td><td>'+ object.value +'</td>';\n            $('tbody', $detailsTable).append('<tr>' + line + '</tr>');\n        });\n    }\n\n    /**\n     *\n     */\n    var init = function init(){\n        var $testTriggerBtn = $('[data-action=\"test-launcher\"]');\n        var $detailsBtn = $('[data-action=\"display-details\"]');\n        var status, information = {};\n        var scores = {};\n        var $feedbackBox = $('#feedback-box');\n\n        $testTriggerBtn.on('click', function(){\n            loadingBar.start();\n            $testTriggerBtn.hide();\n\n            async.series([function(cb) {\n                checkBrowser(function(status, details) {\n                    _.assign(information, {\n                        browser: {message: __('Web browser'), value: details.browser + ' ' + details.browserVersion},\n                        os: {message: __('Operating system'), value: details.os + ' ' + details.osVersion}\n                    });\n                    displayDetails(information);\n                    updateTestResult('browser', status, scores);\n                    cb();\n                });\n            }, function(cb) {\n                checkPerformance(getResultConfig('performance'), function(status, details) {\n                    _.assign(information, {\n                        performancesMin : {message : __('Minimum rendering time'), value:details.min + ' s'},\n                        performancesMax : {message : __('Maximum rendering time'), value:details.max + ' s'},\n                        performancesAverage : {message : __('Average rendering time'), value:details.average + ' s'}\n                    });\n                    displayDetails(information);\n                    updateTestResult('performance', status, scores);\n                    cb();\n                });\n            }, function(cb) {\n                checkBandwidth(getResultConfig('bandwidth-0'), function(status, details) {\n                    _.assign(information, {\n                        bandwidthMin : {message : __('Minimum bandwidth'), value:details.min + ' Mbps'},\n                        bandwidthMax : {message : __('Maximum bandwidth'), value:details.max + ' Mbps'},\n                        bandwidthAverage : {message : __('Average bandwidth'), value:details.average + ' Mbps'}\n                    });\n                    displayDetails(information);\n\n                    _.forEach(status, function(st, i) {\n                        updateTestResult('bandwidth-' + i, st, scores);\n                    });\n\n                    cb();\n                });\n            }], function() {\n                displaySummary(scores);\n                loadingBar.stop();\n            });\n        });\n\n        $detailsBtn.on('click', function() {\n            loadingBar.start();\n            $detailsBtn.hide();\n\n            displayDetails(information);\n\n            status = getStatus(thresholds, 68);\n            displayTestResult('details', status);\n\n            loadingBar.stop();\n        });\n\n\n        if(!!$feedbackBox.data('error')){\n            feedback().error($feedbackBox.data('error'));\n        }\n        if($feedbackBox.data('message')){\n            feedback().error($feedbackBox.data('message'));\n        }\n    };\n\n    /**\n     * @exports\n     */\n    return init();\n});\n\n"]}