{"version":3,"sources":["routes.js","../tools/message.js","Authenticator/login.js","../tools/diagnostic/status.js","../tools/fixedDecimals.js","../tools/stats.js","../../taoQtiItem/qtiItem/core/qtiClasses.js","../../taoQtiItem/qtiItem/helper/util.js","../../taoQtiItem/qtiItem/helper/rendererConfig.js","../../taoQtiItem/qtiItem/core/Element.js","../../taoQtiItem/qtiItem/core/Loader.js","../../taoQtiItem/qtiItem/helper/interactionHelper.js","../../taoQtiItem/qtiRunner/core/Renderer.js","../../taoItems/assets/manager.js","../../taoItems/assets/strategies.js","../../taoQtiItem/portableElementRegistry/factory/factory.js","../../taoQtiItem/qtiCreator/helper/qtiElements.js","../../taoQtiItem/portableElementRegistry/factory/ciRegistry.js","../../taoQtiItem/portableElementRegistry/ciRegistry.js","../../taoQtiItem/portableElementRegistry/factory/icRegistry.js","../../taoQtiItem/portableElementRegistry/icRegistry.js","../../taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy.js","../../taoQtiItem/qtiCommonRenderer/renderers/config.js","../../taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","../tools/upload/tester.js","../tools/getconfig.js","../tools/browser/tester.js","../tools/diagnostic/tpl/main!tpl","../tools/diagnostic/tpl/result!tpl","../../taoClientDiagnosticCss/diagnostics!css","../tools/diagnostic/diagnostic.js","CompatibilityChecker/diagnostics.js","../templates/diagnostic/main!tpl","Diagnostic/diagnostic.js","Diagnostic/index.js","../../../../../../../../../../../onLayerEnd0.js"],"names":["define","Authenticator","actions","login","CompatibilityChecker","index","Diagnostic","diagnostic","$","feedback","showMessages","container","$feedbackBox","data","error","showMessage","start","_","__","diagnosticStatusFactory","thresholds","performances","performancesThresholds","bandwidth","bandwidthThresholds","upload","uploadThresholds","summary","summaryThresholds","getThresholds","name","this","getStatus","percentage","len","i","step","status","Math","max","min","round","parseInt","isString","isArray","length","threshold","quality","clone","message","type","fixedDecimals","value","decimals","shift","pow","abs","Number","stats","list","fieldName","variance","avg","med","middle","getValue","results","sum","sum2","MAX_VALUE","count","values","isFunction","item","forEach","undefined","push","diff","sqrt","sort","floor","ceil","average","median","key","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","img","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","util","buildSerial","prefix","id","chars","charAt","random","buildId","usedIds","suffix","exists","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","Error","each","collectionName","collection","split","nameToken","elt","parent","find","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","original","slash","node","uniq","rendererConfigHelper","getOptionsFromArguments","args","options","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","Class","rendererConfig","_instances","Element","extend","qtiClass","serial","relatedItem","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","prop","document","trigger","removeData","removeAttr","removeAttributes","getAttributes","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","location","getRelatedItem","setRelatedItem","recursive","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","body","resolveUrl","merge","getData","rendering","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","qtiClasses","loadPortableCustomElementData","portableElement","typeIdentifier","entryPoint","properties","libraries","Loader","classesLocation","qti","setClassesLocation","getRequiredClasses","union","loadRequiredClasses","callback","reload","requiredClasses","required","requiredClass","_this","require","QtiClass","prototype","call","getLoadedClasses","keys","loadItemData","Qti","loadContainer","outcomes","outcome","buildOutcome","addOutcomeDeclaration","feedbacks","buildElement","addModalFeedback","stylesheets","addStylesheet","responses","response","buildResponse","addResponseDeclaration","feedbackRules","forIn","fbData","buildSimpleFeedbackRule","setResponseProcessing","buildResponseProcessing","setNamespaces","setSchemaLocations","schemaLocations","setApipAccessibility","apipAccessibility","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","template","howMatch","defaultValue","correctResponse","correctResponses","size","mapping","mapEntries","areaMapping","mappingAttributes","feedbackRule","setCondition","condition","comparedValue","feedbackOutcome","feedbackThen","modalFeedbacks","feedbackElse","comparedOutcome","rp","processingType","xml","bodyObject","bodyData","elements","eltData","setElement","defaults","bdy","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","interaction","buildInteractionChoices","loadPciData","choices","set","matchSet","choice","addChoice","gapImgs","addGapImg","val","text","_alt","setMathML","mathML","annotations","encoding","setAnnotation","pci","pic","convertChoices","outputType","c","findChoices","inputType","getChoice","getChoiceByIdentifier","shuffleChoices","r","f","j","n","k","tmp","serialToIdentifier","choiceSerial","Handlebars","Promise","interactionHelper","themeLoader","getDocumentBaseUrl","window","protocol","host","pathname","_isValidRenderer","valid","classCorrect","_renderableClasses","pos","slice","subClass","_renderableSubclasses","_dependencies","_defaults","Renderer","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","opts","getOption","getCustomMessage","elementName","messageKey","messages","compile","getAssetManager","assetManager","getThemeLoader","qtiSubclass","res","decorators","isObject","before","after","renderDirect","tpl","setResponse","qtiInteraction","$container","getResponse","resetResponse","getState","setState","destroy","getLoadedRenderers","register","renderersLocations","load","self","themes","base","available","theme","path","intersection","reqClass","deps","requiredSubClasses","unload","setShuffledChoices","identificationType","pluck","getShuffledChoices","reshuffle","returnedType","getChoices","getRenderers","getLocations","url","resolve","getAbsoluteUrl","relUrl","warn","absUrl","runtimeLocations","runtimeLocation","baseUrl","build","defaultOptions","NewRenderer","apply","urlUtil","assetManagerFactory","strategies","cache","parseUrl","_strategies","addStrategy","strategy","handle","setStrategies","newStrategies","setData","resolved","inputUrl","hasOwnProperty","parse","result","resolveBy","clearCache","prependToUrl","slashcat","directory","encodeURIComponent","file","isRelative","itemCssNoCache","bust","Date","now","external","isAbsolute","toString","base64","isBase64","taomedia","eventifier","_requirejs","methods","_loaded","__providers","_registry","get","version","last","registerProvider","moduleName","resetProviders","loadProviders","reject","providerLoadingStack","provider","getAllVersions","all","versions","map","getRuntime","assign","runtime","label","getCreator","creator","getBaseUrl","loadRuntimes","loadPromise","then","loadStack","requireConfigAliases","reduce","acc","_pcis","config","paths","catch","err","loadCreators","requiredCreators","pciModel","hook","creators","creatorHook","getTypeIdentifier","findIndex","module","QtiElements","classes","itemBody","parents","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","br","textRun","blockInteraction","inlineInteraction","printedVariable","templateElement","templateBlock","templateInline","drawingInteraction","graphicInteraction","containable","children","getAllowedContainersElements","getAllowedContainers","jqSelector","substring","filter","getParentClasses","aClass","model","intersect","getChildClasses","getAllowedContents","checked","contain","child","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","description","icon","short","tags","portableElementRegistry","qtiElements","getAuthoringData","on","ciRegistry","registry","providers","icRegistry","getBaseUrlByIdentifier","source","relative","fullmatch","relPath","context","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","root_url","locations","simpleChoice.choiceInteraction","simpleChoice.orderInteraction","simpleAssociableChoice.matchInteraction","simpleAssociableChoice.associateInteraction","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","async","helpers","loadItem","done","qtiJsonFile","urlTokens","extension","fullpath","s","contexts","loader","itemData","duration","end","performance","appendTo","remove","_second","_defaultTimeout","_defaultOccurrencesCount","_defaultSamples","_sampleBaseId","performancesTester","samples","occurrences","timeout","idx","_samples","sample","nb","tests","cb","partial","iterations","series","measures","_kilo","_mega","_downloadData","10KB","100KB","1MB","10MB","download","timeoutId","request","XMLHttpRequest","open","setRequestHeader","onload","bytes","seconds","speed","clearTimeout","onerror","delay","send","bandwidthTester","bind","urlHelper","generateStr","possible","route","str","ajax","xhr","startTime","addEventListener","evt","lengthComputable","passedTime","time","loaded","uploadTester","jqXHR","omit","getConfig","getTesterUrl","action","controller","navigator","screen","params","e","ua","userAgent","ActiveXObject","opera","chrome","createElement","Worker","applicationCache","history","pushState","documentElement","webkitRequestFullScreen","w","width","h","height","_url","browserTester","initConfig","success","hb","depth0","partials","program1","stack1","helper","buffer","header","hash","functionType","escapeExpression","program3","info","compilerInfo","title","inverse","noop","fn","program","button","legend","program2","program4","wide","program5","program7","program9","helperMissing","program10","details","component","statusFactory","mainTpl","resultTpl","diagnosticFactory","setTemplate","controls","$start","$component","$status","$results","run","$btn","closest","$result","$details","actionStore","actionCheck","_defaultsBrowser","_defaultsBandwidth","unit","ideal","_defaultsPerformances","optimal","changeStatus","html","store","post","storeParams","checkBrowser","browser","information","browserVersion","os","osVersion","addResult","checkPerformances","range","cursor","performancesMin","performancesMax","performancesAverage","checkBandwidth","bandwidthMin","bandwidthMax","bandwidthAverage","bandwidthUnit","testTakers","maxTestTakers","st","checkUpload","avgSpeed","totalSpeed","maxSpeed","uploadAvg","uploadMax","$indicator","fadeIn","animate","left","outerWidth","prepare","empty","finish","doCheck","method","scores","total","loadingBar","$contentArea","stop","actionbar","diagnosticTpl","cssScope","taoDiagnosticRunnerCtlr","installTester","workstation","$workstation","getElement","which","preventDefault","removeProp","$list","$panel","indexUrl","workstationUrl","buttons","href","top","close","renderTo","fail","encode","dialog","formatNumber","number","digits","factor","taoDiagnosticCtlr","selection","dataType","datatable","encodeHtml","removeUrl","dataset","installedExtension","diagnosticUrl","serviceUrl","performancesConfig","performancesOptimal","performancesRange","diagnosticStatus","tools","deliveryUrl","massAction","autoRender","autoDestroy","onOkBtn","transform","loading","selectable","d","getElementsByTagName","cssText","createTextNode"],"mappings":"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","file":"routes.js","sourcesContent":["define('taoClientDiagnostic/controller/routes',{\r\n    'Authenticator' : {\r\n        'actions' : {\r\n            'login' : 'controller/Authenticator/login'\r\n        }\r\n    },\r\n    'CompatibilityChecker' : {\r\n        'actions' : {\r\n            'index' : 'controller/CompatibilityChecker/diagnostics'\r\n        }\r\n    },\r\n    'Diagnostic' : {\r\n        'actions' : {\r\n            'index' : 'controller/Diagnostic/index',\r\n            'diagnostic' : 'controller/Diagnostic/diagnostic'\r\n        }\r\n    }\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @author Camille Moyon <camille@taotesting.com>\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/message',[\r\n    'jquery',\r\n    'ui/feedback'\r\n], function ($, feedback) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Displays the messages set into a markup\r\n     * @param {String|jQuery|HTMLElement} container\r\n     */\r\n    function showMessages(container) {\r\n        var $feedbackBox = $(container);\r\n\r\n        if ($feedbackBox.data('error')) {\r\n            feedback().error($feedbackBox.data('error'));\r\n        }\r\n        if ($feedbackBox.data('message')) {\r\n            feedback().error($feedbackBox.data('message'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @exports\r\n     */\r\n    return showMessages;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @author Camille Moyon <camille@taotesting.com>\r\n */\r\ndefine('taoClientDiagnostic/controller/Authenticator/login',[\r\n    'jquery',\r\n    'taoClientDiagnostic/tools/message'\r\n], function ($, showMessage) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @exports\r\n     */\r\n    return {\r\n        start: function() {\r\n            showMessage('#feedback-box');\r\n        }\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n * @author dieter <dieter@taotesting.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/diagnostic/status',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n'\r\n], function ($, _, __) {\r\n    'use strict';\r\n\r\n    /**\r\n     * A list of thresholds for performances check\r\n     * @type {Array}\r\n     */\r\n    var performancesThresholds = [{\r\n        threshold: 0,\r\n        message: __('Very slow performances'),\r\n        type: 'error'\r\n    }, {\r\n        threshold: 33,\r\n        message: __('Average performances'),\r\n        type: 'warning'\r\n    }, {\r\n        threshold: 66,\r\n        message: __('Good performances'),\r\n        type: 'success'\r\n    }];\r\n\r\n    /**\r\n     * A list of thresholds for bandwidth check\r\n     * @type {Array}\r\n     */\r\n    var bandwidthThresholds = [{\r\n        threshold: 0,\r\n        message: __('Low bandwidth'),\r\n        type: 'error'\r\n    }, {\r\n        threshold: 33,\r\n        message: __('Average bandwidth'),\r\n        type: 'warning'\r\n    }, {\r\n        threshold: 66,\r\n        message: __('Good bandwidth'),\r\n        type: 'success'\r\n    }];\r\n\r\n    /**\r\n     * A list of thresholds for bandwidth check\r\n     * @type {Array}\r\n     */\r\n    var uploadThresholds = [{\r\n        threshold: 0,\r\n        message: __('Low upload speed'),\r\n        type: 'error'\r\n    }, {\r\n        threshold: 33,\r\n        message: __('Average upload speed'),\r\n        type: 'warning'\r\n    }, {\r\n        threshold: 66,\r\n        message: __('Good upload speed'),\r\n        type: 'success'\r\n    }];\r\n\r\n    /**\r\n     * A list of thresholds for summary\r\n     * @type {Array}\r\n     */\r\n    var summaryThresholds = [{\r\n        threshold: 0,\r\n        message: __('Your system requires a compatibility update, please contact your system administrator.'),\r\n        type: 'error'\r\n    }, {\r\n        threshold: 33,\r\n        message: __('Your system is not optimal, please contact your system administrator.'),\r\n        type: 'warning'\r\n    }, {\r\n        threshold: 66,\r\n        message: __('Your system is fully compliant.'),\r\n        type: 'success'\r\n    }];\r\n\r\n    /**\r\n     * Gets a diagnostic factory manager\r\n     * @returns {Object}\r\n     */\r\n    function diagnosticStatusFactory() {\r\n        return {\r\n            /**\r\n             * The list of known thresholds by context\r\n             */\r\n            thresholds: {\r\n                performances: performancesThresholds,\r\n                bandwidth: bandwidthThresholds,\r\n                upload: uploadThresholds,\r\n                summary: summaryThresholds\r\n            },\r\n\r\n            /**\r\n             * Gets the thresholds for a particular context\r\n             * @param {String} name\r\n             * @returns {Array}\r\n             */\r\n            getThresholds: function getThresholds(name) {\r\n                return this.thresholds[name];\r\n            },\r\n\r\n            /**\r\n             * Gets the correct status message for a given percentage\r\n             * @param {Number} percentage\r\n             * @param {Array|String} thresholds\r\n             * @returns {Object}\r\n             */\r\n            getStatus: function getStatus(percentage, thresholds) {\r\n                var len, feedback, i, step, status;\r\n\r\n                // the percentage is between 0 and 100 and obviously must be a number\r\n                percentage = Math.max(0, Math.min(100, Math.round(parseInt(percentage, 10))));\r\n\r\n                if (_.isString(thresholds)) {\r\n                    thresholds = this.getThresholds(thresholds);\r\n                }\r\n\r\n                // grab a feedback related to the percentage in the thresholds list\r\n                if (thresholds) {\r\n                    if (!_.isArray(thresholds)) {\r\n                        thresholds = [thresholds];\r\n                    }\r\n\r\n                    len = thresholds.length;\r\n                    feedback = thresholds[0];\r\n                    for (i = 1; i < len; i++) {\r\n                        step = thresholds[i];\r\n                        if (step && percentage >= step.threshold) {\r\n                            feedback = step;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // need a structure compatible with the handlebars template\r\n                status = {\r\n                    percentage: percentage,\r\n                    quality: {}\r\n                };\r\n\r\n                if (feedback) {\r\n                    status.feedback = _.clone(feedback);\r\n                }\r\n\r\n                return status;\r\n            }\r\n        };\r\n    }\r\n\r\n    return diagnosticStatusFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Rounds a value to a fixed number of decimals\r\n     * @param {Number} value The value to round\r\n     * @param {Number} decimals The number of decimal\r\n     * @returns {Number}\r\n     */\r\n    var fixedDecimals = function fixedDecimals(value, decimals) {\r\n        var shift = Math.pow(10, Math.abs(decimals || 1));\r\n        return Math.round(Number(value) * shift) / shift || 0;\r\n    };\r\n\r\n    return fixedDecimals;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/stats',[\r\n    'lodash',\r\n    'taoClientDiagnostic/tools/fixedDecimals'\r\n], function (_, fixedDecimals) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Computes some stats on a list from a particular field\r\n     * @param {Array|Object} list The list to compute stats on\r\n     * @param {String|Function} fieldName The name of the field to process, or a callback method returning the value\r\n     * @param {Number} [decimals] Optional number of fixed decimals for values\r\n     * @returns {Object}\r\n     */\r\n    var stats = function stats(list, fieldName, decimals) {\r\n        var sum = 0;\r\n        var sum2 = 0;\r\n        var min = Number.MAX_VALUE;\r\n        var max = 0;\r\n        var variance;\r\n        var count = 0;\r\n        var values = [];\r\n        var avg;\r\n        var med;\r\n        var middle;\r\n        var getValue;\r\n        var results;\r\n\r\n        if (_.isFunction(fieldName)) {\r\n            getValue = fieldName;\r\n        } else {\r\n            getValue = function(item) {\r\n                return item && item[fieldName] || 0;\r\n            };\r\n        }\r\n\r\n        // process 1st pass stats: compute sum, min and max values\r\n        _.forEach(list, function(item) {\r\n            var value;\r\n            if (undefined !== item) {\r\n                value = getValue(item);\r\n                values.push(value);\r\n                min = Math.min(min, value);\r\n                max = Math.max(max, value);\r\n                sum += value;\r\n                count++;\r\n            }\r\n        });\r\n\r\n        // compute the average value\r\n        avg = sum / (count || 1);\r\n\r\n        // process 2nd pass stats: compute variance\r\n        _.forEach(values, function(value) {\r\n            var diff = value - avg;\r\n            sum2 += diff * diff;\r\n        });\r\n\r\n        // compute de standard variance\r\n        variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\r\n\r\n        // compute the median value\r\n        values.sort();\r\n        middle = count / 2;\r\n        med = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\r\n\r\n        results = {\r\n            min : min,\r\n            max : max,\r\n            sum : sum,\r\n            count : count,\r\n            average : avg,\r\n            median : med,\r\n            variance : variance\r\n        };\r\n\r\n        if (decimals) {\r\n            _.forEach(results, function(value, key) {\r\n                results[key] = fixedDecimals(value, decimals);\r\n            });\r\n        }\r\n\r\n        results.values = list;\r\n        return results;\r\n    };\r\n\r\n    return stats;\r\n});\r\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\r\n    return {\r\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\r\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\r\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\r\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\r\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\r\n        'math' : 'taoQtiItem/qtiItem/core/Math',\r\n        'img' : 'taoQtiItem/qtiItem/core/Img',\r\n        'object' : 'taoQtiItem/qtiItem/core/Object',\r\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\r\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\r\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\r\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\r\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\r\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\r\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\r\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\r\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\r\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\r\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\r\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\r\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\r\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\r\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\r\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\r\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\r\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\r\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\r\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\r\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\r\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\r\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\r\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\r\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\r\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\r\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\r\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\r\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\r\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\r\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\r\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\r\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\r\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\r\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\r\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl',\r\n        'include' : 'taoQtiItem/qtiItem/core/Include'\r\n    };\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n *\r\n */\r\n\r\n/**\r\n * Common basic util functions\r\n */\r\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\r\n    'use strict';\r\n\r\n    var util = {\r\n\r\n        buildSerial : function buildSerial(prefix){\r\n            var id = prefix || '';\r\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r\n            for(var i = 0; i < 22; i++){\r\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n            }\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an id for a Qti element (the generation is different from identifier)\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildId : function buildId(item, prefix){\r\n            var id;\r\n            var usedIds;\r\n            var i = 1;\r\n            var suffix = '';\r\n            var exists = false;\r\n\r\n            if(!item){\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            usedIds   = item.getUsedIds();\r\n\r\n            do{\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if(_.contains(usedIds, id)){\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while(exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an identifier for a Qti element\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildIdentifier : function buildIdentifier(item, prefix, useSuffix){\r\n\r\n            var id;\r\n            var usedIds;\r\n            var suffix = '';\r\n            var i = 1;\r\n            var exists = false;\r\n\r\n            if(!item){\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            if(!prefix){\r\n                throw new TypeError('Prefix is required to build an identifier');\r\n            }\r\n\r\n            usedIds   = item.getUsedIdentifiers();\r\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\r\n\r\n            if(prefix){\r\n                prefix = prefix.replace(/_[0-9]+$/ig, '_') //detect incremental id of type choice_12, response_3, etc.\r\n                               .replace(/[^a-zA-Z0-9_]/ig, '_')\r\n                               .replace(/(_)+/ig, '_');\r\n                if(useSuffix){\r\n                    suffix = '_' + i;\r\n                }\r\n            }\r\n\r\n            do{\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if(usedIds[id]){\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while(exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\r\n\r\n            var found = null;\r\n\r\n            if(_.isString(collectionNames)){\r\n                collectionNames = [collectionNames];\r\n            }\r\n\r\n            if(_.isArray(collectionNames)){\r\n\r\n                _.each(collectionNames, function(collectionName){\r\n\r\n                    //get collection to search in (resolving case like interaction.choices.0\r\n                    var collection = element;\r\n                    _.each(collectionName.split('.'), function(nameToken){\r\n                        collection = collection[nameToken];\r\n                    });\r\n                    var elt = collection[searchedSerial];\r\n\r\n                    if(elt){\r\n                        found = {'parent' : element, 'element' : elt};\r\n                        return false;//break the each loop\r\n                    }\r\n\r\n                    //search inside each elements:\r\n                    _.each(collection, function(elt){\r\n\r\n                        if(_.isFunction(elt.find)){\r\n                            found = elt.find(searchedSerial);\r\n                            if(found){\r\n                                return false;//break the each loop\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n                    if(found){\r\n                        return false;//break the each loop\r\n                    }\r\n\r\n                });\r\n\r\n            }else{\r\n\r\n                throw new Error('invalid argument : collectionNames must be an array or a string');\r\n            }\r\n\r\n            return found;\r\n        },\r\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\r\n            if(ns) {\r\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4){\r\n                    if($2.indexOf(':')>0){\r\n                        return $0;\r\n                    }\r\n                    $1 = $1 || '';\r\n                    $3 = $3 || '';\r\n                    return '<'+ $1 + ns + ':'+$2+$3+$4+'>';\r\n                });\r\n                return markup;\r\n            }\r\n            return markup;\r\n\r\n        },\r\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\r\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\r\n        },\r\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\r\n            var namespaces = [];\r\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\r\n                namespaces.push(ns);\r\n                return '<'+slash+node+'>';\r\n            });\r\n            return _.uniq(namespaces);\r\n        }\r\n    };\r\n\r\n    return util;\r\n});\r\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\r\n\r\n    var rendererConfigHelper = {};\r\n\r\n    rendererConfigHelper.getOptionsFromArguments = function(args){\r\n\r\n        var options = {\r\n            data : {},\r\n            placeholder : null,\r\n            subclass : '',\r\n            renderer : null\r\n        };\r\n        \r\n        _.each(args, function(arg){\r\n            if(arg){\r\n                if(arg.isRenderer){\r\n                    options.renderer = arg;\r\n                }else if(arg instanceof $ && arg.length){\r\n                    options.placeholder = arg;\r\n                }else if(_.isString(arg)){\r\n                    options.subclass = arg;\r\n                }else if(_.isPlainObject(arg)){\r\n                    options.data = arg;\r\n                }else{\r\n                    console.log('invalid arg', arg, args);\r\n                }\r\n            }\r\n        });\r\n        \r\n        return options;\r\n    };\r\n    \r\n    return rendererConfigHelper;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n *\r\n */\r\ndefine('taoQtiItem/qtiItem/core/Element',[\r\n    'jquery',\r\n    'lodash',\r\n    'class',\r\n    'taoQtiItem/qtiItem/helper/util',\r\n    'taoQtiItem/qtiItem/helper/rendererConfig'\r\n], function($, _, Class, util, rendererConfig){\r\n    'use strict';\r\n\r\n    var _instances = {};\r\n\r\n    var Element = Class.extend({\r\n        qtiClass : '',\r\n        serial : '',\r\n        relatedItem : null,\r\n        init : function(serial, attributes){\r\n\r\n            //init own attributes\r\n            this.attributes = {};\r\n\r\n            //system properties, for item creator internal use only\r\n            this.metaData = {};\r\n\r\n            //init call in the format init(attributes)\r\n            if(typeof (serial) === 'object'){\r\n                attributes = serial;\r\n                serial = '';\r\n            }\r\n\r\n            if(!serial){\r\n                serial = util.buildSerial(this.qtiClass + '_');\r\n            }\r\n\r\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\r\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\r\n            }\r\n\r\n            if(!_instances[serial]){\r\n                _instances[serial] = this;\r\n                this.serial = serial;\r\n                this.setAttributes(attributes || {});\r\n            }else{\r\n                throw 'a QTI Element with the same serial already exists ' + serial;\r\n            }\r\n\r\n            if(typeof this.initContainer === 'function'){\r\n                this.initContainer(arguments[2] || '');\r\n            }\r\n            if(typeof this.initObject === 'function'){\r\n                this.initObject();\r\n            }\r\n        },\r\n        is : function(qtiClass){\r\n            return (qtiClass === this.qtiClass);\r\n        },\r\n        placeholder : function(){\r\n            return '{{' + this.serial + '}}';\r\n        },\r\n        getSerial : function(){\r\n            return this.serial;\r\n        },\r\n        getUsedIdentifiers : function(){\r\n            var usedIds = {};\r\n            var elts = this.getComposingElements();\r\n            for(var i in elts){\r\n                var elt = elts[i];\r\n                var id = elt.attr('identifier');\r\n                if(id){\r\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\r\n                    usedIds[id] = elt;\r\n                }\r\n            }\r\n            return usedIds;\r\n        },\r\n\r\n        /**\r\n         * Get the ids in use. (id is different from identifier)\r\n         * @returns {Array} of the ids in use\r\n         */\r\n        getUsedIds : function getUsedIds(){\r\n            var usedIds = [];\r\n            _.forEach(this.getComposingElements(), function(elt){\r\n                var id = elt.attr('id');\r\n                if(id && !_.contains(usedIds, id)){\r\n                    usedIds.push(id);\r\n                }\r\n            });\r\n            return usedIds;\r\n        },\r\n\r\n        attr : function(name, value){\r\n            if(name){\r\n                if(value !== undefined){\r\n                    this.attributes[name] = value;\r\n                }else{\r\n                    if(typeof (name) === 'object'){\r\n                        for(var prop in name){\r\n                            this.attr(prop, name[prop]);\r\n                        }\r\n                    }else if(typeof (name) === 'string'){\r\n                        if(this.attributes[name] === undefined){\r\n                            return undefined;\r\n                        }else{\r\n                            return this.attributes[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        data : function(name, value){\r\n            if(name){\r\n                if(value !== undefined){\r\n                    this.metaData[name] = value;\r\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\r\n                }else{\r\n                    if(typeof (name) === 'object'){\r\n                        for(var prop in name){\r\n                            this.data(prop, name[prop]);\r\n                        }\r\n                    }else if(typeof (name) === 'string'){\r\n                        if(this.metaData[name] === undefined){\r\n                            return undefined;\r\n                        }else{\r\n                            return this.metaData[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeData : function(name){\r\n            delete this.metaData[name];\r\n            return this;\r\n        },\r\n        removeAttr : function(name){\r\n            return this.removeAttributes(name);\r\n        },\r\n        setAttributes : function(attributes){\r\n            this.attributes = attributes;\r\n            return this;\r\n        },\r\n        getAttributes : function(){\r\n            return _.clone(this.attributes);\r\n        },\r\n        removeAttributes : function(attrNames){\r\n            if(typeof (attrNames) === 'string'){\r\n                attrNames = [attrNames];\r\n            }\r\n            for(var i in attrNames){\r\n                delete this.attributes[attrNames[i]];\r\n            }\r\n            return this;\r\n        },\r\n        getComposingElements : function(){\r\n            var elts = {};\r\n            function append(element){\r\n                elts[element.getSerial()] = element;//pass individual object by ref, instead of the whole list(object)\r\n                elts = _.extend(elts, element.getComposingElements());\r\n            }\r\n            if(typeof this.initContainer === 'function'){\r\n                append(this.getBody());\r\n            }\r\n            if(typeof this.initObject === 'function'){\r\n                append(this.getObject());\r\n            }\r\n            _.each(this.metaData, function(v){\r\n                if(Element.isA(v, '_container')){\r\n                    append(v);\r\n                }else if(_.isArray(v)){\r\n                    _.each(v, function(v){\r\n                        if(Element.isA(v, '_container')){\r\n                            append(v);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return elts;\r\n        },\r\n        getUsedClasses : function(){\r\n\r\n            var ret = [this.qtiClass],\r\n                composingElts = this.getComposingElements();\r\n\r\n            _.each(composingElts, function(elt){\r\n                ret.push(elt.qtiClass);\r\n            });\r\n\r\n            return _.uniq(ret);\r\n        },\r\n        find : function(serial){\r\n\r\n            var found = null;\r\n\r\n            if(typeof this.initObject === 'function'){\r\n                var object = this.getObject();\r\n                if(object.serial === serial){\r\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\r\n                }\r\n            }\r\n\r\n            if(!found && typeof this.initContainer === 'function'){\r\n                found = this.getBody().find(serial, this);\r\n            }\r\n\r\n            return found;\r\n        },\r\n        parent : function(){\r\n            var item = this.getRelatedItem();\r\n            if(item){\r\n                var found = item.find(this.getSerial());\r\n                if(found){\r\n                    return found.parent;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        setRelatedItem : function(item, recursive){\r\n\r\n            recursive = (typeof recursive === 'undefined') ? true : recursive;\r\n\r\n            if(Element.isA(item, 'assessmentItem')){\r\n                this.relatedItem = item;\r\n                var composingElts = this.getComposingElements();\r\n                for(var i in composingElts){\r\n                    composingElts[i].setRelatedItem(item, false);\r\n                }\r\n            }\r\n\r\n        },\r\n        getRelatedItem : function(){\r\n            var ret = null;\r\n            if(Element.isA(this.relatedItem, 'assessmentItem')){\r\n                ret = this.relatedItem;\r\n            }\r\n            return ret;\r\n        },\r\n        setRenderer : function(renderer){\r\n            if(renderer && renderer.isRenderer){\r\n                this.renderer = renderer;\r\n                var elts = this.getComposingElements();\r\n                for(var serial in elts){\r\n                    elts[serial].setRenderer(renderer);\r\n                }\r\n            }else{\r\n                throw 'invalid qti rendering engine';\r\n            }\r\n        },\r\n        getRenderer : function(){\r\n            return this.renderer;\r\n        },\r\n        render : function(){\r\n\r\n            var args = rendererConfig.getOptionsFromArguments(arguments);\r\n            var _renderer = args.renderer || this.getRenderer();\r\n\r\n            var tplData = {},\r\n                defaultData = {\r\n                    'tag' : this.qtiClass,\r\n                    'serial' : this.serial,\r\n                    'attributes' : this.getAttributes()\r\n                };\r\n\r\n            if(!_renderer){\r\n                throw 'render: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n\r\n            if(typeof this.initContainer === 'function'){\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                defaultData.body = this.getBody().render(args.renderer);\r\n            }\r\n            if(typeof this.initObject === 'function'){\r\n                defaultData.object = {\r\n                    attributes : this.object.getAttributes()\r\n                };\r\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\r\n            }\r\n\r\n            tplData = _.merge(defaultData, args.data || {});\r\n            tplData = _renderer.getData(this, tplData, args.subclass);\r\n            var rendering = _renderer.renderTpl(this, tplData, args.subclass);\r\n            if(args.placeholder){\r\n                args.placeholder.replaceWith(rendering);\r\n            }\r\n\r\n            return rendering;\r\n        },\r\n        postRender : function(data, altClassName, renderer){\r\n\r\n            var postRenderers = [];\r\n            var _renderer = renderer || this.getRenderer();\r\n\r\n            if(typeof this.initContainer === 'function'){\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                postRenderers = this.getBody().postRender({}, '', renderer);\r\n            }\r\n\r\n            if(_renderer){\r\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\r\n            }else{\r\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n\r\n            return _.compact(postRenderers);\r\n        },\r\n        getContainer : function($scope, subclass){\r\n            var renderer = this.getRenderer();\r\n            if(renderer){\r\n                return renderer.getContainer(this, $scope, subclass);\r\n            }else{\r\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n        },\r\n        toArray : function(){\r\n            var arr = {\r\n                serial : this.serial,\r\n                type : this.qtiClass,\r\n                attributes : this.getAttributes()\r\n            };\r\n\r\n            if(typeof this.initContainer === 'function'){\r\n                arr.body = this.getBody().toArray();\r\n            }\r\n            if(typeof this.initObject === 'function'){\r\n                arr.object = this.object.toArray();\r\n            }\r\n\r\n            return arr;\r\n        },\r\n        isEmpty : function(){\r\n            //tells whether the element should be considered empty or not, from the rendering point of view\r\n            return false;\r\n        },\r\n        addClass : function(className){\r\n            var clazz = this.attr('class') || '';\r\n            if(!_containClass(clazz, className)){\r\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\r\n            }\r\n        },\r\n        hasClass : function(className){\r\n            return _containClass(this.attr('class'), className);\r\n        },\r\n        removeClass : function(className){\r\n\r\n            var clazz = this.attr('class') || '';\r\n            if(clazz){\r\n\r\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\r\n                clazz = clazz.replace(regex, ' ').trim();\r\n\r\n                if(clazz){\r\n                    this.attr('class', clazz);\r\n                }else{\r\n                    this.removeAttr('class');\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Add or remove class. Setting the optional state will force addition/removal.\r\n         * State is here to keep the jQuery syntax\r\n         *\r\n         * @param {String} className\r\n         * @param {Boolean} [state]\r\n         */\r\n        toggleClass : function(className, state) {\r\n\r\n            if(typeof state === 'boolean') {\r\n                return state ? this.addClass(className) : this.removeClass(className);\r\n            }\r\n\r\n            if(this.hasClass(className)) {\r\n                return this.removeClass(className);\r\n            }\r\n            return this.addClass(className);\r\n        },\r\n        isset : function(){\r\n            return Element.issetElement(this.serial);\r\n        },\r\n        unset : function(){\r\n            return Element.unsetElement(this.serial);\r\n        }\r\n    });\r\n\r\n    var _containClass = function(allClassStr, className){\r\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\r\n        return allClassStr && regex.test(allClassStr);\r\n    };\r\n\r\n    //helpers\r\n    Element.isA = function(qtiElement, qtiClass){\r\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\r\n    };\r\n\r\n    Element.getElementBySerial = function(serial){\r\n        return _instances[serial];\r\n    };\r\n\r\n    Element.issetElement = function(serial){\r\n        return !!_instances[serial];\r\n    };\r\n\r\n    /**\r\n     * Unset a registered element from it's serial\r\n     * @param {String} serial - the element serial\r\n     * @returns {Boolean} true if unset\r\n     */\r\n    Element.unsetElement = function(serial){\r\n\r\n        var element = Element.getElementBySerial(serial);\r\n\r\n        if(element){\r\n\r\n            var composingElements = element.getComposingElements();\r\n            _.each(composingElements, function(elt){\r\n                delete _instances[elt.serial];\r\n            });\r\n            delete _instances[element.serial];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return Element;\r\n});\r\n\r\n\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n *\r\n */\r\n//@todo : move this to the ../helper directory\r\ndefine('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element'], function(_, Class, qtiClasses, Element){\r\n\r\n    var Loader = Class.extend({\r\n        init : function(item, classesLocation){\r\n\r\n            this.qti = {}; //loaded qti classes are store here\r\n            this.classesLocation = {};\r\n\r\n            this.item = item || null;//starts either from scratch or with an existing item object\r\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\r\n        },\r\n        setClassesLocation : function(qtiClasses){\r\n            _.extend(this.classesLocation, qtiClasses);\r\n            return this;\r\n        },\r\n        getRequiredClasses : function(data){\r\n            var ret = [];\r\n            for(var i in data){\r\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'relatedItem'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\r\n                    ret.push(data[i]);\r\n                }else if(typeof(data[i]) === 'object' && i !== 'responseRules'){    //responseRules should'nt be part of the parsing\r\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\r\n                }\r\n            }\r\n            return ret;\r\n        },\r\n        loadRequiredClasses : function(data, callback, reload){\r\n\r\n            var requiredClasses = this.getRequiredClasses(data, reload), required = [];\r\n\r\n            for(var i in requiredClasses){\r\n                var requiredClass = requiredClasses[i];\r\n                if(this.classesLocation[requiredClass]){\r\n                    required.push(this.classesLocation[requiredClass]);\r\n                }else{\r\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\r\n                }\r\n            }\r\n\r\n            var _this = this;\r\n            require(required, function(){\r\n                _.each(arguments, function(QtiClass){\r\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\r\n                });\r\n                callback.call(_this, _this.qti);\r\n            });\r\n        },\r\n        getLoadedClasses : function(){\r\n            return _.keys(this.qti);\r\n        },\r\n        loadItemData : function(data, callback){\r\n\r\n            var _this = this;\r\n            _this.loadRequiredClasses(data, function(Qti){\r\n                var i;\r\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\r\n\r\n                    //unload an item from it's serial (in case of a reload)\r\n                    if(data.serial){\r\n                        Element.unsetElement(data.serial);\r\n                    }\r\n\r\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\r\n                    _this.loadContainer(_this.item.getBody(), data.body);\r\n\r\n                    for(i in data.outcomes){\r\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\r\n                        if(outcome){\r\n                            _this.item.addOutcomeDeclaration(outcome);\r\n                        }\r\n                    }\r\n                    for(i in data.feedbacks){\r\n                        var feedback = _this.buildElement(data.feedbacks[i]);\r\n                        if(feedback){\r\n                            _this.item.addModalFeedback(feedback);\r\n                        }\r\n                    }\r\n                    for(i in data.stylesheets){\r\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\r\n                        if(stylesheet){\r\n                            _this.item.addStylesheet(stylesheet);\r\n                        }\r\n                    }\r\n                    \r\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\r\n                    for(i in data.responses){\r\n                        var response = _this.buildResponse(data.responses[i]);\r\n                        if(response){\r\n                            _this.item.addResponseDeclaration(response);\r\n\r\n                            var feedbackRules = data.responses[i].feedbackRules;\r\n                            if(feedbackRules){\r\n                                _.forIn(feedbackRules, function(fbData, serial){\r\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData, response);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    if(data.responseProcessing){\r\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\r\n                    }\r\n                    _this.item.setNamespaces(data.namespaces);\r\n                    _this.item.setSchemaLocations(data.schemaLocations);\r\n                    _this.item.setApipAccessibility(data.apipAccessibility);\r\n                }\r\n\r\n                if(typeof(callback) === 'function'){\r\n                    callback.call(_this, _this.item);\r\n                }\r\n            });\r\n        },\r\n        loadAndBuildElement : function(data, callback){\r\n\r\n            var _this = this;\r\n\r\n            _this.loadRequiredClasses(data, function(Qti){\r\n\r\n                var element = _this.buildElement(data);\r\n\r\n                if(typeof(callback) === 'function'){\r\n                    callback.call(_this, element);\r\n                }\r\n            });\r\n        },\r\n        loadElement : function(element, data, callback){\r\n\r\n            var _this = this;\r\n            this.loadRequiredClasses(data, function(){\r\n                _this.loadElementData(element, data);\r\n                if(typeof(callback) === 'function'){\r\n                    callback.call(_this, element);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Load ALL given elements into existing loaded item\r\n         *\r\n         * @todo to be renamed to loadItemElements\r\n         * @param {object} data\r\n         * @param {function} callback\r\n         * @returns {undefined}\r\n         */\r\n        loadElements : function(data, callback){\r\n\r\n            var _this = this;\r\n\r\n            if(_this.item){\r\n\r\n                this.loadRequiredClasses(data, function(){\r\n\r\n                    var allElements = _this.item.getComposingElements();\r\n\r\n                    for(var i in data){\r\n                        var elementData = data[i];\r\n                        if(elementData && elementData.qtiClass && elementData.serial){\r\n                            //find and update element\r\n                            if(allElements[elementData.serial]){\r\n                                _this.loadElementData(allElements[elementData.serial], elementData);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(typeof(callback) === 'function'){\r\n                        callback.call(_this, _this.item);\r\n                    }\r\n                });\r\n            }else{\r\n                throw 'QtiLoader : cannot load elements in empty item';\r\n            }\r\n\r\n        },\r\n        buildResponse : function(data){\r\n\r\n            var response = this.buildElement(data);\r\n\r\n            response.template = data.howMatch || null;\r\n            response.defaultValue = data.defaultValue || null;\r\n            response.correctResponse = data.correctResponses || null;\r\n\r\n            if(_.size(data.mapping)){\r\n                response.mapEntries = data.mapping;\r\n            }else if(_.size(data.areaMapping)){\r\n                response.mapEntries = data.areaMapping;\r\n            }else{\r\n                response.mapEntries = {};\r\n            }\r\n\r\n            response.mappingAttributes = data.mappingAttributes || {};\r\n\r\n            return response;\r\n        },\r\n        buildSimpleFeedbackRule : function(data, response){\r\n\r\n            var feedbackRule = this.buildElement(data);\r\n            \r\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\r\n            \r\n//            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\r\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\r\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\r\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\r\n            \r\n            //associate the compared outcome to the feedbacks if applicable\r\n            var response = feedbackRule.comparedOutcome;\r\n            if(feedbackRule.feedbackThen){\r\n                feedbackRule.feedbackThen.data('relatedResponse', response);\r\n            }\r\n            if(feedbackRule.feedbackElse){\r\n                feedbackRule.feedbackElse.data('relatedResponse', response);\r\n            }\r\n            \r\n            return feedbackRule;\r\n        },\r\n        buildOutcome : function(data){\r\n            var outcome = this.buildElement(data);\r\n            outcome.defaultValue = data.defaultValue || null;\r\n            return outcome;\r\n        },\r\n        buildResponseProcessing : function(data){\r\n            var rp = this.buildElement(data);\r\n            if(data && data.processingType){\r\n                if(data.processingType === 'custom'){\r\n                    rp.xml = data.data;\r\n                    rp.processingType = 'custom';\r\n                }else{\r\n                    rp.processingType = 'templateDriven';\r\n                }\r\n            }\r\n            return rp;\r\n        },\r\n        loadContainer : function(bodyObject, bodyData){\r\n            if(!Element.isA(bodyObject, '_container')){\r\n                throw 'bodyObject must be a QTI Container';\r\n            }\r\n\r\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\r\n                for(var serial in bodyData.elements){\r\n                    var eltData = bodyData.elements[serial];\r\n                    //check if class is loaded:\r\n                    var element = this.buildElement(eltData);\r\n                    if(element){\r\n                        bodyObject.setElement(element, bodyData.body);\r\n                    }\r\n                }\r\n                bodyObject.body(bodyData.body);\r\n            }else{\r\n                throw 'wrong bodydata format';\r\n            }\r\n        },\r\n        buildElement : function(elementData){\r\n            var elt = null;\r\n            if(elementData && elementData.qtiClass && elementData.serial){\r\n                var className = elementData.qtiClass;\r\n                if(this.qti[className]){\r\n                    elt = new this.qti[className](elementData.serial);\r\n                    this.loadElementData(elt, elementData);\r\n                }else{\r\n                    throw 'the qti element class does not exist: ' + className;\r\n                }\r\n            }else{\r\n                throw 'wrong elementData format';\r\n            }\r\n            return elt;\r\n        },\r\n        loadElementData : function(element, data){\r\n\r\n            //merge attributes when loading element data\r\n            var attributes = _.defaults(data.attributes || {}, element.attributes || {});\r\n            element.setAttributes(attributes);\r\n\r\n            if(element.body && data.body){\r\n                if(element.bdy){\r\n                    this.loadContainer(element.getBody(), data.body);\r\n                }\r\n            }\r\n\r\n            if(element.object && data.object){\r\n                if(element.object){\r\n                    this.loadObjectData(element.object, data.object);\r\n                }\r\n            }\r\n\r\n            if(Element.isA(element, 'interaction')){\r\n                this.loadInteractionData(element, data);\r\n            }else if(Element.isA(element, 'choice')){\r\n                this.loadChoiceData(element, data);\r\n            }else if(Element.isA(element, 'math')){\r\n                this.loadMathData(element, data);\r\n            }else if(Element.isA(element, 'infoControl')){\r\n                this.loadPicData(element, data);\r\n            }\r\n\r\n            return element;\r\n        },\r\n        loadInteractionData : function(interaction, data){\r\n            if(Element.isA(interaction, 'blockInteraction')){\r\n                if(data.prompt){\r\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\r\n                }\r\n            }\r\n\r\n            this.buildInteractionChoices(interaction, data);\r\n\r\n            if(Element.isA(interaction, 'customInteraction')){\r\n                this.loadPciData(interaction, data);\r\n            }\r\n        },\r\n        buildInteractionChoices : function(interaction, data){\r\n\r\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\r\n            if(data.choices){\r\n                if(Element.isA(interaction, 'matchInteraction')){\r\n                    for(var set = 0; set < 2; set++){\r\n                        if(!data.choices[set]){\r\n                            throw 'missing match set #' + set;\r\n                        }\r\n                        var matchSet = data.choices[set];\r\n                        for(var serial in matchSet){\r\n                            var choice = this.buildElement(matchSet[serial]);\r\n                            if(choice){\r\n                                interaction.addChoice(choice, set);\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    for(var serial in data.choices){\r\n                        var choice = this.buildElement(data.choices[serial]);\r\n                        if(choice){\r\n                            interaction.addChoice(choice);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\r\n                    if(data.gapImgs){\r\n                        for(var serial in data.gapImgs){\r\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\r\n                            if(gapImg){\r\n                                interaction.addGapImg(gapImg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n        loadChoiceData : function(choice, data){\r\n            if(Element.isA(choice, 'textVariableChoice')){\r\n                choice.val(data.text);\r\n            }else if(Element.isA(choice, 'gapImg')){\r\n                //has already been taken care of in buildElement()\r\n            }else if(Element.isA(choice, 'containerChoice')){\r\n                //has already been taken care of in buildElement()\r\n            }\r\n        },\r\n        loadObjectData : function(object, data){\r\n            object.setAttributes(data.attributes);\r\n            //@todo: manage object like a container\r\n            if(data._alt){\r\n                if(data._alt.qtiClass === 'object'){\r\n                    object._alt = Loader.buildElement(data._alt);\r\n                }else{\r\n                    object._alt = data._alt;\r\n                }\r\n            }\r\n        },\r\n        loadMathData : function(math, data){\r\n            math.ns = data.ns || {};\r\n            math.setMathML(data.mathML || '');\r\n            _.forIn(data.annotations || {}, function(value, encoding){\r\n                math.setAnnotation(encoding, value);\r\n            });\r\n        },\r\n        loadPciData : function(pci, data){\r\n            loadPortableCustomElementData(pci, data);\r\n        },\r\n        loadPicData : function(pic, data){\r\n            loadPortableCustomElementData(pic, data);\r\n        }\r\n    });\r\n\r\n    function loadPortableCustomElementData(portableElement, data){\r\n        portableElement.typeIdentifier = data.typeIdentifier;\r\n        portableElement.markup = data.markup;\r\n        portableElement.entryPoint = data.entryPoint;\r\n        portableElement.properties = data.properties;\r\n        portableElement.libraries = data.libraries;\r\n    }\r\n\r\n    return Loader;\r\n});\r\n\n","/**\r\n * Common helper functions\r\n */\r\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\r\n    return {\r\n        convertChoices : function(choices, outputType){\r\n\r\n            var ret = [], _this = this;\r\n\r\n            _.each(choices, function(c){\r\n                if(Element.isA(c, 'choice')){\r\n                    switch(outputType){\r\n                        case 'serial':\r\n                            ret.push(c.getSerial());\r\n                            break;\r\n                        case 'identifier':\r\n                            ret.push(c.id());\r\n                            break;\r\n                        default:\r\n                            ret.push(c);\r\n                    }\r\n\r\n                }else if(_.isArray(c)){\r\n                    ret.push(_this.convertChoices(c, outputType));\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        findChoices : function(interaction, choices, inputType){\r\n\r\n            var ret = [], _this = this;\r\n\r\n            _.each(choices, function(c){\r\n                var choice;\r\n                if(_.isString(c)){\r\n                    if(inputType === 'serial'){\r\n                        choice = interaction.getChoice(c);\r\n                        if(choice){\r\n                            ret.push(choice);\r\n                        }\r\n                    }else if(inputType === 'identifier'){\r\n                        choice = interaction.getChoiceByIdentifier(c);\r\n                        if(choice){\r\n                            ret.push(choice);\r\n                        }\r\n                    }else{\r\n                        ret.push(c);\r\n                    }\r\n                }else if(_.isArray(c)){\r\n                    ret.push(_this.findChoices(interaction, c, inputType));\r\n                }else{\r\n                    ret.push(c);\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        shuffleChoices : function(choices){\r\n            var r = [], //returned array\r\n                f = {}, //fixed choices array\r\n                j = 0;\r\n\r\n            for(var i in choices){\r\n                if(Element.isA(choices[i], 'choice')){\r\n                    var choice = choices[i];\r\n                    if(choice.attr('fixed')){\r\n                        f[j] = choice;\r\n                    }\r\n                    r.push(choice);\r\n                    j++;\r\n                }else{\r\n                    throw 'invalid element in array: is not a qti choice';\r\n                }\r\n            }\r\n\r\n            for(var n = 0; n < r.length - 1; n++){\r\n                if(f[n]){\r\n                    continue;\r\n                }\r\n                var k = -1;\r\n                do{\r\n                    k = n + Math.floor(Math.random() * (r.length - n));\r\n                }while(f[k]);\r\n                var tmp = r[k];\r\n                r[k] = r[n];\r\n                r[n] = tmp;\r\n            }\r\n\r\n            return r;\r\n        },\r\n        serialToIdentifier : function(interaction, choiceSerial){\r\n            var choice = interaction.getChoice(choiceSerial);\r\n            if(choice){\r\n                return choice.id();\r\n            }else{\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n *\r\n */\r\n\r\n/**\r\n * A factory to create a QTI renderer.\r\n *\r\n * @author Sam Sipasseuth <sam@taotesting.com>\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiItem/qtiRunner/core/Renderer',[\r\n    'lodash',\r\n    'jquery',\r\n    'handlebars',\r\n    'core/promise',\r\n    'taoQtiItem/qtiItem/core/Element',\r\n    'taoQtiItem/qtiItem/helper/interactionHelper',\r\n    'ui/themeLoader'\r\n], function(_, $, Handlebars, Promise, Element, interactionHelper, themeLoader){\r\n    'use strict';\r\n\r\n    var _isValidRenderer = function(renderer){\r\n\r\n        var valid = true;\r\n\r\n        if(typeof (renderer) !== 'object'){\r\n            return false;\r\n        }\r\n\r\n        var classCorrect = false;\r\n        if(renderer.qtiClass){\r\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\r\n                classCorrect = true;\r\n            }else{\r\n                var pos = renderer.qtiClass.indexOf('.');\r\n                if(pos > 0){\r\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\r\n                    var subClass = renderer.qtiClass.slice(pos + 1);\r\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\r\n                        classCorrect = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(!classCorrect){\r\n            valid = false;\r\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        if(!renderer.template){\r\n            valid = false;\r\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    var _renderableClasses = [\r\n        '_container',\r\n        'assessmentItem',\r\n        'stylesheet',\r\n        'responseDeclaration',\r\n        'outcomeDeclaration',\r\n        'responseProcessing',\r\n        '_simpleFeedbackRule',\r\n        'img',\r\n        'math',\r\n        'object',\r\n        'modalFeedback',\r\n        'rubricBlock',\r\n        'associateInteraction',\r\n        'choiceInteraction',\r\n        'extendedTextInteraction',\r\n        'gapMatchInteraction',\r\n        'graphicAssociateInteraction',\r\n        'graphicGapMatchInteraction',\r\n        'graphicOrderInteraction',\r\n        'hotspotInteraction',\r\n        'hottextInteraction',\r\n        'inlineChoiceInteraction',\r\n        'matchInteraction',\r\n        'mediaInteraction',\r\n        'orderInteraction',\r\n        'selectPointInteraction',\r\n        'sliderInteraction',\r\n        'textEntryInteraction',\r\n        'uploadInteraction',\r\n        'endAttemptInteraction',\r\n        'customInteraction',\r\n        'prompt',\r\n        'associableHotspot',\r\n        'gap',\r\n        'gapImg',\r\n        'gapText',\r\n        'hotspotChoice',\r\n        'hottext',\r\n        'inlineChoice',\r\n        'simpleAssociableChoice',\r\n        'simpleChoice',\r\n        'infoControl',\r\n        'include'\r\n    ];\r\n\r\n    /**\r\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\r\n     */\r\n    var _dependencies = {\r\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\r\n        rubricBlock : ['_container'],\r\n        associateInteraction : ['simpleAssociableChoice'],\r\n        choiceInteraction : ['simpleChoice'],\r\n        gapMatchInteraction : ['gap', 'gapText'],\r\n        graphicAssociateInteraction : ['associableHotspot'],\r\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\r\n        graphicOrderInteraction : ['hotspotChoice'],\r\n        hotspotInteraction : ['hotspotChoice'],\r\n        hottextInteraction : ['hottext'],\r\n        inlineChoiceInteraction : ['inlineChoice'],\r\n        matchInteraction : ['simpleAssociableChoice'],\r\n        orderInteraction : ['simpleChoice']\r\n    };\r\n\r\n    /**\r\n     * The list of supported qti subclasses.\r\n     */\r\n    var _renderableSubclasses = {\r\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\r\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\r\n    };\r\n\r\n    /**\r\n     * List of the default properties for the item\r\n     */\r\n    var _defaults = {\r\n        shuffleChoices : true\r\n    };\r\n\r\n    /**\r\n     * Get the location of the document, useful to define a baseUrl for the required context\r\n     * @returns {String}\r\n     */\r\n    function getDocumentBaseUrl(){\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\r\n    }\r\n\r\n    /**\r\n     * The built Renderer class\r\n     * @constructor\r\n     * @param {Object} [options] - the renderer options\r\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\r\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\r\n     * @param {Object} [options.decorators] - to set up rendering decorator\r\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\r\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\r\n     */\r\n    var Renderer = function(options){\r\n\r\n        /**\r\n         * Store the registered renderer location\r\n         */\r\n        var _locations = {};\r\n\r\n        /**\r\n         * Store loaded renderers\r\n         */\r\n        var _renderers = {};\r\n\r\n        options = _.defaults(options || {}, _defaults);\r\n\r\n        this.isRenderer = true;\r\n\r\n        this.name = '';\r\n\r\n        //store shuffled choice here\r\n        this.shuffledChoices = [];\r\n\r\n        /**\r\n         * Get the actual renderer of the give qti class or subclass:\r\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\r\n         */\r\n        var _getClassRenderer = function(qtiClass){\r\n            var ret = null;\r\n            if(_renderers[qtiClass]){\r\n                ret = _renderers[qtiClass];\r\n            }else{\r\n                var pos = qtiClass.indexOf('.');\r\n                if(pos > 0){\r\n                    qtiClass = qtiClass.slice(0, pos);\r\n                    if(_renderers[qtiClass]){\r\n                        ret = _renderers[qtiClass];\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {String} key - the name of the option\r\n         * @param {*} value - the option vallue\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOption = function(key, value){\r\n            if(typeof (key) === 'string'){\r\n                options[key] = value;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {Object} opts - the options\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOptions = function(opts){\r\n            options = _.extend(options, opts);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Get the renderer option\r\n         * @param {String} key - the name of the option\r\n         * @returns {*|null} the option vallue\r\n         */\r\n        this.getOption = function(key){\r\n            if(typeof (key) === 'string' && options[key]){\r\n                return options[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey){\r\n            var messages = this.getOption('messages');\r\n            if(messages &&\r\n                elementName &&\r\n                messages[elementName] &&\r\n                _.isString(messages[elementName][messageKey])){\r\n                //currently not translatable but potentially could be if the need raises\r\n                return Handlebars.compile(messages[elementName][messageKey]);\r\n            }else{\r\n                return null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the bound assetManager\r\n         * @returns {AssetManager} the assetManager\r\n         */\r\n        this.getAssetManager = function getAssetManager(){\r\n            return options.assetManager;\r\n        };\r\n\r\n        /**\r\n         * Get the bound theme loader\r\n         * @returns {Object} the themeLoader\r\n         */\r\n        this.getThemeLoader = function getThemeLoader(){\r\n            return this.themeLoader;\r\n        };\r\n\r\n\r\n        /**\r\n         * Renders the template\r\n         * @param {Object} element - the QTI model element\r\n         * @param {Object} data - the data to give to the template\r\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n         * @returns {String} the template results\r\n         * @throws {Error} if the renderer is not set or has no template bound\r\n         */\r\n        this.renderTpl = function(element, data, qtiSubclass){\r\n\r\n            var res;\r\n            var ret        = '';\r\n            var tplFound   = false;\r\n            var qtiClass   = qtiSubclass || element.qtiClass;\r\n            var renderer   = _getClassRenderer(qtiClass);\r\n            var decorators = this.getOption('decorators');\r\n\r\n            if(!renderer || !_.isFunction(renderer.template)){\r\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\r\n            }\r\n\r\n            //pre rendering decoration\r\n            if(_.isObject(decorators) && _.isFunction(decorators.before)){\r\n\r\n                /**\r\n                 * @callback preRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.before(element, qtiSubclass);\r\n                if(_.isString(res)){\r\n                    ret += res;\r\n                }\r\n            }\r\n\r\n            //render the template\r\n            ret += renderer.template(data);\r\n\r\n\r\n            //post rendering decoration\r\n            if(_.isObject(decorators) && _.isFunction(decorators.after)){\r\n\r\n                /**\r\n                 * @callback postRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.after(element, qtiSubclass);\r\n                if(_.isString(res)){\r\n                    ret += res;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getData = function(element, data, qtiSubclass){\r\n\r\n            var ret = data,\r\n                qtiClass = qtiSubclass || element.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(typeof (renderer.getData) === 'function'){\r\n                    ret = renderer.getData.call(this, element, data);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        this.renderDirect = function(tpl, data){\r\n            return Handlebars.compile(tpl)(data);\r\n        };\r\n\r\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\r\n\r\n            var ret = null,\r\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                ret = renderer.getContainer(qtiElement, $scope);\r\n            }else{\r\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.postRender = function(qtiElement, data, qtiSubclass){\r\n\r\n            var qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer && typeof (renderer.render) === 'function') {\r\n                return renderer.render.call(this, qtiElement, data);\r\n            }\r\n        };\r\n\r\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\r\n\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(typeof (renderer.setResponse) === 'function'){\r\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\r\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\r\n                    if($container instanceof $ && $container.length){\r\n                        $container.trigger('responseSet', [qtiInteraction, response]);\r\n                    }\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getResponse = function(qtiInteraction, qtiSubclass){\r\n\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(typeof (renderer.getResponse) === 'function'){\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\r\n\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(typeof (renderer.resetResponse) === 'function'){\r\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         * @returns {Object} the interaction's state\r\n         *\r\n         * @throws {Error} if no renderer is registered\r\n         */\r\n        this.getState = function(qtiInteraction, qtiSubclass){\r\n\r\n            var ret = false;\r\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(_.isFunction(renderer.getState)){\r\n                    ret = renderer.getState.call(this, qtiInteraction);\r\n                } else {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {Object} state - the interaction's state\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.setState =  function(qtiInteraction, state, qtiSubclass){\r\n\r\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(_.isFunction(renderer.setState)){\r\n                    renderer.setState.call(this, qtiInteraction, state);\r\n                } else {\r\n                    renderer.resetResponse.call(this, qtiInteraction);\r\n                    renderer.setResponse.call(this, qtiInteraction, state);\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls the renderer destroy.\r\n         * Ask the renderer to run destroy if exists.\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.destroy = function(qtiInteraction, qtiSubclass){\r\n\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if(renderer){\r\n                if(_.isFunction(renderer.destroy)){\r\n                    ret = renderer.destroy.call(this, qtiInteraction);\r\n                }\r\n            }else{\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getLoadedRenderers = function(){\r\n            return _renderers;\r\n        };\r\n\r\n        this.register = function(renderersLocations){\r\n            _.extend(_locations, renderersLocations);\r\n        };\r\n\r\n        this.load = function(callback, requiredClasses){\r\n           var self = this;\r\n            var required = [];\r\n\r\n            if(options.themes){\r\n\r\n                //resolve themes paths\r\n                options.themes.base = this.resolveUrl(options.themes.base);\r\n                _.forEach(options.themes.available, function(theme, index){\r\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\r\n                });\r\n                this.themeLoader = themeLoader(options.themes).load();\r\n            }\r\n\r\n            if(requiredClasses){\r\n                if(_.isArray(requiredClasses)){\r\n\r\n                    //exclude abstract classes\r\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\r\n\r\n                    //add dependencies\r\n                    _.each(requiredClasses, function(reqClass){\r\n                        var deps = _dependencies[reqClass];\r\n                        if(deps){\r\n                            requiredClasses = _.union(requiredClasses, deps);\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(requiredClasses, function(qtiClass){\r\n\r\n                        if(_renderableSubclasses[qtiClass]){\r\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\r\n                            _.each(requiredSubClasses, function(subclass){\r\n                                if(_locations[qtiClass + '.' + subclass]){\r\n                                    required.push(_locations[qtiClass + '.' + subclass]);\r\n                                }else if(_locations[qtiClass]){\r\n                                    required.push(_locations[qtiClass]);\r\n                                }else{\r\n                                    throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if(_locations[qtiClass] === false){\r\n                                _renderers[qtiClass] = false;//mark this class as not renderable\r\n                            }else if(_locations[qtiClass]){\r\n                                required.push(_locations[qtiClass]);\r\n                            }else{\r\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\r\n                }\r\n\r\n            }else{\r\n                required = _.values(_locations);\r\n            }\r\n\r\n            var _this = this;\r\n            require(required, function(){\r\n\r\n                _.each(arguments, function(clazz){\r\n                    if(_isValidRenderer(clazz)){\r\n                        _renderers[clazz.qtiClass] = clazz;\r\n                    }\r\n                });\r\n\r\n                if(typeof (callback) === 'function'){\r\n                    callback.call(_this, _renderers);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Unload the renderer\r\n         */\r\n        this.unload = function unload(){\r\n            if(this.themeLoader){\r\n                themeLoader(options.themes).unload();\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Define the shuffling manually\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Array} choices - the shuffled choices\r\n         * @param {String} identificationType -\r\n         */\r\n        this.setShuffledChoices = function(interaction, choices, identificationType){\r\n            if(Element.isA(interaction, 'interaction')){\r\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(interactionHelper.findChoices(interaction, choices, identificationType), 'serial');\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the choices shuffled for this interaction.\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\r\n         * @param {String} returnedType - the choice type\r\n         * @returns {Array} the choices\r\n         */\r\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\r\n            var choices = [];\r\n            var shuffled = [];\r\n            var serial, i;\r\n\r\n            if(Element.isA(interaction, 'interaction')){\r\n                serial = interaction.getSerial();\r\n\r\n                //1st time, we shuffle (or asked to force shuffling)\r\n                if(!this.shuffledChoices[serial] || reshuffle){\r\n                    if(Element.isA(interaction, 'matchInteraction')){\r\n                        this.shuffledChoices[serial] = [];\r\n                        for(i = 0; i < 2; i++){\r\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\r\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\r\n                        }\r\n                    } else {\r\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\r\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\r\n                    }\r\n\r\n                //otherwise get the choices from the serials\r\n                } else {\r\n                    if(Element.isA(interaction, 'matchInteraction')){\r\n                        _.forEach(choices, function(choice, index){\r\n                            if(index < 2){\r\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial){\r\n                                    choice.push(interaction.getChoice(choiceSerial));\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial){\r\n                            choices.push(interaction.getChoice(choiceSerial));\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //do some type convertion\r\n                if(returnedType === 'serial' || returnedType === 'identifier'){\r\n                    return interactionHelper.convertChoices(choices, returnedType);\r\n                }\r\n\r\n                //pass value only, not ref\r\n                return _.clone(choices);\r\n            }\r\n\r\n            return [];\r\n        };\r\n\r\n        this.getRenderers = function(){\r\n            return _renderers;\r\n        };\r\n\r\n        this.getLocations = function(){\r\n            return _locations;\r\n        };\r\n\r\n        /**\r\n         * Resolve URLs using the defined assetManager's strategies\r\n         * @param {String} url - the URL to resolve\r\n         * @returns {String} the resolved URL\r\n         */\r\n        this.resolveUrl = function resolveUrl(url){\r\n            if(!options.assetManager){\r\n                return url;\r\n            }\r\n            if(typeof url === 'string' && url.length > 0){\r\n                return options.assetManager.resolve(url);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @deprecated in favor of resolveUrl\r\n         */\r\n        this.getAbsoluteUrl = function(relUrl){\r\n\r\n            //let until method is removed\r\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\r\n\r\n            //allow relative url output only if explicitely said so\r\n            if(this.getOption('userRelativeUrl')){\r\n                return relUrl.replace(/^\\.?\\//, '');\r\n            }\r\n\r\n            if(/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)){\r\n                //already absolute or base64 encoded\r\n                return relUrl;\r\n            }else{\r\n\r\n                var absUrl = '';\r\n                var runtimeLocations = this.getOption('runtimeLocations');\r\n\r\n                if(runtimeLocations && _.size(runtimeLocations)){\r\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\r\n                        if(relUrl.indexOf(typeIdentifier) === 0){\r\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\r\n                            return false;//break\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if(absUrl){\r\n                    return absUrl;\r\n                }else{\r\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\r\n                    return baseUrl + relUrl;\r\n                }\r\n\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Expose the renderer's factory\r\n     * @exports taoQtiItem/qtiRunner/core/Renderer\r\n     */\r\n    return {\r\n\r\n        /**\r\n         * Creates a new Renderer by extending the Renderer's prototype\r\n         * @param {Object} renderersLocations -\r\n         * @param {String} [name] - the new renderer name\r\n         * @param {Object} [defaultOptions] - the renderer options\r\n         */\r\n        build : function(renderersLocations, name, defaultOptions){\r\n            var NewRenderer = function(){\r\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\r\n\r\n                Renderer.apply(this);\r\n\r\n                this.register(renderersLocations);\r\n                this.name = name || '';\r\n                this.setOptions(_.defaults(options, defaultOptions || {}));\r\n            };\r\n            NewRenderer.prototype = Renderer.prototype;\r\n            return NewRenderer;\r\n        }\r\n    };\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n * The asset manager proposes you to resolve your asset URLs for you!\r\n * You need to add the resolution strategies, it will then evaluate each strategy until the right one is found\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoItems/assets/manager',[\r\n    'lodash',\r\n    'util/url'\r\n], function(_, urlUtil){\r\n    'use strict';\r\n\r\n    /**\r\n     * @typedef AssetStrategy Defines a way to resolve an asset path\r\n     * @property {String} name - the strategy name\r\n     * @property {assetStrategyHandle} handle - how to resolve the strategy.\r\n     */\r\n\r\n    /**\r\n     * @callback assetStrategyHandle\r\n     * @param {String|Object} url - the URL to resolved. If parseUrl, it's an object that contains host, port, search, queryString, etc.\r\n     * @param {Object} data - the context data\r\n     * @returns {String?} falsy if not resolved otherwise the resolved URL\r\n     */\r\n\r\n\r\n    /**\r\n     * The assetManagerFactory create a new assetManager with the given resolution stratgies and a data context.\r\n     *\r\n     * @example\r\n     *   //define AssetStrategies with a name and a handle method\r\n     *   var strategies = [{\r\n     *       name : 'external',\r\n     *       handle : function(url, data){\r\n     *           if(/^http/.test(url)){\r\n     *               return path;\r\n     *           }\r\n     *       }\r\n     *   }, {\r\n     *       name : 'relative',\r\n     *       handle : function(url, data){\r\n     *           if(/^((\\.\\/)|(\\w\\/))/){\r\n     *               return data.baseUrl + '/' + url ;\r\n     *           }\r\n     *       }\r\n     *   }]);\r\n     *\r\n     *   var assetManager = assetManagerFactory(strategies, { baseUrl : 'http://t.oa/public/assets/' });\r\n     *   assetManager.resolve('http://foo/bar.png'); //will resolved using external\r\n     *   assetManager.resolve('bar.png'); //will resolved using relative strategy\r\n     *\r\n     * @param {AssetStrategy[]} strategies - the strategies\r\n     * @param {Object} data - the context data\r\n     * @param {Object} [options] - the manager options\r\n     * @param {Boolean} [options.parseUrl = true] - If the URL to give to the stragies should be parsed or given as it is.\r\n     * @param {Boolean} [options.cache] - resolve the same URL only once and store the result in memory.\r\n     *\r\n     * @exports taoItems/assets/manager\r\n     * @namespace assetManagerFactory\r\n     */\r\n    var assetManagerFactory = function assetManagerFactory(strategies, data, options) {\r\n\r\n        var cache  = {};\r\n\r\n        strategies = _.isArray(strategies) ? strategies : [strategies];\r\n        data       = data || {};\r\n        options    = _.defaults(options || {}, {\r\n            parseUrl : true\r\n        });\r\n\r\n        /**\r\n         * A brand new asset manager is created by the factory\r\n         */\r\n        var assetManager = {\r\n\r\n            /**\r\n             * The stack of strategies that would be used to resolve the asset path\r\n             * @type {AssetStrategy[]}\r\n             */\r\n            _strategies : [],\r\n\r\n            /**\r\n             * Add an asset resolution strategy.\r\n             * The strategies will be evaluated in the order they've been added.\r\n             * @param {AssetStrategy} strategy - the strategy to add\r\n             * @throws {TypeError} if the strategy isn't defined correctly\r\n             */\r\n            addStrategy : function addStrategy (strategy){\r\n\r\n                if(!_.isPlainObject(strategy) || !_.isFunction(strategy.handle) || !_.isString(strategy.name)){\r\n                    throw new TypeError('An asset resolution strategy is an object with a handle method and a name');\r\n                }\r\n\r\n                this._strategies.push(strategy);\r\n            },\r\n\r\n            /**\r\n             * Change the strategies\r\n             * @param {AssetStrategy[]} strategies - the strategies\r\n             * @throws {TypeError} if the strategy isn't defined correctly\r\n             */\r\n            setStrategies : function setStrategies(newStrategies){\r\n                var self = this;\r\n\r\n                this._strategies = [];\r\n\r\n                //assign the strategies to the assetManager\r\n                _.forEach(newStrategies, function(strategy){\r\n\r\n                    //if it's an object we add it directly\r\n                    if(_.isPlainObject(strategy)){\r\n                        assetManager.addStrategy(strategy);\r\n\r\n                    //if it's a function, we create the strategy with a generated name\r\n                    } else if(_.isFunction(strategy)){\r\n                        self.addStrategy({\r\n                            name   : 'strategy_' + (self._strategies.length + 1),\r\n                            handle : strategy\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Set context data\r\n             * @param {String|Object} [key] - the key of the data to set or the data values if it's an object\r\n             * @param {*} [value] - the value to set if a key is given\r\n             */\r\n            setData : function setData(key, value){\r\n                if(_.isString(key) && typeof value !== 'undefined'){\r\n                    data[key] = value;\r\n                } else if(_.isPlainObject(key)){\r\n                    data = key;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get context data\r\n             * @param {String} [key] - if we want the value of a particuar key\r\n             * @returns {Object|*} all the data or the proprety value if key is given\r\n             */\r\n            getData : function getData(key){\r\n                if(_.isString(key)){\r\n                    return data[key];\r\n                }\r\n                return data;\r\n            },\r\n\r\n            /**\r\n             * Resolve the given URL against the strategies\r\n             * @param {String} url - the URL to resolve\r\n             * @returns {String?} the resolved URL or nothing\r\n             */\r\n            resolve : function resolve(url){\r\n                var resolved;\r\n                var inputUrl;\r\n\r\n                //if caching try to load the value from the cache\r\n                if(options.cache && cache.hasOwnProperty(url)){\r\n                    return cache[url];\r\n                }\r\n\r\n                //parse the url ?\r\n                inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\r\n\r\n                //call strategies handlers, in their order until once returns somethin\r\n                _.forEach(this._strategies, function(strategy){\r\n                    var result = strategy.handle(inputUrl, data);\r\n                    if(result){\r\n                        resolved = result;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                resolved = resolved || '';\r\n\r\n                if(options.cache){\r\n                    cache[url] = resolved;\r\n                }\r\n\r\n                return resolved;\r\n            },\r\n\r\n            /**\r\n             * Resolve the given URL against the strategy identified by the given name\r\n             * @param {String} name - the strategy name\r\n             * @param {String} url - the URL to resolve\r\n             * @returns {String?} the resolved URL or nothing\r\n             */\r\n            resolveBy : function resolveBy(name, url){\r\n                var inputUrl;\r\n                var resolved = '';\r\n                var strategy = _.find(this._strategies, {name : name});\r\n                if(strategy){\r\n                    //parse the url ?\r\n                    inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\r\n                    resolved = strategy.handle(inputUrl, data);\r\n                }\r\n                return resolved;\r\n            },\r\n\r\n            /**\r\n             * When the cache is used, it could be useful to clear the cache\r\n             */\r\n            clearCache : function clearCache(){\r\n                if(options.cache){\r\n                    cache = {};\r\n                }\r\n            }\r\n        };\r\n\r\n        assetManager.setStrategies(strategies);\r\n\r\n        return assetManager;\r\n    };\r\n\r\n    return assetManagerFactory;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n * Provides common strategies to resolved assets\r\n * that may be used by any type of items.\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoItems/assets/strategies',[\r\n    'util/url'\r\n], function(urlUtil){\r\n    'use strict';\r\n\r\n    /**\r\n     * Prepend a base to an URL\r\n     * @param {Object} url - a parsed URL\r\n     * @param {String} base - the base to prepend\r\n     * @param {Boolean} [slashcat = false] - remove dots, double slashes, etc.\r\n     * @returns {String} the URL\r\n     */\r\n    var prependToUrl = function prependToUrl(url, base, slashcat){\r\n\r\n        //is slashcat we manage slash concact\r\n        if(slashcat === true){\r\n            return base.replace(/\\/$/, '') + '/' + url.directory.replace(/^\\.\\//, '').replace(/^\\//, '')\r\n                + encodeURIComponent(url.file.replace(/^\\.\\//, '').replace(/^\\//, ''));\r\n        }\r\n\r\n        return base + url.directory.replace(/^\\.?\\//, '') + encodeURIComponent(url.file.replace(/^\\.?\\//, ''));\r\n    };\r\n\r\n    /**\r\n     * Unrelated strategies accessible by there name.\r\n     * Remember to not use the whole object, but each one in an array since the order matters.\r\n     *\r\n     * @exports taoItems/assets/strategies\r\n     */\r\n    var strategies = {\r\n\r\n        //the baseUrl concats the baseUrl in data if the url is relative\r\n        baseUrl : {\r\n            name : 'baseUrl',\r\n            handle : function handleBaseUrl(url, data){\r\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) ){\r\n                    return prependToUrl(url, data.baseUrl, data.slashcat);\r\n                }\r\n            }\r\n        },\r\n\r\n        //bust the cache for item CSS\r\n        itemCssNoCache : {\r\n            name : 'itemCssNoCache',\r\n            handle : function handleItemCss(url, data){\r\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) && /\\.css$/.test(url.file)) {\r\n                    return urlUtil.build(prependToUrl(url, data.baseUrl, data.slashcat), { bust : Date.now() });\r\n                }\r\n            }\r\n        },\r\n\r\n        //absolute URL are just left intact\r\n        external : {\r\n            name : 'external',\r\n            handle : function handleExternal(url){\r\n                if(urlUtil.isAbsolute(url)){\r\n                    return url.toString();\r\n                }\r\n            }\r\n        },\r\n\r\n        //the base64 encoded resources are also left intact\r\n        base64 : {\r\n            name : 'base64',\r\n            handle : function handleB64(url){\r\n                if(urlUtil.isBase64(url)){\r\n                    return url.toString();\r\n                }\r\n            }\r\n        },\r\n\r\n        //special tao media protocol\r\n        taomedia : {\r\n            name : 'taomedia',\r\n            handle : function handleTaoMedia(url, data){\r\n                //either a baseUrl is given or if empty, taomedia resources are managed as relative resources\r\n                var baseUrl = data.baseUrl || './';\r\n                if( (typeof url === 'object' && url.protocol === 'taomedia') ||\r\n                    (/^taomedia:\\/\\//.test(url.toString())) ){\r\n                    return baseUrl + url.toString();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return strategies;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\r\n    'use strict';\r\n\r\n    var _requirejs = window.require;\r\n\r\n    return function portableElementRegistry(methods){\r\n\r\n        var _loaded = false;\r\n        var __providers = {};\r\n\r\n        return eventifier(_.defaults(methods || {}, {\r\n            _registry : {},\r\n            get : function get(typeIdentifier, version){\r\n\r\n                if(this._registry[typeIdentifier]){\r\n                    //check version\r\n                    if(version){\r\n                        return _.find(this._registry[typeIdentifier], version);\r\n                    }else{\r\n                        //latest\r\n                        return _.last(this._registry[typeIdentifier]);\r\n                    }\r\n                }\r\n            },\r\n            registerProvider : function registerProvider(moduleName){\r\n                __providers[moduleName] = null;\r\n                return this;\r\n            },\r\n            resetProviders : function resetProviders(){\r\n                __providers = {};\r\n                return this;\r\n            },\r\n            loadProviders : function loadProviders(){\r\n                var self = this;\r\n                return new Promise(function(resolve, reject) {\r\n                    var providerLoadingStack = [];\r\n                    _.forIn(__providers, function(provider, id){\r\n                        if(provider === null){\r\n                            providerLoadingStack.push(id);\r\n                        }\r\n                    });\r\n                    _requirejs(providerLoadingStack, function(){\r\n                        _.each([].slice.call(arguments), function(provider){\r\n                            if(provider && _.isFunction(provider.load)){\r\n                                __providers[providerLoadingStack.shift()] = provider;\r\n                            }\r\n                        });\r\n                        resolve();\r\n                        self.trigger('providersloaded');\r\n                    }, reject);\r\n                });\r\n            },\r\n            getAllVersions : function getAllVersions(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    all[id] = _.map(versions, 'version');\r\n                });\r\n                return all;\r\n            },\r\n            getRuntime : function getRuntime(typeIdentifier, version){\r\n                var pci = this.get(typeIdentifier, version);\r\n                if(pci){\r\n                    return _.assign(pci.runtime, {\r\n                        id : pci.typeIdentifier,\r\n                        label : pci.label,\r\n                        baseUrl : pci.baseUrl\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n            getCreator : function getCreator(typeIdentifier, version){\r\n                var pci = this.get(typeIdentifier, version);\r\n                if(pci && pci.creator){\r\n                    return _.assign(pci.creator, {\r\n                        id : pci.typeIdentifier,\r\n                        label : pci.label,\r\n                        baseUrl : pci.baseUrl,\r\n                        response : pci.response\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\r\n                var runtime = this.get(typeIdentifier, version);\r\n                if(runtime){\r\n                    return runtime.baseUrl;\r\n                }\r\n                return '';\r\n            },\r\n            loadRuntimes : function loadRuntimes(reload){\r\n                var self = this;\r\n                var loadPromise;\r\n                if(_loaded && !reload){\r\n                    loadPromise = Promise.resolve();\r\n                } else {\r\n                    loadPromise = self.loadProviders().then(function(){\r\n\r\n                        var loadStack = [];\r\n\r\n                        _.each(__providers, function (provider){\r\n                            if(provider){//check that the provider is loaded\r\n                                loadStack.push(provider.load());\r\n                            }\r\n                        });\r\n\r\n                        //performs the loadings in parallel\r\n                        return Promise.all(loadStack).then(function (results){\r\n\r\n                            var requireConfigAliases = {};\r\n\r\n                            //update registry\r\n                            self._registry = _.reduce(results, function (acc, _pcis){\r\n                                return _.merge(acc, _pcis);\r\n                            }, {});\r\n\r\n                            //pre-configuring the baseUrl of the portable element's source\r\n                            _.forIn(self._registry, function (versions, typeIdentifier){\r\n                                //currently use latest runtime path\r\n                                requireConfigAliases[typeIdentifier] = self.getBaseUrl(typeIdentifier);\r\n                            });\r\n                            _requirejs.config({paths : requireConfigAliases});\r\n\r\n                            _loaded = true;\r\n                        });\r\n                    });\r\n                }\r\n\r\n                loadPromise\r\n                    .then(function() {\r\n                        self.trigger('runtimesloaded');\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n            loadCreators : function loadCreators(reload){\r\n\r\n                var self = this;\r\n\r\n                var loadPromise = self.loadRuntimes(reload).then(function(){\r\n                    var requiredCreators = [];\r\n\r\n                    _.forIn(self._registry, function (versions, typeIdentifier){\r\n                        var pciModel = self.get(typeIdentifier);//currently use the latest version only\r\n                        if(pciModel.creator && pciModel.creator.hook){\r\n                            requiredCreators.push(pciModel.creator.hook.replace(/\\.js$/, ''));\r\n                        }\r\n                    });\r\n\r\n                    if(requiredCreators.length){\r\n                        return new Promise(function(resolve, reject){\r\n                            //@todo support caching?\r\n                            _requirejs(requiredCreators, function (){\r\n                                var creators = {};\r\n                                _.each(arguments, function (creatorHook){\r\n                                    var id = creatorHook.getTypeIdentifier();\r\n                                    var pciModel = self.get(id);\r\n                                    var i = _.findIndex(self._registry[id], {version : pciModel.version});\r\n                                    if(i < 0){\r\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + pciModel.version);\r\n                                    }else{\r\n                                        self._registry[id][i].creator.module = creatorHook;\r\n                                        creators[id] = creatorHook;\r\n                                    }\r\n                                });\r\n                                resolve(creators);\r\n                            }, reject);\r\n                        });\r\n                    }else{\r\n                        return Promise.resolve({});\r\n                    }\r\n\r\n                });\r\n\r\n                loadPromise\r\n                    .then(function(creators) {\r\n                        self.trigger('creatorsloaded', creators);\r\n                        return creators;\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            }\r\n        }));\r\n    }\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Sam <sams@taotesting.com>\r\n * @requires jquery\r\n * @requires lodash\r\n */\r\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n'], function($, _, __){\r\n    \"use strict\";\r\n\r\n    var QtiElements = {};\r\n\r\n    QtiElements.classes = {\r\n        //abstract classes:\r\n        'itemBody' : {'parents' : ['bodyElement'], 'contains' : ['block'], 'abstract' : true},\r\n        'atomicBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'atomicInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'simpleBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['block'], 'abstract' : true},\r\n        'simpleInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'flowStatic' : {'parents' : ['flow'], 'abstract' : true},\r\n        'blockStatic' : {'parents' : ['block'], 'abstract' : true},\r\n        'inlineStatic' : {'parents' : ['inline'], 'abstract' : true},\r\n        'flow' : {'parents' : ['objectFlow'], 'abstract' : true},\r\n        'tableCell' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'abstract' : true},\r\n        //html-derived qti elements:\r\n        'caption' : {'parents' : ['bodyElement'], 'contains' : ['inline'], 'xhtml' : true},\r\n        'col' : {'parents' : ['bodyElement'], 'xhtml' : true},\r\n        'colgroup' : {'parents' : ['bodyElement'], 'contains' : ['col'], 'xhtml' : true},\r\n        'div' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'dl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['dlElement'], 'xhtml' : true},\r\n        'dt' : {'parents' : ['dlElement'], 'contains' : ['inline'], 'xhtml' : true},\r\n        'dd' : {'parents' : ['dlElement'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'hr' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'xhtml' : true},\r\n        'math' : {'parents' : ['blockStatic', 'flowStatic', 'inlineStatic'], 'xhtml' : true},\r\n        'li' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'ol' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\r\n        'ul' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\r\n        'object' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['objectFlow'], 'xhtml' : true},\r\n        'param' : {'parents' : ['objectFlow'], 'xhtml' : true},\r\n        'table' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'], 'xhtml' : true},\r\n        'tbody' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'tfoot' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'thead' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'td' : {'parents' : ['tableCell'], 'xhtml' : true},\r\n        'th' : {'parents' : ['tableCell'], 'xhtml' : true},\r\n        'tr' : {'parents' : ['bodyElement'], 'contains' : ['tableCell'], 'xhtml' : true},\r\n        'a' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'abbr' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'acronym' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'b' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'big' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'cite' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'code' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'dfn' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'em' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'i' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'kbd' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'q' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'samp' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'small' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'span' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'strong' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'sub' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'sup' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'tt' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'var' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'blockquote' : {'parents' : ['simpleBlock'], 'xhtml' : true},\r\n        'address' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h1' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h2' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h3' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h4' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h5' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h6' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'p' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'pre' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'img' : {'parents' : ['atomicInline'], 'xhtml' : true, attributes : ['src', 'alt', 'longdesc', 'height', 'width']},\r\n        'br' : {'parents' : ['atomicInline'], 'xhtml' : true},\r\n        //qti elements:\r\n        'infoControl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'qti' : true},\r\n        'textRun' : {'parents' : ['inlineStatic', 'flowstatic'], 'qti' : true},\r\n        'feedbackInline' : {'parents' : ['simpleInline', 'feedbackElement'], 'qti' : true},\r\n        'feedbackBlock' : {'parents' : ['simpleBlock'], 'qti' : true},\r\n        'rubricBlock' : {'parents' : ['simpleBlock'], 'qti' : true}, //strange qti 2.1 exception, marked as simpleBlock instead of\r\n        'blockInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\r\n        'inlineInteraction' : {'parents' : ['inline', 'flow', 'interaction'], 'qti' : true},\r\n        'gap' : {'parents' : ['inlineStatic'], 'qti' : true},\r\n        'hottext' : {'parents' : ['flowstatic', 'inlineStatic'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'printedVariable' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], 'qti' : true},\r\n        'prompt' : {'parents' : ['bodyElement'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'templateElement' : {'parents' : ['bodyElement'], 'qti' : true},\r\n        'templateBlock' : {'parents' : ['blockStatic', 'flowStatic', 'templateElement'], 'contains' : ['blockStatic'], 'qti' : true},\r\n        'templateInline' : {'parents' : ['inlineStatic', 'flowStatic', 'templateElement'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'choiceInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'associateInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'orderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'matchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'hottextInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'gapMatchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'mediaInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'sliderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'uploadInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'drawingInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'graphicInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'hotspotInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicAssociateInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicOrderInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicGapMatchInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'selectPointInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'textEntryInteraction' : {'parents' : ['stringInteraction', 'inlineInteraction'], 'qti' : true},\r\n        'extendedTextInteraction' : {'parents' : ['stringInteraction', 'blockInteraction'], 'qti' : true},\r\n        'inlineChoiceInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\r\n        'endAttemptInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\r\n        'customInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\r\n        '_container' : {'parents' : ['block'], 'qti' : true}//a pseudo class introduced in TAO\r\n    };\r\n\r\n    QtiElements.cache = {containable : {}, children : {}, parents : {}};\r\n\r\n    QtiElements.getAllowedContainersElements = function(qtiClass, $container){\r\n        var classes = QtiElements.getAllowedContainers(qtiClass);\r\n        var jqSelector = '';\r\n        for(var i in classes){\r\n            if(!classes[i].qti){\r\n                //html element:\r\n                jqSelector += classes[i] + ', ';\r\n            }\r\n        }\r\n\r\n        if(jqSelector){\r\n            jqSelector = jqSelector.substring(0, jqSelector.length - 2);\r\n        }\r\n\r\n        return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\r\n    };\r\n\r\n    QtiElements.getAllowedContainers = function(qtiClass){\r\n        var ret;\r\n        if(QtiElements.cache.containable[qtiClass]){\r\n            ret = QtiElements.cache.containable[qtiClass];\r\n        }else{\r\n            ret = [];\r\n            var parents = QtiElements.getParentClasses(qtiClass, true);\r\n            for(var aClass in QtiElements.classes){\r\n                var model = QtiElements.classes[aClass];\r\n                if(model.contains){\r\n                    var intersect = _.intersection(model.contains, parents);\r\n                    if(intersect.length){\r\n                        if(!model.abstract){\r\n                            ret.push(aClass);\r\n                        }\r\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\r\n                    }\r\n                }\r\n            }\r\n            QtiElements.cache.containable[qtiClass] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.getAllowedContents = function(qtiClass, recursive, checked){\r\n\r\n        var ret = [];\r\n        checked = checked || {};\r\n\r\n        var model = QtiElements.classes[qtiClass];\r\n        if(model && model.contains){\r\n            for(var i in model.contains){\r\n                var contain = model.contains[i];\r\n                if(!checked[contain]){\r\n                    checked[contain] = true;\r\n\r\n                    //qtiClass can contain everything defined as its contents\r\n                    ret.push(contain);\r\n\r\n                    //qtiClass can also contain subclass of its contents\r\n                    var children = QtiElements.getChildClasses(contain, true);\r\n                    for(var i in children){\r\n                        var child = children[i];\r\n                        if(!checked[child]){\r\n                            checked[child] = true;\r\n\r\n                            ret.push(child);\r\n\r\n                            //adding children allowed contents depends on the option \"recursive\"\r\n                            if(recursive){\r\n                                ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\r\n                    if(recursive){\r\n                        ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        //qtiClass can contain all allowed contents of its parents:\r\n        var parents = QtiElements.getParentClasses(qtiClass, true);\r\n        for(var i in parents){\r\n            ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\r\n        }\r\n\r\n        return _.uniq(ret, false);\r\n    };\r\n\r\n    QtiElements.isAllowedClass = function(qtiContainerClass, qtiContentClass){\r\n        var allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\r\n        return (_.indexOf(allowedClasses, qtiContentClass) >= 0);\r\n    };\r\n\r\n    QtiElements.getParentClasses = function(qtiClass, recursive){\r\n        var ret;\r\n        if(recursive && QtiElements.cache.parents[qtiClass]){\r\n            ret = QtiElements.cache.parents[qtiClass];\r\n        }else{\r\n            ret = [];\r\n            if(QtiElements.classes[qtiClass]){\r\n                ret = QtiElements.classes[qtiClass].parents;\r\n                if(recursive){\r\n                    for(var i in ret){\r\n                        ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\r\n                    }\r\n                    ret = _.uniq(ret, false);\r\n                }\r\n            }\r\n            QtiElements.cache.parents[qtiClass] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.getChildClasses = function(qtiClass, recursive, type){\r\n        var ret;\r\n        var cacheType = type ? type : 'all';\r\n        if(recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]){\r\n            ret = QtiElements.cache.children[qtiClass][cacheType];\r\n        }else{\r\n            ret = [];\r\n            for(var aClass in QtiElements.classes){\r\n                var model = QtiElements.classes[aClass];\r\n                if(_.indexOf(model.parents, qtiClass) >= 0){\r\n                    if(type){\r\n                        if(model[type]){\r\n                            ret.push(aClass);\r\n                        }\r\n                    }else{\r\n                        ret.push(aClass);\r\n                    }\r\n                    if(recursive){\r\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\r\n                    }\r\n                }\r\n            }\r\n            if(!QtiElements.cache.children[qtiClass]){\r\n                QtiElements.cache.children[qtiClass] = {};\r\n            }\r\n            QtiElements.cache.children[qtiClass][cacheType] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.isBlock = function(qtiClass){\r\n        return QtiElements.is(qtiClass, 'block');\r\n    };\r\n\r\n    QtiElements.isInline = function(qtiClass){\r\n        return QtiElements.is(qtiClass, 'inline');\r\n    };\r\n\r\n    QtiElements.is = function(qtiClass, topClass){\r\n        if(qtiClass === topClass){\r\n            return true;\r\n        }else{\r\n            var parents = QtiElements.getParentClasses(qtiClass, true);\r\n            return (_.indexOf(parents, topClass) >= 0);\r\n        }\r\n    };\r\n\r\n    QtiElements.getAvailableAuthoringElements = function(){\r\n\r\n        return {\r\n            choiceInteraction : {\r\n                label : __('Choice Interaction'),\r\n                description : __('Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'),\r\n                icon : 'icon-choice',\r\n                short : __('Choice'),\r\n                qtiClass : 'choiceInteraction',\r\n                tags:['Common Interactions', 'mcq']\r\n            },\r\n            orderInteraction : {\r\n                label : __('Order Interaction'),\r\n                icon : 'icon-order',\r\n                description : __('Arrange a list of choices in the correct order.'),\r\n                short : __('Order'),\r\n                qtiClass : 'orderInteraction',\r\n                tags:['Common Interactions', 'ordering']\r\n            },\r\n            associateInteraction : {\r\n                label : __('Associate Interaction'),\r\n                icon : 'icon-associate',\r\n                description : __('Create pair(s) from a series of choices.'),\r\n                short : __('Associate'),\r\n                qtiClass : 'associateInteraction',\r\n                tags:['Common Interactions', 'association']\r\n            },\r\n            matchInteraction : {\r\n                label : __('Match Interaction'),\r\n                icon : 'icon-match',\r\n                description : __('Create association(s) between two sets of choices displayed in a table (row and column).'),\r\n                short : __('Match'),\r\n                qtiClass : 'matchInteraction',\r\n                tags:['Common Interactions', 'association']\r\n            },\r\n            hottextInteraction : {\r\n                label : __('Hottext Interaction'),\r\n                icon : 'icon-hottext',\r\n                description : __('Select one or more text parts (hottext) within a text.'),\r\n                short : __('Hottext'),\r\n                qtiClass : 'hottextInteraction',\r\n                tags:['Common Interactions', 'text']\r\n            },\r\n            gapMatchInteraction : {\r\n                label : __('Gap Match Interaction'),\r\n                icon : 'icon-gap-match',\r\n                description : __(' Fill in the gaps in a text from a set of choices.'),\r\n                short : __('Gap Match'),\r\n                qtiClass : 'gapMatchInteraction',\r\n                tags:['Common Interactions', 'text', 'association']\r\n            },\r\n            sliderInteraction : {\r\n                label : __('Slider Interaction'),\r\n                icon : 'icon-slider',\r\n                description :__('Select a value within a numerical range.'),\r\n                short : __('Slider'),\r\n                qtiClass : 'sliderInteraction',\r\n                tags:['Common Interactions', 'special']\r\n            },\r\n            extendedTextInteraction : {\r\n                label : __('Extended Text Interaction'),\r\n                icon : 'icon-extended-text',\r\n                description : __('Collect open-ended information in one or more text area(s) (strings or numeric values).'),\r\n                short : __('Extended Text'),\r\n                qtiClass : 'extendedTextInteraction',\r\n                tags:['Common Interactions', 'text']\r\n            },\r\n            uploadInteraction : {\r\n                label : __('File Upload Interaction'),\r\n                icon : 'icon-upload',\r\n                description : __('Upload a file (e.g. document, picture...) as a response.'),\r\n                short : __('File Upload'),\r\n                qtiClass : 'uploadInteraction',\r\n                tags:['Common Interactions', 'special']\r\n            },\r\n            mediaInteraction : {\r\n                label : __('Media Interaction'),\r\n                icon : 'icon-media',\r\n                description : __('Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'),\r\n                short : __('Media'),\r\n                qtiClass : 'mediaInteraction',\r\n                tags:['Common Interactions', 'media']\r\n            },\r\n            _container : {\r\n                label : __('Text Block'),\r\n                icon : 'icon-font',\r\n                description : __('Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'),\r\n                short : __('Block'),\r\n                qtiClass : '_container',\r\n                tags:['Inline Interactions', 'text']\r\n            },\r\n            inlineChoiceInteraction : {\r\n                label : __('Inline Choice Interaction'),\r\n                icon : 'icon-inline-choice',\r\n                description : __('Select a choice from a drop-down list.'),\r\n                short : __('Inline Choice'),\r\n                qtiClass : 'inlineChoiceInteraction',\r\n                tags:['Inline Interactions', 'inline-interactions', 'mcq']\r\n            },\r\n            textEntryInteraction : {\r\n                label : __('Text Entry Interaction'),\r\n                icon : 'icon-text-entry',\r\n                description : __('Collect open-ended information in a short text input (strings or numeric values).'),\r\n                short : __('Text Entry'),\r\n                qtiClass : 'textEntryInteraction',\r\n                tags:['Inline Interactions', 'inline-interactions', 'text']\r\n            },\r\n            endAttemptInteraction : {\r\n                label : __('End Attempt Interaction'),\r\n                icon : 'icon-end-attempt',\r\n                description : __('Trigger the end of the item attempt.'),\r\n                short : __('End Attempt'),\r\n                qtiClass : 'endAttemptInteraction',\r\n                tags:['Inline Interactions', 'inline-interactions', 'button', 'submit']\r\n            },\r\n            hotspotInteraction : {\r\n                label : __('Hotspot Interaction'),\r\n                icon : 'icon-hotspot',\r\n                description : __('Select one or more areas (hotspots) displayed on an picture.'),\r\n                short : __('Hotspot'),\r\n                qtiClass : 'hotspotInteraction',\r\n                tags:['Graphic Interactions', 'mcq']\r\n            },\r\n            graphicOrderInteraction : {\r\n                label : __('Graphic Order Interaction'),\r\n                icon : 'icon-graphic-order',\r\n                description : __('Order the areas (hotspots) displayed on a picture.'),\r\n                short : __('Order'),\r\n                qtiClass : 'graphicOrderInteraction',\r\n                tags:['Graphic Interactions', 'ordering']\r\n            },\r\n            graphicAssociateInteraction : {\r\n                label : __('Graphic Associate Interaction'),\r\n                icon : 'icon-graphic-associate',\r\n                description : __('Create association(s) between areas (hotspots) displayed on a picture.'),\r\n                short : __('Associate'),\r\n                qtiClass : 'graphicAssociateInteraction',\r\n                tags:['Graphic Interactions', 'association']\r\n            },\r\n            graphicGapMatchInteraction : {\r\n                label : __('Graphic Gap Match Interaction'),\r\n                icon : 'icon-graphic-gap',\r\n                description : __('Fill in the gaps on a picture with a set of image choices.'),\r\n                short : __('Gap Match'),\r\n                qtiClass : 'graphicGapMatchInteraction',\r\n                tags:['Graphic Interactions', 'association']\r\n            },\r\n            selectPointInteraction : {\r\n                label : __('Select Point Interaction'),\r\n                icon : 'icon-select-point',\r\n                description : __('Position one or more points on a picture (response areas are not displayed).'),\r\n                short : __('Select Point'),\r\n                qtiClass : 'selectPointInteraction',\r\n                tags:['Graphic Interactions']\r\n            }\r\n        };\r\n    };\r\n\r\n    return QtiElements;\r\n\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\r\n    'lodash',\r\n    'taoQtiItem/portableElementRegistry/factory/factory',\r\n    'taoQtiItem/qtiCreator/helper/qtiElements'\r\n], function (_, portableElementRegistry, qtiElements){\r\n    'use strict';\r\n\r\n    /**\r\n     * Create a ney interaction registry instance\r\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function customInteractionRegistry(){\r\n\r\n        return portableElementRegistry({\r\n            getAuthoringData : function getAuthoringData(typeIdentifier, version){\r\n                var pciModel = this.get(typeIdentifier, version);\r\n                if(pciModel && pciModel.creator && pciModel.creator.hook && pciModel.creator.icon){\r\n                    return {\r\n                        label : pciModel.label, //currently no translation available\r\n                        icon : pciModel.creator.icon.replace(new RegExp('^' + typeIdentifier + '\\/'), pciModel.baseUrl),\r\n                        short : pciModel.short,\r\n                        description : pciModel.description,\r\n                        qtiClass : 'customInteraction.' + pciModel.typeIdentifier, //custom interaction is block type\r\n                        tags : _.union(['Custom Interactions'], pciModel.tags)\r\n                    };\r\n                }\r\n            }\r\n        }).on('creatorsloaded', function(creators){\r\n            _.each(creators, function(creator){\r\n                qtiElements.classes['customInteraction.' + creator.getTypeIdentifier()] = {parents : ['customInteraction'], qti : true};\r\n            });\r\n        });\r\n    }\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of ciRegistry\r\n    var registry = ciRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\r\n    'lodash',\r\n    'taoQtiItem/portableElementRegistry/factory/factory'\r\n], function (_, portableElementRegistry){\r\n    'use strict';\r\n\r\n    /**\r\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function infoControlRegistry(){\r\n        return portableElementRegistry();\r\n    }\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of icRegistry\r\n    var registry = icRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\r\n    'taoQtiItem/portableElementRegistry/ciRegistry',\r\n    'taoQtiItem/portableElementRegistry/icRegistry'\r\n], function (ciRegistry, icRegistry) {\r\n    'use strict';\r\n\r\n    function getBaseUrlByIdentifier(typeIdentifier) {\r\n        if (ciRegistry.get(typeIdentifier)) {\r\n            return ciRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        if (icRegistry.get(typeIdentifier)) {\r\n            return icRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        return typeIdentifier;\r\n    }\r\n\r\n    //strategy to resolve portable info control and portable interactions paths.\r\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\r\n    return {\r\n        name: 'portableElementLocation',\r\n        handle: function handlePortableElementLocation(url) {\r\n\r\n            if (url.file === url.path) {\r\n                return getBaseUrlByIdentifier(url.file);\r\n            } else if (url.source === url.relative) {\r\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\r\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\r\n                    if (runtimeLocation) {\r\n                        return runtimeLocation + '/' + relPath;\r\n                    }\r\n                    return fullmatch;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('taoQtiItem/qtiCommonRenderer/renderers/config',[\r\n    'lodash',\r\n    'context',\r\n    'ui/themes',\r\n    'taoItems/assets/manager',\r\n    'taoItems/assets/strategies',\r\n    'module',\r\n    'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'\r\n], function(_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy){\r\n    'use strict';\r\n\r\n    var itemThemes = themes.get('items');\r\n    var moduleConfig = module.config();\r\n\r\n    //Create asset manager stack\r\n    var assetManager = assetManagerFactory([\r\n        {\r\n            name : 'theme',\r\n            handle : function handleTheme(url){\r\n                if(itemThemes && url.path && (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))){\r\n                    return context.root_url + url.toString();\r\n                }\r\n            }\r\n        },\r\n        assetStrategies.taomedia,\r\n        assetStrategies.external,\r\n        assetStrategies.base64,\r\n        assetStrategies.itemCssNoCache,\r\n        assetStrategies.baseUrl,\r\n        portableAssetStrategy\r\n    ], {baseUrl : ''});//baseUrl is not predefined in the config, but should be set upon renderer instantiating\r\n\r\n    //renderers locations\r\n    var locations = {\r\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\r\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\r\n        '_simpleFeedbackRule' : false,\r\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\r\n        'outcomeDeclaration' : false,\r\n        'responseDeclaration' : false,\r\n        'responseProcessing' : false,\r\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\r\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\r\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\r\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\r\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\r\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\r\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\r\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\r\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\r\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\r\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\r\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\r\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\r\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\r\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\r\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\r\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\r\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\r\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\r\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\r\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\r\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\r\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\r\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\r\n        'hotspotChoice' : false,\r\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\r\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\r\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\r\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\r\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\r\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\r\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\r\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\r\n        'associableHotspot' : false,\r\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\r\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\r\n        'include' : 'taoQtiItem/qtiCommonRenderer/renderers/Include',\r\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\r\n    };\r\n\r\n    return {\r\n        name:'commonRenderer',\r\n        locations: locations,\r\n        options:   {\r\n            assetManager: assetManager,\r\n            themes : itemThemes,\r\n            enableDragAndDrop: {\r\n                associate: !!moduleConfig.associateDragAndDrop,\r\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\r\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\r\n                order: !!moduleConfig.orderDragAndDrop\r\n            },\r\n            messages : moduleConfig.messages\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\n/**\r\n * Define the Qti Item Common Renderer\r\n */\r\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Renderer',[\r\n    'taoQtiItem/qtiRunner/core/Renderer',\r\n    'taoQtiItem/qtiCommonRenderer/renderers/config'\r\n], function(Renderer, config){\r\n    'use strict';\r\n\r\n    return Renderer.build(config.locations, config.name, config.options);\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/performances/tester',[\r\n    'jquery',\r\n    'lodash',\r\n    'async',\r\n    'context',\r\n    'helpers',\r\n    'taoClientDiagnostic/tools/stats',\r\n    'taoQtiItem/qtiItem/core/Loader',\r\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\r\n    'lib/polyfill/performance-now'\r\n], function($, _, async, context, helpers, stats, Loader, Renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Duration of one second (in milliseconds)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _second = 1000;\r\n\r\n    /**\r\n     * Default timeout duration\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _defaultTimeout = 30 * _second;\r\n\r\n    /**\r\n     * Default number of renderings by samples\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _defaultOccurrencesCount = 10;\r\n\r\n    /**\r\n     * List of default samples\r\n     * @type {Array}\r\n     */\r\n    var _defaultSamples = [\r\n        'taoClientDiagnostic/tools/performances/data/sample1/',\r\n        'taoClientDiagnostic/tools/performances/data/sample2/',\r\n        'taoClientDiagnostic/tools/performances/data/sample3/'\r\n    ];\r\n\r\n    /**\r\n     * Base text used to build sample identifiers\r\n     * @type {String}\r\n     * @private\r\n     */\r\n    var _sampleBaseId = 'sample';\r\n\r\n    /**\r\n     * Loads a page inside a div and compute the time to load\r\n     * @param {Object} data The descriptor of the page to load\r\n     * @param {Function} done A callback function called to provide the result\r\n     */\r\n    function loadItem(data, done){\r\n\r\n        //item location config\r\n        var qtiJsonFile = data.url + 'qti.json';\r\n        var urlTokens = data.url.split('/');\r\n        var extension = urlTokens[0];\r\n        var fullpath = require.s.contexts._.config.paths[extension];\r\n        var baseUrl = data.url.replace(extension, fullpath);\r\n        var loader = new Loader();\r\n        var renderer = new Renderer({\r\n            baseUrl : baseUrl       // compatibility mode for legacy installations\r\n        });\r\n\r\n        // check needed by compatibility mode for legacy installations\r\n        if (renderer.getAssetManager) {\r\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\r\n        }\r\n\r\n        require(['json!'+qtiJsonFile], function(itemData){\r\n\r\n            loader.loadItemData(itemData, function(item){\r\n                renderer.load(function(){\r\n\r\n                    var $container,\r\n                        duration,\r\n                        start,\r\n                        end,\r\n                        result;\r\n\r\n                    //start right before rendering\r\n                    start = window.performance.now();\r\n\r\n                    //set renderer\r\n                    item.setRenderer(this);\r\n\r\n                    //render markup\r\n                    $container = $('<div>').appendTo('body');\r\n                    $container.append(item.render());\r\n\r\n                    //execute javascript\r\n                    item.postRender();\r\n\r\n                    //remove item\r\n                    $container.remove();\r\n\r\n                    //done\r\n                    end = window.performance.now();\r\n\r\n                    duration = (end - start) / _second;\r\n\r\n                    result = {\r\n                        id : data.id,\r\n                        url : data.url,\r\n                        duration: duration\r\n                    };\r\n\r\n                    done(null, result);\r\n\r\n                }, this.getLoadedClasses());\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Performs a browser performances test by running a heavy page\r\n     *\r\n     * @param {Array} [samples]\r\n     * @param {Number} [occurrences]\r\n     * @param {Number} [timeout]\r\n     * @returns {Object}\r\n     */\r\n    var performancesTester = function performancesTester(samples, occurrences, timeout) {\r\n        var idx = 0;\r\n        var _samples = _.map(!_.isEmpty(samples) && samples || _defaultSamples, function(sample) {\r\n            idx ++;\r\n            return {\r\n                id : _sampleBaseId + idx,\r\n                url : sample,\r\n                timeout : timeout || _defaultTimeout,\r\n                nb : occurrences || _defaultOccurrencesCount\r\n            };\r\n        });\r\n\r\n        // add one occurrence on the first sample to obfuscate the time needed to load the runner\r\n        _samples[0].nb ++;\r\n\r\n        return {\r\n            /**\r\n             * Performs a performances test, then call a function to provide the result\r\n             * @param {Function} done\r\n             */\r\n            start: function start(done) {\r\n                var tests = [];\r\n                _.forEach(_samples, function(data) {\r\n                    var cb = _.partial(loadItem, data);\r\n                    var iterations = data.nb || 1;\r\n                    while (iterations --) {\r\n                        tests.push(cb);\r\n                    }\r\n                });\r\n\r\n                async.series(tests, function(err, measures) {\r\n                    var decimals = 2;\r\n                    var results;\r\n\r\n                    if(err && !measures.length){\r\n                        //something went wrong\r\n                        throw err;\r\n                    }\r\n\r\n                    // remove the first result to obfuscate the time needed to load the runner\r\n                    measures.shift();\r\n\r\n                    results = stats(measures, 'duration', decimals);\r\n\r\n                    done(results.average, results);\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n    return performancesTester;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\r\n    'lodash',\r\n    'async',\r\n    'context',\r\n    'taoClientDiagnostic/tools/stats',\r\n    'taoClientDiagnostic/tools/fixedDecimals',\r\n    'lib/polyfill/performance-now'\r\n], function(_, async, context, stats, fixedDecimals) {\r\n    'use strict';\r\n\r\n    /**\r\n     * A binary kilo bytes (KiB)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _kilo = 1024;\r\n\r\n    /**\r\n     * A binary mega bytes (MiB)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _mega = _kilo * _kilo;\r\n\r\n    /**\r\n     * Duration of one second (in milliseconds)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _second = 1000;\r\n\r\n    /**\r\n     * List of descriptors defining the data sets to download.\r\n     * - file : path of the file containing the test data\r\n     * - size : the given size of the file\r\n     * - timeout : the timeout for the download\r\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\r\n     * - nb : number of download iterations\r\n     * @type {Object}\r\n     */\r\n    var _downloadData = {\r\n        \"10KB\" : {\r\n            id : '10KB',\r\n            file : 'data/bin10KB.data',\r\n            size : 10 * _kilo,\r\n            timeout : _second,\r\n            threshold : 0,\r\n            nb : 10\r\n        },\r\n        \"100KB\" : {\r\n            id : '100KB',\r\n            file : 'data/bin100KB.data',\r\n            size : 100 * _kilo,\r\n            timeout : 2 * _second,\r\n            threshold : 0,\r\n            nb : 5\r\n        },\r\n        \"1MB\" : {\r\n            id : '1MB',\r\n            file : 'data/bin1MB.data',\r\n            size : _mega,\r\n            timeout : 20 * _second,\r\n            threshold : 0,\r\n            nb : 3\r\n        },\r\n        \"10MB\" : {\r\n            id : '10MB',\r\n            file : 'data/bin10MB.data',\r\n            size : 10 * _mega,\r\n            timeout : 20 * _second,\r\n            threshold : 8,\r\n            nb : 3\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Download a data set as described by the provided descriptor and compute the duration.\r\n     * @param {Object} data The data set descriptor to use for download\r\n     * @param {Function} cb A callback function called at the end of the download.\r\n     * This callback is also called if a timeout breaks the download;\r\n     */\r\n    var download = function download(data, cb) {\r\n        var self = this;\r\n        var start, end;\r\n        var timeoutId;\r\n        var url;\r\n        var request;\r\n\r\n        if (data.threshold && this.bandwidth < data.threshold) {\r\n            return cb('threshold');\r\n        }\r\n\r\n        url = context.root_url + '/taoClientDiagnostic/views/js/tools/bandwidth/' + data.file + '?' + Date.now();\r\n        request = new XMLHttpRequest();\r\n        request.open('GET', url, true);\r\n        request.setRequestHeader('Accept', 'application/octet-stream');\r\n\r\n        request.onload = function onRequestLoad () {\r\n            var duration;\r\n            var bytes;\r\n            var seconds;\r\n            var speed;\r\n\r\n            end = window.performance.now();\r\n            clearTimeout(timeoutId);\r\n\r\n            duration = end - start;\r\n            bytes = data.size;\r\n            seconds = duration / _second;\r\n\r\n            // speed in Mbps\r\n            speed = ((bytes * 8) / seconds) / _mega;\r\n\r\n            self.bandwidth = Math.max(self.bandwidth, speed);\r\n\r\n            return cb(null, {\r\n                id : data.id,\r\n                file : data.file,\r\n                size : data.size,\r\n                duration : duration,\r\n                speed : speed\r\n            });\r\n        };\r\n        request.onerror = function onRequestError (err) {\r\n            clearTimeout(timeoutId);\r\n            cb(err);\r\n        };\r\n\r\n        timeoutId = _.delay(cb, data.timeout, 'timeout');\r\n        start = window.performance.now();\r\n        request.send();\r\n    };\r\n\r\n    /**\r\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    var bandwidthTester = function bandwidthTester (){\r\n        return {\r\n            /**\r\n             * Performs a bandwidth test, then call a function to provide the result\r\n             * @param {Function} done\r\n             */\r\n            start : function start(done){\r\n                var self = this;\r\n                var tests = [];\r\n                _.forEach(_downloadData, function(data) {\r\n                    var cb = _.bind(download, self, data);\r\n                    var iterations = data.nb || 1;\r\n                    while (iterations --) {\r\n                        tests.push(cb);\r\n                    }\r\n                });\r\n\r\n                this.bandwidth = 0;\r\n\r\n                async.series(tests, function(err, measures) {\r\n                    var duration = 0;\r\n                    var size = 0;\r\n                    var decimals = 2;\r\n                    var getValue;\r\n                    var results;\r\n\r\n                    if (err && !measures.length) {\r\n                        //something went wrong\r\n                        throw err;\r\n                    }\r\n\r\n                    getValue = function(value) {\r\n                        var speed = 0;\r\n\r\n                        if (value) {\r\n                            duration += value.duration;\r\n                            size += value.size;\r\n\r\n                            speed = value.speed;\r\n                            value.speed = fixedDecimals(speed, decimals);\r\n                        }\r\n\r\n                        return speed;\r\n                    };\r\n\r\n                    results = stats(measures, getValue, decimals);\r\n\r\n                    results.duration = fixedDecimals(duration / _second, decimals);\r\n                    results.size = size;\r\n\r\n                    done(results.average, results);\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n    return bandwidthTester;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\ndefine('taoClientDiagnostic/tools/upload/tester',[\r\n    'jquery',\r\n    'lodash',\r\n    'async',\r\n    'util/url'\r\n], function($, _, async, urlHelper) {\r\n    'use strict';\r\n\r\n    /**\r\n     * A binary kilo bytes (KiB)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _kilo = 1024;\r\n\r\n    /**\r\n     * A binary mega bytes (MiB)\r\n     * @type {Number}\r\n     * @private\r\n     */\r\n    var _mega = _kilo * _kilo;\r\n\r\n    /**\r\n     * Result of diagnostic\r\n     */\r\n    var data = [];\r\n\r\n    /**\r\n     * Generate random string of given length\r\n     * @param length\r\n     */\r\n    var generateStr = function generateStr(length) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for( var i=0; i < length; i++ ) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    };\r\n\r\n    /**\r\n     * Upload generated string to check upload speed.\r\n     * @param {number} size of string to upload in bytes\r\n     * @return {object} jqXHR\r\n     */\r\n    var upload = function upload(size) {\r\n\r\n        var url = urlHelper.route('upload', 'CompatibilityChecker', 'taoClientDiagnostic', {cache : Date.now()});\r\n        var str = generateStr(size);\r\n        data = [];\r\n\r\n        return $.ajax({\r\n            url : url,\r\n            type : 'POST',\r\n            data : {\r\n                upload : str\r\n            },\r\n            xhr: function() {\r\n                var xhr = new window.XMLHttpRequest();\r\n                var startTime = Date.now();\r\n                // Upload progress\r\n                xhr.upload.addEventListener(\"progress\", function(evt){\r\n                    if (evt.lengthComputable) {\r\n                        var passedTime = Date.now() - startTime;\r\n                        data.push({\r\n                            time: passedTime,\r\n                            loaded: evt.loaded,\r\n                            speed: ((evt.loaded * 8) / _mega) / (passedTime / 1000)\r\n                        });\r\n                    }\r\n                }, false);\r\n\r\n                return xhr;\r\n            },\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs a upload speed test\r\n     * @returns {Object}\r\n     */\r\n    var uploadTester = function uploadTester (config){\r\n        return {\r\n            /**\r\n             * Performs upload speed test, then call a function to provide the result\r\n             * @param {Function} done\r\n             */\r\n            start : function start(done) {\r\n                var jqXHR = upload(parseInt(config.size, 10));\r\n                jqXHR.then(function() {\r\n                    done(data);\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n    return uploadTester;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/getconfig',['lodash'], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Gets a config set\r\n     * @param {Object} [config]\r\n     * @param {Object} [defaults]\r\n     * @returns {Object}\r\n     */\r\n    return function getConfig(config, defaults) {\r\n        return _(config || {})\r\n            .omit(function (value) {\r\n                return value === null || value === undefined;\r\n            })\r\n            .defaults(defaults || {})\r\n            .value();\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/browser/tester',[\r\n    'jquery',\r\n    'i18n',\r\n    'helpers',\r\n    'taoClientDiagnostic/tools/getconfig'\r\n], function ($, __, helpers, getConfig) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Some default values\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaults = {\r\n        action: 'whichBrowser',\r\n        controller: 'CompatibilityChecker',\r\n        extension: 'taoClientDiagnostic'\r\n    };\r\n\r\n    /**\r\n     * Gets the URL of the browser tester\r\n     * @param {Window} window - Need an access to the window object\r\n     * @param {String} action - The name of the action to call to get the browser checker\r\n     * @param {String} controller - The name of the controller to call to get the browser checker\r\n     * @param {String} extension - The name of the extension containing the controller to call to get the browser checker\r\n     * @returns {String}\r\n     */\r\n    function getTesterUrl(window, action, controller, extension) {\r\n        var document = window.document;\r\n        var navigator = window.navigator;\r\n        var screen = window.screen;\r\n        var params = {};\r\n        var e = 0;\r\n        var f = 0;\r\n\r\n        // append the browser user agent\r\n        params.ua = navigator.userAgent;\r\n\r\n        // detect browser family\r\n        e |= window.ActiveXObject ? 1 : 0;\r\n        e |= window.opera ? 2 : 0;\r\n        e |= window.chrome ? 4 : 0;\r\n        e |= 'getBoxObjectFor' in document || 'mozInnerScreenX' in window ? 8 : 0;\r\n        e |= ('WebKitCSSMatrix' in window || 'WebKitPoint' in window || 'webkitStorageInfo' in window || 'webkitURL' in window) ? 16 : 0;\r\n        e |= (e & 16 && ({}.toString).toString().indexOf(\"\\n\") === -1) ? 32 : 0;\r\n        params.e = e;\r\n\r\n        // gather info about browser functionality\r\n        f |= 'sandbox' in document.createElement('iframe') ? 1 : 0;\r\n        f |= 'WebSocket' in window ? 2 : 0;\r\n        f |= window.Worker ? 4 : 0;\r\n        f |= window.applicationCache ? 8 : 0;\r\n        f |= window.history && window.history.pushState ? 16 : 0;\r\n        f |= document.documentElement.webkitRequestFullScreen ? 32 : 0;\r\n        f |= 'FileReader' in window ? 64 : 0;\r\n        params.f = f;\r\n\r\n        // append a unique ID\r\n        params.r = Math.random().toString(36).substring(7);\r\n\r\n        // get the screen size\r\n        params.w = screen.width;\r\n        params.h = screen.height;\r\n\r\n        return helpers._url(action, controller, extension, params);\r\n    }\r\n\r\n    /**\r\n     * Performs a browser support test\r\n     *\r\n     * @param {Window} window - Need an access to the window object\r\n     * @param {Object} [config] - Some optional configs\r\n     * @param {String} [config.action] - The name of the action to call to get the browser checker\r\n     * @param {String} [config.controller] - The name of the controller to call to get the browser checker\r\n     * @param {String} [config.extension] - The name of the extension containing the controller to call to get the browser checker\r\n     * @returns {Object}\r\n     */\r\n    function browserTester(window, config) {\r\n        var initConfig = getConfig(config || {}, _defaults);\r\n\r\n        return {\r\n            /**\r\n             * Performs a browser support test, then call a function to provide the result\r\n             * @param {Function} done\r\n             */\r\n            start: function start(done) {\r\n                var url = getTesterUrl(window, initConfig.action, initConfig.controller, initConfig.extension);\r\n                $.ajax({\r\n                    url : url,\r\n                    success : function(data) {\r\n                        done(data);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    return browserTester;\r\n});\r\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/main', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.info) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.info); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"diagnostics-main-area\\\">\\r\\n\\r\\n    <h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\r\\n\\r\\n    <div class=\\\"intro\\\">\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.info), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\";\n  if (helper = helpers.button) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.button); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</button>\\r\\n    </div>\\r\\n\\r\\n    <ul class=\\\"plain results\\\"></ul>\\r\\n\\r\\n    <div class=\\\"status\\\">\\r\\n        <h2></h2>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/result', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n        <div class=\\\"small feedback feedback-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n            <span class=\\\"icon icon-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\r\\n            <span class=\\\"msg\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.legend), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        </div>\\r\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"legend\\\">\";\n  if (helper = helpers.legend) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.legend); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\r\\n        <div class=\\\"quality-bar\\\">\\r\\n            <div class=\\\"quality-indicator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.wide), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"></div>\\r\\n        </div>\\r\\n        \";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  \n  return \" wide\";\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <button data-action=\\\"show-details\\\" class=\\\"rgt btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Details\", options) : helperMissing.call(depth0, \"__\", \"Show Details\", options)))\n    + \"</button>\\r\\n        <button data-action=\\\"hide-details\\\" class=\\\"rgt btn-info small hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide Details\", options) : helperMissing.call(depth0, \"__\", \"Hide Details\", options)))\n    + \"</button>\\r\\n        <div class=\\\"details hidden\\\">\\r\\n            <h2>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Details\", options) : helperMissing.call(depth0, \"__\", \"Details\", options)))\n    + \"</h2>\\r\\n            <div>\\r\\n                <table class=\\\"matrix\\\">\\r\\n                    <tbody>\\r\\n                    \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n                        <tr><td>\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td><td>\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td></tr>\\r\\n                    \";\n  return buffer;\n  }\n\n  buffer += \"<li data-result=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n    <h2>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h2>\\r\\n    <div>\\r\\n        \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.feedback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n\\r\\n        \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.quality), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n    </div>\\r\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.details), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n</li>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoClientDiagnosticCss/diagnostics',[],function(){});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n * @author dieter <dieter@taotesting.com>\r\n */\r\ndefine('taoClientDiagnostic/tools/diagnostic/diagnostic',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'async',\r\n    'helpers',\r\n    'ui/feedback',\r\n    'ui/component',\r\n    'taoClientDiagnostic/tools/diagnostic/status',\r\n    'taoClientDiagnostic/tools/performances/tester',\r\n    'taoClientDiagnostic/tools/bandwidth/tester',\r\n    'taoClientDiagnostic/tools/upload/tester',\r\n    'taoClientDiagnostic/tools/browser/tester',\r\n    'taoClientDiagnostic/tools/getconfig',\r\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/main',\r\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/result',\r\n    'css!taoClientDiagnosticCss/diagnostics'\r\n], function ($, _, __, async, helpers, feedback, component, statusFactory, performancesTester, bandwidthTester, uploadTester, browserTester,getConfig,  mainTpl, resultTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Some default values\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaults = {\r\n        title: __('Diagnostic Tool'),\r\n        header: __('This tool will run a number of tests in order to establish how well your current environment is suitable to run the TAO platform.'),\r\n        info: __('Be aware that these tests will take up to several minutes.'),\r\n        button: __('Begin diagnostics'),\r\n        actionStore: 'storeData',\r\n        actionCheck: 'check',\r\n        controller: 'DiagnosticChecker',\r\n        extension: 'taoClientDiagnostic'\r\n    };\r\n\r\n    /**\r\n     * Default values for the browser tester\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaultsBrowser = {\r\n        action: 'whichBrowser',\r\n        controller: 'CompatibilityChecker',\r\n        extension: 'taoClientDiagnostic'\r\n    };\r\n\r\n    /**\r\n     * Default values for the bandwidth tester\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaultsBandwidth = {\r\n        // The typical bandwidth needed for a test taker (Mbps)\r\n        unit: 0.16,\r\n\r\n        // The thresholds for optimal bandwidth\r\n        ideal: 45,\r\n\r\n        // Maximum number of test takers to display\r\n        max: 100\r\n    };\r\n\r\n    /**\r\n     * Default values for the performances tester\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaultsPerformances = {\r\n        // The threshold for optimal performances\r\n        optimal: 0.025,\r\n\r\n        // The threshold for minimal performances\r\n        threshold: 0.25\r\n    };\r\n\r\n    /**\r\n     * Defines a diagnostic tool\r\n     * @type {Object}\r\n     */\r\n    var diagnostic = {\r\n        /**\r\n         * Updates the displayed status\r\n         * @param {String} status\r\n         * @returns {diagnostic}\r\n         * @private\r\n         */\r\n        changeStatus: function changeStatus(status) {\r\n            if (this.is('rendered')) {\r\n                this.controls.$status.html(status);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sends the detailed stats to the server\r\n         * @param {String} type The type of stats\r\n         * @param {Object} details The stats details\r\n         * @param {Function} done A callback method called once server has responded\r\n         */\r\n        store: function store(type, details, done) {\r\n            var config = this.config;\r\n\r\n            details = _.omit(details, 'values');\r\n            details.type = type;\r\n\r\n            $.post(\r\n                helpers._url(config.actionStore, config.controller, config.extension, config.storeParams),\r\n                details,\r\n                done,\r\n                \"json\"\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Performs a browser checks\r\n         * @param {Function} done\r\n         */\r\n        checkBrowser: function checkBrowser(done) {\r\n            var self = this;\r\n            var config = this.config;\r\n\r\n            this.changeStatus(__('Checking the browser...'));\r\n\r\n            browserTester(window, getConfig(this.config.browser, _defaultsBrowser)).start(function (information) {\r\n                // which browser\r\n                $.post(\r\n                    helpers._url(config.actionCheck, config.controller, config.extension, config.storeParams),\r\n                    information,\r\n                    function (data) {\r\n                        var percentage = ('success' === data.type) ? 100 : (('warning' === data.type) ? 33 : 0);\r\n                        var status = self.status.getStatus(percentage, data);\r\n                        var summary = {\r\n                            browser: {\r\n                                message: __('Web browser'),\r\n                                value: information.browser + ' ' + information.browserVersion\r\n                            },\r\n                            os: {\r\n                                message: __('Operating system'),\r\n                                value: information.os + ' ' + information.osVersion\r\n                            }\r\n                        };\r\n\r\n                        status.id = 'browser';\r\n                        status.title = __('Operating system and web browser');\r\n\r\n                        self.addResult(status);\r\n\r\n                        done(status, summary);\r\n                    },\r\n                    'json'\r\n                );\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Performs a browser performances check\r\n         * @param {Function} done\r\n         */\r\n        checkPerformances: function checkPerformances(done) {\r\n            var self = this;\r\n            var config = getConfig(this.config.performances, _defaultsPerformances);\r\n            var optimal = config.optimal;\r\n            var range = Math.abs(optimal - (config.threshold));\r\n\r\n            this.changeStatus(__('Checking the performances...'));\r\n            performancesTester(config.samples, config.occurrences, config.timeout * 1000).start(function (average, details) {\r\n                var cursor = range - average + optimal;\r\n                var status = self.status.getStatus(cursor / range * 100, 'performances');\r\n                var summary = {\r\n                    performancesMin: {message: __('Minimum rendering time'), value: details.min + ' s'},\r\n                    performancesMax: {message: __('Maximum rendering time'), value: details.max + ' s'},\r\n                    performancesAverage: {message: __('Average rendering time'), value: details.average + ' s'}\r\n                };\r\n\r\n                self.store('performance', details, function () {\r\n                    status.id = 'performance';\r\n                    status.title = __('Workstation performances');\r\n\r\n                    self.addResult(status);\r\n                    done(status, summary);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Performs a browser bandwidth check\r\n         * @param {Function} done\r\n         */\r\n        checkBandwidth: function checkBandwidth(done) {\r\n            var self = this;\r\n            var config = getConfig(this.config.bandwidth, _defaultsBandwidth);\r\n\r\n            this.changeStatus(__('Checking the bandwidth...'));\r\n            bandwidthTester().start(function (average, details) {\r\n                var summary = {\r\n                    bandwidthMin: {message: __('Minimum bandwidth'), value: details.min + ' Mbps'},\r\n                    bandwidthMax: {message: __('Maximum bandwidth'), value: details.max + ' Mbps'},\r\n                    bandwidthAverage: {message: __('Average bandwidth'), value: details.average + ' Mbps'}\r\n                };\r\n\r\n                self.store('bandwidth', details, function () {\r\n                    var status = [];\r\n\r\n                    var bandwidthUnit = config.unit;\r\n                    var testTakers = config.ideal;\r\n                    var maxTestTakers = config.max;\r\n\r\n                    if (!_.isArray(testTakers)) {\r\n                        testTakers = [testTakers];\r\n                    }\r\n\r\n                    _.forEach(testTakers, function (threshold, i) {\r\n                        var max = threshold * bandwidthUnit;\r\n                        var st = self.status.getStatus(details.max / max * 100, 'bandwidth');\r\n                        var nb = Math.floor(details.max / bandwidthUnit);\r\n\r\n                        if (nb > maxTestTakers) {\r\n                            nb = '>' + maxTestTakers;\r\n                        }\r\n\r\n                        st.id = 'bandwidth-' + i;\r\n                        st.title = __('Bandwidth');\r\n                        st.feedback.legend = __('Number of simultaneous test takers the connection can handle');\r\n\r\n                        st.quality.label = nb;\r\n\r\n                        if (nb.toString().length > 2) {\r\n                            st.quality.wide = true;\r\n                        }\r\n\r\n                        status.push(st);\r\n\r\n                        self.addResult(st);\r\n                    });\r\n\r\n                    done(status, summary);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check upload speed\r\n         * @param {Function} done\r\n         */\r\n        checkUpload: function checkUpload(done) {\r\n            var self = this;\r\n            var config = this.config.upload;\r\n\r\n            this.changeStatus(__('Checking upload speed...'));\r\n            uploadTester(config).start(function (data) {\r\n                var totalSpeed = 0;\r\n                var avgSpeed;\r\n                var maxSpeed = 0;\r\n                var optimal = config.optimal / 1024 / 1024;\r\n\r\n                _.forEach(data, function (val) {\r\n                    totalSpeed += val.speed;\r\n                    if (maxSpeed < val.speed) {\r\n                        maxSpeed = Math.round(val.speed * 100) / 100;\r\n                    }\r\n                });\r\n                avgSpeed = Math.round(totalSpeed / data.length * 100) / 100;\r\n\r\n                var status = self.status.getStatus((100 / optimal) * avgSpeed, 'upload');\r\n                var summary = {\r\n                    uploadAvg: {message: __('Average upload speed'), value: avgSpeed + ' Mbps'},\r\n                    uploadMax: {message: __('Max upload speed'), value: maxSpeed + ' Mbps'},\r\n                };\r\n\r\n                self.store('upload', {\r\n                    max: maxSpeed,\r\n                    avg: avgSpeed,\r\n                    type: 'upload'\r\n                }, function () {\r\n                    status.id = 'upload';\r\n                    status.title = __('Upload speed');\r\n\r\n                    self.addResult(status);\r\n\r\n                    done(status, summary);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add a result row\r\n         * @param {Object} result\r\n         * @returns {diagnostic}\r\n         */\r\n        addResult: function addResult(result) {\r\n            var $result, $indicator;\r\n\r\n            if (this.is('rendered')) {\r\n                // adjust the width of the displayed label, if any, to the text length\r\n                if (result.quality && result.quality.label && result.quality.label.toString().length > 2) {\r\n                    result.quality.wide = true;\r\n                }\r\n\r\n                // create and append the result to the displayed list\r\n                $result = $(resultTpl(result));\r\n                $indicator = $result.find('.quality-indicator');\r\n                this.controls.$results.append($result);\r\n\r\n                // the result is hidden by default, show it with a little animation\r\n                $result.fadeIn(function () {\r\n                    if ($indicator.length) {\r\n                        $indicator.animate({\r\n                            left: (result.percentage * $result.outerWidth() / 100) - ($indicator.outerWidth() / 2)\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Does some preparations before starting the diagnostics\r\n         * @returns {diagnostic}\r\n         * @private\r\n         */\r\n        prepare: function prepare() {\r\n            /**\r\n             * Notifies the diagnostic start\r\n             * @event diagnostic#start\r\n             */\r\n            this.trigger('start');\r\n            this.changeStatus(__('Starting...'));\r\n            this.setState('running', true);\r\n            this.setState('done', false);\r\n\r\n            // first we need a clean space to display the results, so remove the last results if any\r\n            this.controls.$results.empty();\r\n\r\n            // remove the start button during the diagnostic\r\n            this.controls.$start.addClass('hidden');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Does some post process after ending the diagnostics\r\n         * @returns {diagnostic}\r\n         * @private\r\n         */\r\n        finish: function finish() {\r\n            // restore the start button to allow a new diagnostic run\r\n            this.controls.$start.removeClass('hidden');\r\n\r\n            /**\r\n             * Notifies the diagnostic end\r\n             * @event diagnostic#end\r\n             */\r\n            this.trigger('end');\r\n            this.changeStatus(__('Done!'));\r\n            this.setState('running', false);\r\n            this.setState('done', true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Runs the diagnostics\r\n         * @returns {diagnostic}\r\n         */\r\n        run: function run() {\r\n            var self = this;\r\n            var information = {};\r\n            var scores = {};\r\n\r\n            // common handling for testers\r\n            function doCheck(method, cb) {\r\n                /**\r\n                 * Notifies the start of a tester operation\r\n                 * @event diagnostic#starttester\r\n                 * @param {String} name - The name of the tester\r\n                 */\r\n                self.trigger('starttester', method);\r\n                self.setState(method, true);\r\n\r\n                self[method](function (status, details) {\r\n                    // the returned details must be ingested into the main details list\r\n                    _.assign(information, details);\r\n\r\n                    // sometimes it is an array, sometimes not...\r\n                    // simplify all by only supporting arrays\r\n                    if (!_.isArray(status)) {\r\n                        status = [status];\r\n                    }\r\n                    _.forEach(status, function (st) {\r\n                        scores[st.id] = st;\r\n                    });\r\n\r\n                    /**\r\n                     * Notifies the end of a tester operation\r\n                     * @event diagnostic#endtester\r\n                     * @param {String} name - The name of the tester\r\n                     * @param {Array} results - The results of the test\r\n                     */\r\n                    self.trigger('endtester', method, status);\r\n                    self.setState(method, false);\r\n\r\n                    // do not forget to notify the end of the operation to the manager\r\n                    cb();\r\n                });\r\n            }\r\n\r\n            if (this.is('rendered')) {\r\n                // set up the component to a new run\r\n                this.prepare();\r\n\r\n                // launch each testers in series, then display the results\r\n                async.series([function (cb) {\r\n                    doCheck('checkBrowser', cb);\r\n                }, function (cb) {\r\n                    doCheck('checkPerformances', cb);\r\n                }, function (cb) {\r\n                    doCheck('checkBandwidth', cb);\r\n                }, function (cb) {\r\n                    doCheck('checkUpload', cb);\r\n                }], function () {\r\n                    // pick the lowest percentage as the main score\r\n                    var total = _.min(scores, 'percentage');\r\n\r\n                    // get a status according to the main score\r\n                    var status = self.status.getStatus(total.percentage, 'summary');\r\n\r\n                    // display the result\r\n                    status.title = __('Total');\r\n                    status.id = 'total';\r\n                    status.details = information;\r\n                    self.addResult(status);\r\n\r\n                    // done !\r\n                    self.finish();\r\n                });\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Builds an instance of the diagnostic tool\r\n     * @param {Object} config\r\n     * @param {String} [config.title] - The displayed title\r\n     * @param {String} [config.header] - A header text displayed to describe the component\r\n     * @param {String} [config.info] - An information text displayed to warn about run duration\r\n     * @param {String} [config.button] - The caption of the start button\r\n     * @param {String} [config.actionStore] - The name of the action to call to store the results\r\n     * @param {String} [config.actionCheck] - The name of the action to call to check the browser results\r\n     * @param {String} [config.controller] - The name of the controller to call\r\n     * @param {String} [config.extension] - The name of the extension containing the controller\r\n     * @param {Object} [config.storeParams] - A list of additional parameters to send with diagnostic results\r\n     *\r\n     * @param {String} [config.browser.action] - The name of the action to call to get the browser checker\r\n     * @param {String} [config.browser.controller] - The name of the controller to call to get the browser checker\r\n     * @param {String} [config.browser.extension] - The name of the extension containing the controller to call to get the browser checker\r\n     *\r\n     * @param {Number} [config.bandwidth.unit] - The typical bandwidth needed for a test taker (Mbps)\r\n     * @param {Array} [config.bandwidth.ideal] - The thresholds for optimal bandwidth, one by bar\r\n     * @param {Number} [config.bandwidth.max] - Maximum number of test takers to display\r\n     *\r\n     * @param {Array} [config.performances.samples] - A list of samples to render in order to compute the rendering performances\r\n     * @param {Number} [config.performances.occurrences] - The number of renderings by samples\r\n     * @param {Number} [config.performances.timeout] - Max allowed duration for a sample rendering\r\n     * @param {Number} [config.performances.optimal] - The threshold for optimal performances\r\n     * @param {Number} [config.performances.threshold] - The threshold for minimal performances\r\n     * @returns {diagnostic}\r\n     */\r\n    function diagnosticFactory(config) {\r\n        // fix the translations for content loaded from config files\r\n        if (config) {\r\n            _.forEach(['title', 'header', 'footer', 'info', 'button'], function(name) {\r\n                if (config[name]) {\r\n                    config[name] = __(config[name]);\r\n                }\r\n            });\r\n        }\r\n        \r\n        return component(diagnostic, _defaults)\r\n            .setTemplate(mainTpl)\r\n\r\n            // uninstalls the component\r\n            .on('destroy', function () {\r\n                this.controls = null;\r\n                this.status = null;\r\n            })\r\n\r\n            // renders the component\r\n            .on('render', function () {\r\n                var self = this;\r\n\r\n                // use an external component to handle the thresholds and status\r\n                this.status = statusFactory();\r\n\r\n                // get access to all needed placeholders\r\n                this.controls = {\r\n                    $start: this.$component.find('[data-action=\"test-launcher\"]'),\r\n                    $status: this.$component.find('.status h2'),\r\n                    $results: this.$component.find('.results')\r\n                };\r\n\r\n                // start the diagnostic\r\n                this.controls.$start.on('click', function () {\r\n                    self.run();\r\n                });\r\n\r\n                // show result details\r\n                this.controls.$results.on('click', 'button[data-action=\"show-details\"]', function () {\r\n                    var $btn = $(this).closest('button');\r\n                    var $result = $btn.closest('[data-result]');\r\n                    var $details = $result.find('.details');\r\n                    $details.removeClass('hidden');\r\n                    $btn.addClass('hidden');\r\n                    $result.find('[data-action=\"hide-details\"]').removeClass('hidden');\r\n                });\r\n\r\n                // hide result details\r\n                this.controls.$results.on('click', 'button[data-action=\"hide-details\"]', function () {\r\n                    var $btn = $(this).closest('button');\r\n                    var $result = $btn.closest('[data-result]');\r\n                    var $details = $result.find('.details');\r\n                    $details.addClass('hidden');\r\n                    $btn.addClass('hidden');\r\n                    $result.find('[data-action=\"show-details\"]').removeClass('hidden');\r\n                });\r\n            })\r\n            .init(config);\r\n    }\r\n\r\n    return diagnosticFactory;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @author dieter <dieter@taotesting.com>\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/diagnostics',[\r\n    'jquery',\r\n    'layout/loading-bar',\r\n    'ui/feedback',\r\n    'taoClientDiagnostic/tools/message',\r\n    'taoClientDiagnostic/tools/diagnostic/diagnostic'\r\n], function ($, loadingBar, feedback, showMessage, diagnosticFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @exports\r\n     */\r\n    return {\r\n        start: function(config) {\r\n            var $contentArea = $('.content');\r\n\r\n            showMessage('#feedback-box');\r\n\r\n            diagnosticFactory(config)\r\n                .on('start', function() {\r\n                    loadingBar.start();\r\n                })\r\n                .on('end', function() {\r\n                    loadingBar.stop();\r\n                })\r\n                .render($contentArea);\r\n        }\r\n    };\r\n});\r\n\n","\ndefine('tpl!taoClientDiagnostic/templates/diagnostic/main', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.info) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.info); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"diagnostics-main-area\\\">\\r\\n\\r\\n    <h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\r\\n\\r\\n    <div class=\\\"intro\\\">\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.info), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        <p>\\r\\n            <label for=\\\"workstation\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation:\", options) : helperMissing.call(depth0, \"__\", \"Workstation:\", options)))\n    + \"</label>\\r\\n            <input type=\\\"text\\\" data-control=\\\"workstation\\\" id=\\\"workstation\\\" name=\\\"workstation\\\" maxlength=\\\"64\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation name\", options) : helperMissing.call(depth0, \"__\", \"Workstation name\", options)))\n    + \"\\\" />\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\">\\r\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\";\n  if (helper = helpers.button) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.button); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</button>\\r\\n    </div>\\r\\n\\r\\n    <ul class=\\\"plain results\\\"></ul>\\r\\n\\r\\n    <div class=\\\"status\\\">\\r\\n        <h2></h2>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @author dieter <dieter@taotesting.com>\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/controller/Diagnostic/diagnostic',[\r\n    'jquery',\r\n    'i18n',\r\n    'helpers',\r\n    'layout/loading-bar',\r\n    'ui/actionbar',\r\n    'ui/feedback',\r\n    'taoClientDiagnostic/tools/diagnostic/diagnostic',\r\n    'tpl!taoClientDiagnostic/templates/diagnostic/main'\r\n], function ($, __, helpers, loadingBar, actionbar, feedback, diagnosticFactory, diagnosticTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The CSS scope\r\n     * @type {String}\r\n     */\r\n    var cssScope = '.diagnostic-runner';\r\n\r\n    // the page is always loading data when starting\r\n    loadingBar.start();\r\n\r\n    /**\r\n     * Controls the readiness check page\r\n     *\r\n     * @type {Object}\r\n     */\r\n    var taoDiagnosticRunnerCtlr = {\r\n        /**\r\n         * Entry point of the page\r\n         */\r\n        start : function start() {\r\n            var $container = $(cssScope);\r\n            var extension = $container.data('extension') || 'taoClientDiagnostic';\r\n            var $list = $container.find('.list');\r\n            var $panel = $('.panel');\r\n            var config = $container.data('config');\r\n            var indexUrl = helpers._url('index', 'Diagnostic', extension);\r\n            var workstationUrl = helpers._url('workstation', 'DiagnosticChecker', extension);\r\n            var buttons = [];\r\n\r\n            /**\r\n             * Installs the diagnostic tool GUI\r\n             * @param {String} workstation\r\n             */\r\n            function installTester(workstation) {\r\n                diagnosticFactory(config)\r\n                    .setTemplate(diagnosticTpl)\r\n                    .on('render', function() {\r\n                        var self = this;\r\n\r\n                        // get access to the input\r\n                        this.controls.$workstation = this.getElement().find('[data-control=\"workstation\"]')\r\n                            .on('keypress', function (e) {\r\n                                if (e.which === 13) {\r\n                                    e.preventDefault();\r\n                                    self.run();\r\n                                }\r\n                            })\r\n                            .val(workstation);\r\n                    })\r\n                    .on('start', function() {\r\n                        // append the workstation name to the queries\r\n                        this.config.storeParams = this.config.storeParams || {};\r\n                        this.config.storeParams.workstation = this.controls.$workstation.val();\r\n\r\n                        // disable the input when running the test\r\n                        this.controls.$workstation.prop('disabled', true);\r\n                        loadingBar.start();\r\n                    })\r\n                    .on('end', function() {\r\n                        // enable the input when the test is complete\r\n                        this.controls.$workstation.removeProp('disabled');\r\n                        loadingBar.stop();\r\n                    })\r\n                    .on('render', function() {\r\n                        loadingBar.stop();\r\n                    })\r\n                    .render($list);\r\n            }\r\n\r\n            buttons.push({\r\n                id: 'back',\r\n                icon: 'step-backward',\r\n                title: __('Return to the list'),\r\n                label: __('List of readiness checks'),\r\n                action: function() {\r\n                    window.location.href = indexUrl;\r\n                }\r\n            });\r\n\r\n            // tool: close tab, this won't be present in an LTI iframe\r\n            // button should always be right most\r\n            if(window.self === window.top) {\r\n                buttons.push({\r\n                    id: 'exitButton',\r\n                    icon: 'close',\r\n                    title: __('Exit'),\r\n                    label: __('Exit'),\r\n                    action: function() {\r\n                        window.self.close();\r\n                    }\r\n                });\r\n            }\r\n\r\n            actionbar({\r\n                renderTo: $panel,\r\n                buttons: buttons\r\n            });\r\n\r\n            // need to known the workstation name to display it\r\n            $.get(workstationUrl, 'json')\r\n                .done(function(data) {\r\n                    installTester(data && data.workstation);\r\n                })\r\n                .fail(function() {\r\n                    feedback().error(__('Unable to get the workstation name!'));\r\n                    installTester();\r\n                });\r\n        }\r\n    };\r\n\r\n    return taoDiagnosticRunnerCtlr;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoClientDiagnostic/controller/Diagnostic/index',[\r\n    'jquery',\r\n    'i18n',\r\n    'helpers',\r\n    'layout/loading-bar',\r\n    'util/encode',\r\n    'ui/feedback',\r\n    'ui/dialog',\r\n    'taoClientDiagnostic/tools/diagnostic/status',\r\n    'ui/datatable'\r\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, statusFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The CSS scope\r\n     * @type {String}\r\n     */\r\n    var cssScope = '.diagnostic-index';\r\n\r\n    // the page is always loading data when starting\r\n    loadingBar.start();\r\n\r\n    /**\r\n     * Format a number with decimals\r\n     * @param {Number} number - The number to format\r\n     * @param {Number} [digits] - The number of decimals\r\n     * @returns {Number}\r\n     */\r\n    function formatNumber(number, digits) {\r\n        var nb = undefined === digits ? 2 : Math.max(0, parseInt(digits, 10));\r\n        var factor = Math.pow(10, nb) || 1;\r\n        return Math.round(number * factor) / factor;\r\n    }\r\n\r\n    /**\r\n     * Controls the readiness check page\r\n     *\r\n     * @type {Object}\r\n     */\r\n    var taoDiagnosticCtlr = {\r\n        /**\r\n         * Entry point of the page\r\n         */\r\n        start : function start() {\r\n            var $container = $(cssScope);\r\n            var extension = $container.data('extension') || 'taoClientDiagnostic';\r\n            var $list = $container.find('.list');\r\n            var dataset = $container.data('set');\r\n            var config = $container.data('config') || {};\r\n            var installedExtension = $container.data('installedextension') || false;\r\n            var diagnosticUrl = helpers._url('diagnostic', 'Diagnostic', extension);\r\n            var removeUrl = helpers._url('remove', 'Diagnostic', extension);\r\n            var serviceUrl = helpers._url('diagnosticData', 'Diagnostic', extension);\r\n\r\n            var performancesConfig = config.performances || {};\r\n            var performancesOptimal = performancesConfig.optimal;\r\n            var performancesRange = Math.abs(performancesOptimal - (performancesConfig.threshold));\r\n\r\n            var diagnosticStatus = statusFactory();\r\n\r\n            var tools = [];\r\n            var actions = [];\r\n            var model = [];\r\n\r\n            // request the server with a selection of readiness check results\r\n            function request(url, selection, message) {\r\n                if (selection && selection.length) {\r\n                    loadingBar.start();\r\n\r\n                    $.ajax({\r\n                        url: url,\r\n                        data: {\r\n                            id: selection\r\n                        },\r\n                        dataType : 'json',\r\n                        type: 'POST',\r\n                        error: function() {\r\n                            loadingBar.stop();\r\n                        }\r\n                    }).done(function(response) {\r\n                        loadingBar.stop();\r\n\r\n                        if (response && response.success) {\r\n                            if (message) {\r\n                                feedback().success(message);\r\n                            }\r\n                            $list.datatable('refresh');\r\n                        } else {\r\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // request the server to remove the selected diagnostic-index\r\n            function remove(selection) {\r\n                request(removeUrl, selection, __('The readiness check result have been removed'));\r\n            }\r\n\r\n\r\n            // tool: page refresh\r\n            tools.push({\r\n                id: 'refresh',\r\n                icon: 'reset',\r\n                title: __('Refresh the page'),\r\n                label: __('Refresh'),\r\n                action: function() {\r\n                    $list.datatable('refresh');\r\n                }\r\n            });\r\n\r\n            // tool: readiness check\r\n            tools.push({\r\n                id: 'launch',\r\n                icon: 'play',\r\n                title: __('Launch another readiness check'),\r\n                label: __('Launch readiness check'),\r\n                action: function() {\r\n                    window.location.href = diagnosticUrl;\r\n                }\r\n            });\r\n\r\n            if(installedExtension){\r\n                // tool: compatibilty via lti\r\n                tools.push({\r\n                    id: 'lti',\r\n                    icon: 'play',\r\n                    title: __('Try a test delivery'),\r\n                    label: __('Try a test delivery'),\r\n                    action: function() {\r\n                        window.location.href = deliveryUrl;\r\n                    }\r\n                });\r\n            }\r\n\r\n            // tool: remove selected results\r\n            tools.push({\r\n                id: 'remove',\r\n                icon: 'remove',\r\n                title: __('Remove the selected readiness check results'),\r\n                label: __('Remove'),\r\n                massAction: true,\r\n                action: function(selection) {\r\n                    dialog({\r\n                        message: __('The selected readiness check results will be removed. Continue ?'),\r\n                        autoRender: true,\r\n                        autoDestroy: true,\r\n                        onOkBtn: function() {\r\n                            remove(selection);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            // tool: close tab, this won't be present in an LTI iframe\r\n            // button should always be right most\r\n            if(window.self === window.top) {\r\n                tools.push({\r\n                    id: 'exitButton',\r\n                    icon: 'close',\r\n                    title: __('Exit'),\r\n                    label: __('Exit'),\r\n                    action: function() {\r\n                        window.self.close();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // action: remove the result\r\n            actions.push({\r\n                id: 'remove',\r\n                icon: 'remove',\r\n                title: __('Remove the readiness check result?'),\r\n                action: function(id) {\r\n                    dialog({\r\n                        autoRender: true,\r\n                        autoDestroy: true,\r\n                        message: __('The readiness check result will be removed. Continue ?'),\r\n                        onOkBtn: function() {\r\n                            remove([id]);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            // column: Workstation identifier\r\n            model.push({\r\n                id: 'workstation',\r\n                label: __('Workstation')\r\n            });\r\n\r\n            // column: Operating system information\r\n            model.push({\r\n                id: 'os',\r\n                label: __('OS')\r\n            });\r\n\r\n            // column: Browser information\r\n            model.push({\r\n                id: 'browser',\r\n                label: __('Browser')\r\n            });\r\n\r\n            // column: Performances of the workstation\r\n            model.push({\r\n                id: 'performance',\r\n                label: __('Performances'),\r\n                transform: function(value) {\r\n                    var cursor = performancesRange - value + performancesOptimal;\r\n                    var status = diagnosticStatus.getStatus(cursor / performancesRange * 100, 'performances');\r\n                    return status.feedback.message;\r\n                }\r\n            });\r\n\r\n            // column: Available bandwidth\r\n            model.push({\r\n                id: 'bandwidth',\r\n                label: __('Bandwidth'),\r\n                transform: function(value) {\r\n                    var bandwidth = formatNumber(value);\r\n\r\n                    if (value > 100) {\r\n                        bandwidth = '> 100';\r\n                    }\r\n\r\n                    return bandwidth;// + ' Mbs';\r\n                }\r\n            });\r\n\r\n            // column: Date of diagnostic\r\n            model.push({\r\n                id: 'date',\r\n                label: __('Date')\r\n            });\r\n\r\n            $list\r\n                .on('query.datatable', function() {\r\n                    loadingBar.start();\r\n                })\r\n                .on('load.datatable', function() {\r\n                    loadingBar.stop();\r\n                })\r\n                .datatable({\r\n                    url: serviceUrl,\r\n                    status: {\r\n                        empty: __('No readiness checks have been done!'),\r\n                        available: __('Readiness checks already done'),\r\n                        loading: __('Loading')\r\n                    },\r\n                    tools: tools,\r\n                    actions: actions,\r\n                    selectable: true,\r\n                    model: model\r\n                }, dataset);\r\n        }\r\n    };\r\n\r\n    return taoDiagnosticCtlr;\r\n});\r\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.diagnostics-main-area{max-width:768px;margin:40px auto 0 auto;background:#f3f1ef;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;padding:20px}.diagnostics-main-area h1,.diagnostics-main-area h2,.diagnostics-main-area h3{font-style:normal;font-family:\\\"Century Gothic\\\",CenturyGothic,AppleGothic,sans-serif}.diagnostics-main-area h1{margin-bottom:20px;font-size:20px;font-size:2rem}.diagnostics-main-area h2{margin:0;font-size:14px;font-size:1.4rem}.diagnostics-main-area h3{margin-top:10px;margin-bottom:5px;font-size:12px;font-size:1.2rem}.diagnostics-main-area .status h2,.diagnostics-main-area .details h2{margin:1rem 0}.diagnostics-main-area .legend{font-style:italic;font-weight:normal;font-family:\\\"Century Gothic\\\",CenturyGothic,AppleGothic,sans-serif;font-size:11px;font-size:1.1rem}.diagnostics-main-area .quality-bar{height:15px;background:linear-gradient(to right, #CE1431 0%, #D57915 25%, #D5A215 50%, #D5CB15 75%, #36B111 100%);opacity:.8;-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;margin:5px 0 10px;position:relative}.diagnostics-main-area .quality-indicator{position:absolute;border-width:10px 8px;border-style:solid;border-color:#333 transparent transparent;top:-1px;height:25px;width:0}.diagnostics-main-area .quality-indicator[title]:before{font-size:11px;font-size:1.1rem;content:attr(title);position:absolute;top:-36px;left:-12px;text-align:center;width:24px;height:24px;line-height:24px;display:inline-block;background-color:#0e5d91;color:rgba(255,255,255,0.9);-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px}.diagnostics-main-area .quality-indicator.wide[title]:before{left:-16px;width:32px}.diagnostics-main-area [data-result],.diagnostics-main-area .bandwidth-box{display:none}.diagnostics-main-area [data-action=bandwidth-launcher]{margin:5px 0 10px}.diagnostics-main-area li{padding-bottom:10px}.diagnostics-main-area .intro{margin-bottom:20px}.diagnostics-main-area table.matrix{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;margin-top:5px}table.datatable [class^=\\\"icon-\\\"]{padding:0}table.datatable td{font-size:90%;font-weight:normal}table.datatable .progress .state:not(:first-child):before{content:\\' - \\'}table.datatable .progress .item-time:before{content:\\' (\\'}table.datatable .progress .item-time .total:before{content:\\' / \\'}table.datatable .progress .item-time:after{content:\\')\\'}.diagnostic-scope h1{font-family:\\\"Century Gothic\\\",CenturyGothic,AppleGothic,sans-serif;font-size:22px;font-size:2.2rem;font-weight:normal}.diagnostic-scope h2{font-family:\\\"Century Gothic\\\",CenturyGothic,AppleGothic,sans-serif;font-size:18px;font-size:1.8rem;margin:30px 0 10px}.diagnostic-scope form.daterange label{padding:0}.diagnostic-scope form.daterange input{margin:0 10px}.diagnostic-scope table.datatable [class^=\\\"icon-\\\"]{padding:0}.diagnostic-scope table.datatable td{font-size:90%;font-weight:normal}.diagnostic-scope .content{margin:auto}.diagnostic-scope .diagnostic-index .content,.diagnostic-scope .diagnostic-runner .content{width:100%;padding:0 20px}.diagnostic-scope .diagnostic-index .message,.diagnostic-scope .diagnostic-runner .message{padding:8px;text-align:center}.diagnostic-scope .panel .action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4;margin:40px 0 10px 0}.diagnostic-scope .panel .action-bar .btn-info{overflow:hidden;background:transparent;border:1px rgba(255,255,255,0.3) solid}.diagnostic-scope .diagnostics-main-area{margin-top:0px;max-width:800px}.action-bar .tool-exitButton,.action-bar [data-control=\\\"exitButton\\\"]{float:right}\\n/*# sourceMappingURL=diagnostics.css.map */\\n');\n"]}