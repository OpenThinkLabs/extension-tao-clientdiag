{"version":3,"file":"routes.js","sources":["routes.js","CompatibilityChecker/checker.js","CompatibilityChecker/data.js"],"names":[],"mappings":"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","sourcesContent":["define('taoClientDiagnostic/controller/routes',[],function(){\n    return {\n        'CompatibilityChecker' : {\n            'actions' : {\n                'index' : 'controller/compatibilityChecker/index'\n            }\n        }\n    };\n});\n\n","/**\n * @author Antoine Robin <antoine.robin@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/checker',[\n    'helpers'\n],  function(helpers) {\n\n    var Controller = {\n\n        init : function(){\n            var current = this;\n            $(\"#proceed\").on('click', function(){\n                current._start();\n            });\n\n        },\n\n        _start : function(){\n\n            $('#proceed').remove();\n            var $info = $('#checker-box');\n            $info.append('<div class=\"loading\"></div>');\n            //browser\n            var nVer = navigator.appVersion;\n            var nAgt = navigator.userAgent;\n\n            //browser\n            var browser = this._browser(nAgt);\n            // system\n            var os = this._osName(nAgt);\n\n\n            var osVersion = \"-\";\n            if (/Windows/.test(os)) {\n                osVersion = /Windows (.*)/.exec(os)[1];\n                os = 'Windows';\n            }\n\n            switch (os) {\n                case 'Mac OS X':\n                    osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\n                    break;\n\n                case 'Android':\n                    osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\n                    break;\n\n                case 'iOS':\n                    osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\n                    osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\n                    break;\n            }\n\n\n            osVersion = osVersion.replace(/_/g, '.')\n\n\n            var information = {\n                browser: browser.name,\n                browserVersion: browser.version,\n                os: os,\n                osVersion: osVersion\n            };\n\n\n            $.post(\n                helpers._url('check', 'CompatibilityChecker', 'taoClientDiagnostic'),\n                information,\n                function(data){\n                    var $os = $('#os'),\n                        $browser = $('#browser');\n                    $info.find('.loading').remove();\n                    $os.append(information.os + ' ' + information.osVersion);\n\n                    $browser.append(information.browser + ' ' + information.browserVersion);\n                    $os.removeClass('hidden');\n                    $browser.removeClass('hidden');\n\n                    $('#message').html('<img height=\"45\" src=\"' + data.image +'\"/>').removeClass('hidden');\n                },\n                \"json\"\n            );\n\n        },\n        _browser : function(nAgt){\n            var browser = {};\n            var nameOffset, verOffset, ix;\n            var found = false;\n\n            browser.name = navigator.appName;\n            browser.version = '' + parseFloat(navigator.appVersion);\n\n            for (var id in navigatorName) {\n                var nav = navigatorName[id];\n                if ((verOffset = nAgt.indexOf(nav.name)) !== -1) {\n                    browser.name = nav.string;\n                    browser.version = nAgt.substring(verOffset + nav.name.length + 1);\n                    if (nav.name === 'Trident/') {\n                        browser.version = nAgt.substring(nAgt.indexOf('rv:') + 3);\n                    }\n                    if ((verOffset = nAgt.indexOf('Version')) !== -1) {\n                        browser.version = nAgt.substring(verOffset + 8);\n                    }\n                    found = true;\n                    break;\n                }\n            }\n\n            // Default\n            if (!found && (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n                browser.name = nAgt.substring(nameOffset, verOffset);\n                browser.version = nAgt.substring(verOffset + 1);\n                if (browser.name.toLowerCase() === browser.name.toUpperCase()) {\n                    browser.name = navigator.appName;\n                }\n            }\n            // trim the version string\n            if ((ix = browser.version.indexOf(';')) !== -1){browser.version = browser.version.substring(0, ix);}\n            if ((ix = browser.version.indexOf(' ')) !== -1){browser.version = browser.version.substring(0, ix);}\n            if ((ix = browser.version.indexOf(')')) !== -1){browser.version = browser.version.substring(0, ix);}\n\n            majorVersion = parseInt('' + browser.version, 10);\n            if (isNaN(majorVersion)) {\n                browser.version = '' + parseFloat(navigator.appVersion);\n                majorVersion = parseInt(navigator.appVersion, 10);\n            }\n\n            return browser;\n\n        },\n\n        _osName : function(nAgt){\n            for (var id in operatingStrings) {\n                var op = operatingStrings[id];\n                if (op.regex.test(nAgt)) {\n                    return op.name;\n                }\n            }\n            return \"-\";\n        }\n\n    };\n\n    return Controller.init();\n});\n\n","var operatingStrings = [\n    {\"name\":\"Windows 95\",             \"regex\":/(Windows 95|Win95|Windows_95)/},\n    {\"name\":\"Windows ME\",             \"regex\":/(Win 9x 4.90|Windows ME)/},\n    {\"name\":\"Windows 98\",             \"regex\":/(Windows 98|Win98)/},\n    {\"name\":\"Windows CE\",             \"regex\":/Windows CE/},\n    {\"name\":\"Windows 2000\",           \"regex\":/(Windows NT 5.0|Windows 2000)/},\n    {\"name\":\"Windows XP\",             \"regex\":/(Windows NT 5.1|Windows XP)/},\n    {\"name\":\"Windows Server 2003\",    \"regex\":/Windows NT 5.2/},\n    {\"name\":\"Windows Vista\",          \"regex\":/Windows NT 6.0/},\n    {\"name\":\"Windows 7\",              \"regex\":/(Windows 7|Windows NT 6.1)/},\n    {\"name\":\"Windows 8.1\",            \"regex\":/(Windows 8.1|Windows NT 6.3)/},\n    {\"name\":\"Windows 8\",              \"regex\":/(Windows 8|Windows NT 6.2)/},\n    {\"name\":\"Windows NT 4.0\",         \"regex\":/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},\n    {\"name\":\"Windows ME\",             \"regex\":/Windows ME/},\n    {\"name\":\"Open BSD\",               \"regex\":/OpenBSD/},\n    {\"name\":\"Sun OS\",                 \"regex\":/SunOS/},\n    {\"name\":\"Android\",                \"regex\":/Android/},\n    {\"name\":\"iOS\",                    \"regex\":/(iPhone|iPad|iPod)/},\n    {\"name\":\"Mac OS X\",               \"regex\":/Mac OS X/},\n    {\"name\":\"Mac OS\",                 \"regex\":/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},\n    {\"name\":\"QNX\",                    \"regex\":/QNX/},\n    {\"name\":\"UNIX\",                   \"regex\":/UNIX/},\n    {\"name\":\"BeOS\",                   \"regex\":/BeOS/},\n    {\"name\":\"OS/2\",                   \"regex\":/OS\\/2/},\n    {\"name\":\"Linux\",                  \"regex\":/(Linux|X11)/},\n    {\"name\":\"Search Bot\",             \"regex\":/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/}\n];\n\nvar navigatorName = [\n    {name : \"Opera\",    string : \"Opera\"},\n    {name : \"MSIE\",     string : \"Microsoft Internet Explorer\"},\n    {name : \"Chrome\",   string : \"Chrome\"},\n    {name : \"Safari\",   string : \"Safari\"},\n    {name : \"Firefox\",  string : \"Firefox\"},\n    {name : \"Trident/\", string : \"Microsoft Internet Explorer\"}\n];\n\ndefine(\"taoClientDiagnostic/controller/CompatibilityChecker/data\", function(){});\n\n"]}