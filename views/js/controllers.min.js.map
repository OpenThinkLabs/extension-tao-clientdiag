{"version":3,"file":"routes.js","sources":["routes.js","../tools/fixedDecimals.js","../tools/stats.js","../../taoQtiItem/qtiItem/core/qtiClasses.js","../../taoQtiItem/qtiItem/helper/util.js","../../taoQtiItem/qtiItem/helper/rendererConfig.js","../../taoQtiItem/qtiItem/core/Element.js","../../taoQtiItem/qtiItem/core/Loader.js","../../taoQtiItem/qtiItem/helper/interactionHelper.js","../../taoQtiItem/qtiRunner/core/Renderer.js","../../taoItems/assets/manager.js","../../taoItems/assets/strategies.js","../../taoQtiItem/qtiCommonRenderer/renderers/config.js","../../taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","../../lib/polyfill/performance-now.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","CompatibilityChecker/diagnostics.js"],"names":["define","CompatibilityChecker","actions","index","fixedDecimals","value","decimals","shift","Math","pow","abs","round","Number","_","stats","list","fieldName","variance","avg","med","middle","getValue","results","sum","sum2","min","MAX_VALUE","max","count","values","isFunction","item","forEach","undefined","push","diff","sqrt","sort","floor","ceil","average","median","key","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","img","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","util","buildSerial","prefix","id","chars","i","charAt","random","length","buildId","usedIds","suffix","exists","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","this","qtiClass","fullpath","src","baseUrl","pattern","RegExp","test","indexOf","match","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","Error","each","collectionName","collection","split","nameToken","elt","parent","find","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","original","slash","node","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","options","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","Class","rendererConfig","_instances","Element","extend","serial","relatedItem","init","attributes","metaData","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","prop","document","trigger","removeData","removeAttr","removeAttributes","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","location","getRelatedItem","setRelatedItem","recursive","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","body","resolveUrl","merge","getData","rendering","renderTpl","replaceWith","postRender","altClassName","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","isset","issetElement","unset","unsetElement","allClassStr","qtiElement","getElementBySerial","composingElements","qtiClasses","loadPortableCustomElementData","portableElement","typeIdentifier","entryPoint","properties","libraries","Loader","classesLocation","qti","setClassesLocation","getRequiredClasses","union","loadRequiredClasses","callback","reload","requiredClasses","required","requiredClass","_this","require","QtiClass","prototype","call","getLoadedClasses","keys","loadItemData","Qti","loadContainer","outcomes","outcome","buildOutcome","addOutcomeDeclaration","feedbacks","feedback","buildElement","addModalFeedback","stylesheets","addStylesheet","responses","response","buildResponse","addResponseDeclaration","feedbackRules","forIn","fbData","buildSimpleFeedbackRule","setResponseProcessing","buildResponseProcessing","setNamespaces","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","template","howMatch","defaultValue","correctResponse","correctResponses","mapEntries","size","mapping","areaMapping","mappingAttributes","feedbackRule","condition","comparedValue","comparedOutcome","feedbackOutcome","feedbackThen","modalFeedbacks","feedbackElse","rp","processingType","xml","bodyObject","bodyData","elements","eltData","setElement","defaults","bdy","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","interaction","buildInteractionChoices","loadPciData","choices","set","matchSet","choice","addChoice","gapImgs","addGapImg","val","text","_alt","setMathML","mathML","annotations","encoding","setAnnotation","pci","pic","convertChoices","outputType","c","findChoices","inputType","getChoice","getChoiceByIdentifier","shuffleChoices","r","f","j","n","k","tmp","serialToIdentifier","choiceSerial","Handlebars","interactionHelper","themeLoader","getDocumentBaseUrl","window","protocol","host","pathname","_isValidRenderer","valid","classCorrect","_renderableClasses","pos","slice","subClass","_renderableSubclasses","_dependencies","_defaults","Renderer","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","opts","getOption","getAssetManager","assetManager","getThemeLoader","qtiSubclass","res","decorators","isObject","before","after","renderDirect","tpl","compile","setResponse","qtiInteraction","$container","getResponse","resetResponse","getState","setState","state","destroy","getLoadedRenderers","register","renderersLocations","load","self","themes","base","available","theme","path","intersection","reqClass","deps","requiredSubClasses","unload","setShuffledChoices","identificationType","pluck","getShuffledChoices","reshuffle","returnedType","getChoices","getRenderers","getLocations","url","resolve","getAbsoluteUrl","relUrl","warn","absUrl","runtimeLocations","runtimeLocation","build","defaultOptions","NewRenderer","apply","urlUtil","assetManagerFactory","strategies","cache","parseUrl","_strategies","addStrategy","strategy","handle","setStrategies","newStrategies","setData","resolved","inputUrl","hasOwnProperty","parse","result","resolveBy","clearCache","isRelative","slashcat","toString","external","isAbsolute","base64","isBase64","taomedia","context","assetStrategies","itemThemes","get","portableAssetStrategy","source","relative","root_url","locations","simpleChoice.choiceInteraction","simpleChoice.orderInteraction","simpleAssociableChoice.matchInteraction","simpleAssociableChoice.associateInteraction","config","performance","Date","now","getTime","nowOffset","timing","navigationStart","async","helpers","loadItem","done","qtiJsonFile","urlTokens","extension","s","contexts","paths","loader","itemData","duration","start","end","appendTo","remove","_second","_samples","sample1","timeout","nb","sample2","sample3","performancesTester","tests","cb","partial","iterations","series","err","measures","_kilo","_mega","_downloadData","10KB","file","threshold","100KB","1MB","10MB","100MB","download","timeoutId","request","bandwidth","XMLHttpRequest","open","setRequestHeader","onload","bytes","seconds","speed","clearTimeout","onerror","delay","send","bandwidthTester","bind","__","loadingBar","displayTestResult","status","$bar","$indicator","message","isNumber","label","toggleClass","fadeIn","animate","left","percentage","outerWidth","updateTestResult","score","displaySummary","total","getStatus","summaryThresholds","checkBrowser","info","WhichBrowser","browser","os","information","browserVersion","version","osVersion","alias","post","_url","storeData","details","omit","checkBandwidth","testTakers","bandwidthUnit","st","bandwidthThresholds","maxTestTakers","checkPerformance","cursor","performanceRange","performanceOptimal","thresholds","displayDetails","$detailsTable","empty","line","performanceThreshold","step","len","$testTriggerBtn","$detailsBtn","scores","$feedbackBox","on","hide","assign","performancesMin","performancesMax","performancesAverage","bandwidthMin","bandwidthMax","bandwidthAverage","stop","error"],"mappings":"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","sourcesContent":["define('taoClientDiagnostic/controller/routes',[],function(){\n    return {\n        'CompatibilityChecker' : {\n            'actions' : {\n                'index' : 'controller/compatibilityChecker/index'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function () {\n    'use strict';\n\n    /**\n     * Rounds a value to a fixed number of decimals\n     * @param {Number} value The value to round\n     * @param {Number} decimals The number of decimal\n     * @returns {Number}\n     */\n    var fixedDecimals = function fixedDecimals(value, decimals) {\n        var shift = Math.pow(10, Math.abs(decimals || 1));\n        return Math.round(Number(value) * shift) / shift || 0;\n    };\n\n    return fixedDecimals;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/stats',[\n    'lodash',\n    'taoClientDiagnostic/tools/fixedDecimals'\n], function (_, fixedDecimals) {\n    'use strict';\n\n    /**\n     * Computes some stats on a list from a particular field\n     * @param {Array|Object} list The list to compute stats on\n     * @param {String|Function} fieldName The name of the field to process, or a callback method returning the value\n     * @param {Number} [decimals] Optional number of fixed decimals for values\n     * @returns {{min: Number, max: Number, sum: Number, count: Number, average: Number, median: Number, variance: Number, values: *}}\n     */\n    var stats = function stats(list, fieldName, decimals) {\n        var sum = 0;\n        var sum2 = 0;\n        var min = Number.MAX_VALUE;\n        var max = 0;\n        var variance;\n        var count = 0;\n        var values = [];\n        var avg;\n        var med;\n        var middle;\n        var getValue;\n        var results;\n\n        if (_.isFunction(fieldName)) {\n            getValue = fieldName;\n        } else {\n            getValue = function(item) {\n                return item && item[fieldName] || 0;\n            };\n        }\n\n        // process 1st pass stats: compute sum, min and max values\n        _.forEach(list, function(item) {\n            var value;\n            if (undefined !== item) {\n                value = getValue(item);\n                values.push(value);\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n                sum += value;\n                count++;\n            }\n        });\n\n        // compute the average value\n        avg = sum / (count || 1);\n\n        // process 2nd pass stats: compute variance\n        _.forEach(values, function(value) {\n            var diff = value - avg;\n            sum2 += diff * diff;\n        });\n\n        // compute de standard variance\n        variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\n\n        // compute the median value\n        values.sort();\n        middle = count / 2;\n        med = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\n\n        results = {\n            min : min,\n            max : max,\n            sum : sum,\n            count : count,\n            average : avg,\n            median : med,\n            variance : variance\n        };\n\n        if (decimals) {\n            _.forEach(results, function(value, key) {\n                results[key] = fixedDecimals(value, decimals);\n            });\n        }\n\n        results.values = list;\n        return results;\n    };\n\n    return stats;\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\n    return {\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\n        'math' : 'taoQtiItem/qtiItem/core/Math',\n        'img' : 'taoQtiItem/qtiItem/core/Img',\n        'object' : 'taoQtiItem/qtiItem/core/Object',\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiItem/core/Include'\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * Common basic util functions\n */\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\n    'use strict';\n\n    var util = {\n\n        buildSerial : function buildSerial(prefix){\n            var id = prefix || '';\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n            for(var i = 0; i < 22; i++){\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId : function buildId(item, prefix){\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIds();\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(_.contains(usedIds, id)){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier : function buildIdentifier(item, prefix, useSuffix){\n\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if(prefix){\n                prefix = prefix.replace(/_[0-9]+$/ig, '_') //detect incremental id of type choice_12, response_3, etc.\n                               .replace(/[^a-zA-Z0-9_]/ig, '_')\n                               .replace(/(_)+/ig, '_');\n                if(useSuffix){\n                    suffix = '_' + i;\n                }\n            } else {\n                prefix = this.qtiClass;\n                suffix = '_' + i;\n            }\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(usedIds[id]){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n\n        /**\n         * @deprecated in favor or asset manager\n         */\n        fullpath : function fullpath(src, baseUrl){\n\n            src = src || '';\n            baseUrl = baseUrl || '';\n\n            if(src){\n\n                src = src.replace(/^\\//, '');\n\n                var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n                        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n                        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n                        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n                        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n                        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n                //if src is base64 encoded or a http request do not touch it\n                if(!pattern.test(src) || !/^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(src) || src.indexOf('/') === -1){\n\n                    if(baseUrl && !baseUrl.match(/\\/$/)){\n                        baseUrl += '/';\n                    }\n\n                    src = baseUrl + src;\n                }\n            }\n\n            return src;\n        },\n\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\n\n            var found = null;\n\n            if(_.isString(collectionNames)){\n                collectionNames = [collectionNames];\n            }\n\n            if(_.isArray(collectionNames)){\n\n                _.each(collectionNames, function(collectionName){\n\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken){\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if(elt){\n                        found = {'parent' : element, 'element' : elt};\n                        return false;//break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt){\n\n                        if(_.isFunction(elt.find)){\n                            found = elt.find(searchedSerial);\n                            if(found){\n                                return false;//break the each loop\n                            }\n                        }\n\n                    });\n\n                    if(found){\n                        return false;//break the each loop\n                    }\n\n                });\n\n            }else{\n\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\n            if(ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4){\n                    if($2.indexOf(':')>0){\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<'+ $1 + ns + ':'+$2+$3+$4+'>';\n                });\n                return markup;\n            }\n            return markup;\n\n        },\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\n                namespaces.push(ns);\n                return '<'+slash+node+'>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args){\n\n        var options = {\n            data : {},\n            placeholder : null,\n            subclass : '',\n            renderer : null\n        };\n        \n        _.each(args, function(arg){\n            if(arg){\n                if(arg.isRenderer){\n                    options.renderer = arg;\n                }else if(arg instanceof $ && arg.length){\n                    options.placeholder = arg;\n                }else if(_.isString(arg)){\n                    options.subclass = arg;\n                }else if(_.isPlainObject(arg)){\n                    options.data = arg;\n                }else{\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n        \n        return options;\n    };\n    \n    return rendererConfigHelper;\n});\n\n","\n/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiItem/core/Element',[\n    'jquery',\n    'lodash',\n    'class',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Class, util, rendererConfig){\n    'use strict';\n\n    var _instances = {};\n\n    var Element = Class.extend({\n        qtiClass : '',\n        serial : '',\n        relatedItem : null,\n        init : function(serial, attributes){\n\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(!serial){\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\n            }\n\n            if(!_instances[serial]){\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            }else{\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                this.initContainer(arguments[2] || '');\n            }\n            if(typeof this.initObject === 'function'){\n                this.initObject();\n            }\n        },\n        is : function(qtiClass){\n            return (qtiClass === this.qtiClass);\n        },\n        placeholder : function(){\n            return '{{' + this.serial + '}}';\n        },\n        getSerial : function(){\n            return this.serial;\n        },\n        getUsedIdentifiers : function(){\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for(var i in elts){\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if(id){\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds : function getUsedIds(){\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt){\n                var id = elt.attr('id');\n                if(id && !_.contains(usedIds, id)){\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.attributes[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.attr(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.attributes[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.data(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.metaData[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData : function(name){\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr : function(name){\n            return this.removeAttributes(name);\n        },\n        setAttributes : function(attributes){\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes : function(){\n            return _.clone(this.attributes);\n        },\n        removeAttributes : function(attrNames){\n            if(typeof (attrNames) === 'string'){\n                attrNames = [attrNames];\n            }\n            for(var i in attrNames){\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements : function(){\n            var elts = {};\n            function append(element){\n                elts[element.getSerial()] = element;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if(typeof this.initContainer === 'function'){\n                append(this.getBody());\n            }\n            if(typeof this.initObject === 'function'){\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v){\n                if(Element.isA(v, '_container')){\n                    append(v);\n                }else if(_.isArray(v)){\n                    _.each(v, function(v){\n                        if(Element.isA(v, '_container')){\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses : function(){\n\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt){\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find : function(serial){\n\n            var found = null;\n\n            if(typeof this.initObject === 'function'){\n                var object = this.getObject();\n                if(object.serial === serial){\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\n                }\n            }\n\n            if(!found && typeof this.initContainer === 'function'){\n                found = this.getBody().find(serial, this);\n            }\n\n            return found;\n        },\n        parent : function(){\n            var item = this.getRelatedItem();\n            if(item){\n                var found = item.find(this.getSerial());\n                if(found){\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        setRelatedItem : function(item, recursive){\n\n            recursive = (typeof recursive === 'undefined') ? true : recursive;\n\n            if(Element.isA(item, 'assessmentItem')){\n                this.relatedItem = item;\n                var composingElts = this.getComposingElements();\n                for(var i in composingElts){\n                    composingElts[i].setRelatedItem(item, false);\n                }\n            }\n\n        },\n        getRelatedItem : function(){\n            var ret = null;\n            if(Element.isA(this.relatedItem, 'assessmentItem')){\n                ret = this.relatedItem;\n            }\n            return ret;\n        },\n        setRenderer : function(renderer){\n            if(renderer && renderer.isRenderer){\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for(var serial in elts){\n                    elts[serial].setRenderer(renderer);\n                }\n            }else{\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer : function(){\n            return this.renderer;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n\n            var tplData = {},\n                defaultData = {\n                    'tag' : this.qtiClass,\n                    'serial' : this.serial,\n                    'attributes' : this.getAttributes()\n                };\n\n            if(!_renderer){\n                throw 'render: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if(typeof this.initObject === 'function'){\n                defaultData.object = {\n                    attributes : this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            var rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if(args.placeholder){\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender : function(data, altClassName, renderer){\n\n            var _renderer = renderer || this.getRenderer();\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                this.getBody().postRender({}, '', renderer);\n            }\n\n            if(_renderer){\n                return _renderer.postRender(this, data, altClassName);\n            }else{\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        getContainer : function($scope, subclass){\n            var renderer = this.getRenderer();\n            if(renderer){\n                return renderer.getContainer(this, $scope, subclass);\n            }else{\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                type : this.qtiClass,\n                attributes : this.getAttributes()\n            };\n\n            if(typeof this.initContainer === 'function'){\n                arr.body = this.getBody().toArray();\n            }\n            if(typeof this.initObject === 'function'){\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty : function(){\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass : function(className){\n            var clazz = this.attr('class') || '';\n            if(!_containClass(clazz, className)){\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass : function(className){\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass : function(className){\n\n            var clazz = this.attr('class') || '';\n            if(clazz){\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n                clazz = clazz.replace(regex, '').replace(/^\\s+/, '');\n                if(clazz){\n                    this.attr('class', clazz);\n                }else{\n                    this.removeAttr('class');\n                }\n            }\n        },\n        isset : function(){\n            return Element.issetElement(this.serial);\n        },\n        unset : function(){\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className){\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass){\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\n    };\n\n    Element.getElementBySerial = function(serial){\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial){\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial){\n\n        var element = Element.getElementBySerial(serial);\n\n        if(element){\n\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt){\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n//@todo : move this to the ../helper directory\ndefine('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element'], function(_, Class, qtiClasses, Element){\n\n    var Loader = Class.extend({\n        init : function(item, classesLocation){\n\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n\n            this.item = item || null;//starts either from scratch or with an existing item object\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\n        },\n        setClassesLocation : function(qtiClasses){\n            _.extend(this.classesLocation, qtiClasses);\n            return this;\n        },\n        getRequiredClasses : function(data){\n            var ret = [];\n            for(var i in data){\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'relatedItem'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                }else if(typeof(data[i]) === 'object' && i !== 'responseRules'){    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n            return ret;\n        },\n        loadRequiredClasses : function(data, callback, reload){\n\n            var requiredClasses = this.getRequiredClasses(data, reload), required = [];\n\n            for(var i in requiredClasses){\n                var requiredClass = requiredClasses[i];\n                if(this.classesLocation[requiredClass]){\n                    required.push(this.classesLocation[requiredClass]);\n                }else{\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\n                }\n            }\n\n            var _this = this;\n            require(required, function(){\n                _.each(arguments, function(QtiClass){\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(_this, _this.qti);\n            });\n        },\n        getLoadedClasses : function(){\n            return _.keys(this.qti);\n        },\n        loadItemData : function(data, callback){\n\n            var _this = this;\n            _this.loadRequiredClasses(data, function(Qti){\n                var i;\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\n\n                    //unload an item from it's serial (in case of a reload)\n                    if(data.serial){\n                        Element.unsetElement(data.serial);\n                    }\n\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    _this.loadContainer(_this.item.getBody(), data.body);\n\n                    for(i in data.outcomes){\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\n                        if(outcome){\n                            _this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n                    for(i in data.feedbacks){\n                        var feedback = _this.buildElement(data.feedbacks[i]);\n                        if(feedback){\n                            _this.item.addModalFeedback(feedback);\n                        }\n                    }\n                    for(i in data.stylesheets){\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\n                        if(stylesheet){\n                            _this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    for(i in data.responses){\n                        var response = _this.buildResponse(data.responses[i]);\n                        if(response){\n                            _this.item.addResponseDeclaration(response);\n\n                            var feedbackRules = data.responses[i].feedbackRules;\n                            if(feedbackRules){\n                                _.forIn(feedbackRules, function(fbData, serial){\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData);\n                                });\n                            }\n                        }\n                    }\n\n                    if(data.responseProcessing){\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\n                    }\n                    _this.item.setNamespaces(data.namespaces);\n                }\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, _this.item);\n                }\n            });\n        },\n        loadAndBuildElement : function(data, callback){\n\n            var _this = this;\n\n            _this.loadRequiredClasses(data, function(Qti){\n\n                var element = _this.buildElement(data);\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        loadElement : function(element, data, callback){\n\n            var _this = this;\n            this.loadRequiredClasses(data, function(){\n                _this.loadElementData(element, data);\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements : function(data, callback){\n\n            var _this = this;\n\n            if(_this.item){\n\n                this.loadRequiredClasses(data, function(){\n\n                    var allElements = _this.item.getComposingElements();\n\n                    for(var i in data){\n                        var elementData = data[i];\n                        if(elementData && elementData.qtiClass && elementData.serial){\n                            //find and update element\n                            if(allElements[elementData.serial]){\n                                _this.loadElementData(allElements[elementData.serial], elementData);\n                            }\n                        }\n                    }\n\n                    if(typeof(callback) === 'function'){\n                        callback.call(_this, _this.item);\n                    }\n                });\n            }else{\n                throw 'QtiLoader : cannot load elements in empty item';\n            }\n\n        },\n        buildResponse : function(data){\n\n            var response = this.buildElement(data);\n\n            response.template = data.howMatch || null;\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if(_.size(data.mapping)){\n                response.mapEntries = data.mapping;\n            }else if(_.size(data.areaMapping)){\n                response.mapEntries = data.areaMapping;\n            }else{\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule : function(data){\n\n            var feedbackRule = this.buildElement(data);\n\n            if(data.condition){\n                feedbackRule.condition = data.condition;\n            }\n            if(data.comparedValue){\n                feedbackRule.comparedValue = data.comparedValue;\n            }\n\n            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            return feedbackRule;\n        },\n        buildOutcome : function(data){\n            var outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n            return outcome;\n        },\n        buildResponseProcessing : function(data){\n            var rp = this.buildElement(data);\n            if(data && data.processingType){\n                if(data.processingType === 'custom'){\n                    rp.xml = data.data;\n                    rp.processingType = 'custom';\n                }else{\n                    rp.processingType = 'templateDriven';\n                }\n            }\n            return rp;\n        },\n        loadContainer : function(bodyObject, bodyData){\n            if(!Element.isA(bodyObject, '_container')){\n                throw 'bodyObject must be a QTI Container';\n            }\n\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\n                for(var serial in bodyData.elements){\n                    var eltData = bodyData.elements[serial];\n                    //check if class is loaded:\n                    var element = this.buildElement(eltData);\n                    if(element){\n                        bodyObject.setElement(element, bodyData.body);\n                    }\n                }\n                bodyObject.body(bodyData.body);\n            }else{\n                throw 'wrong bodydata format';\n            }\n        },\n        buildElement : function(elementData){\n            var elt = null;\n            if(elementData && elementData.qtiClass && elementData.serial){\n                var className = elementData.qtiClass;\n                if(this.qti[className]){\n                    elt = new this.qti[className](elementData.serial);\n                    this.loadElementData(elt, elementData);\n                }else{\n                    throw 'the qti element class does not exist: ' + className;\n                }\n            }else{\n                throw 'wrong elementData format';\n            }\n            return elt;\n        },\n        loadElementData : function(element, data){\n\n            //merge attributes when loading element data\n            var attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if(element.body && data.body){\n                if(element.bdy){\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if(element.object && data.object){\n                if(element.object){\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if(Element.isA(element, 'interaction')){\n                this.loadInteractionData(element, data);\n            }else if(Element.isA(element, 'choice')){\n                this.loadChoiceData(element, data);\n            }else if(Element.isA(element, 'math')){\n                this.loadMathData(element, data);\n            }else if(Element.isA(element, 'infoControl')){\n                this.loadPicData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData : function(interaction, data){\n            if(Element.isA(interaction, 'blockInteraction')){\n                if(data.prompt){\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if(Element.isA(interaction, 'customInteraction')){\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices : function(interaction, data){\n\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if(data.choices){\n                if(Element.isA(interaction, 'matchInteraction')){\n                    for(var set = 0; set < 2; set++){\n                        if(!data.choices[set]){\n                            throw 'missing match set #' + set;\n                        }\n                        var matchSet = data.choices[set];\n                        for(var serial in matchSet){\n                            var choice = this.buildElement(matchSet[serial]);\n                            if(choice){\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                }else{\n                    for(var serial in data.choices){\n                        var choice = this.buildElement(data.choices[serial]);\n                        if(choice){\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\n                    if(data.gapImgs){\n                        for(var serial in data.gapImgs){\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\n                            if(gapImg){\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        },\n        loadChoiceData : function(choice, data){\n            if(Element.isA(choice, 'textVariableChoice')){\n                choice.val(data.text);\n            }else if(Element.isA(choice, 'gapImg')){\n                //has already been taken care of in buildElement()\n            }else if(Element.isA(choice, 'containerChoice')){\n                //has already been taken care of in buildElement()\n            }\n        },\n        loadObjectData : function(object, data){\n            object.setAttributes(data.attributes);\n            //@todo: manage object like a container\n            if(data._alt){\n                if(data._alt.qtiClass === 'object'){\n                    object._alt = Loader.buildElement(data._alt);\n                }else{\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData : function(math, data){\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, function(value, encoding){\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadPciData : function(pci, data){\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData : function(pic, data){\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    function loadPortableCustomElementData(portableElement, data){\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.properties = data.properties;\n        portableElement.libraries = data.libraries;\n    }\n\n    return Loader;\n});\n\n","/**\n * Common helper functions\n */\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\n    return {\n        convertChoices : function(choices, outputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                if(Element.isA(c, 'choice')){\n                    switch(outputType){\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n\n                }else if(_.isArray(c)){\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices : function(interaction, choices, inputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                var choice;\n                if(_.isString(c)){\n                    if(inputType === 'serial'){\n                        choice = interaction.getChoice(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else if(inputType === 'identifier'){\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else{\n                        ret.push(c);\n                    }\n                }else if(_.isArray(c)){\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                }else{\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices : function(choices){\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for(var i in choices){\n                if(Element.isA(choices[i], 'choice')){\n                    var choice = choices[i];\n                    if(choice.attr('fixed')){\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                }else{\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for(var n = 0; n < r.length - 1; n++){\n                if(f[n]){\n                    continue;\n                }\n                var k = -1;\n                do{\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                }while(f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier : function(interaction, choiceSerial){\n            var choice = interaction.getChoice(choiceSerial);\n            if(choice){\n                return choice.id();\n            }else{\n                return '';\n            }\n        }\n    }\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * A factory to create a QTI renderer.\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiRunner/core/Renderer',[\n    'lodash',\n    'jquery',\n    'handlebars',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/interactionHelper',\n    'ui/themeLoader',\n], function(_, $, Handlebars, Element, interactionHelper, themeLoader){\n    'use strict';\n\n    var _isValidRenderer = function(renderer){\n\n        var valid = true;\n\n        if(typeof (renderer) !== 'object'){\n            return false;\n        }\n\n        var classCorrect = false;\n        if(renderer.qtiClass){\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\n                classCorrect = true;\n            }else{\n                var pos = renderer.qtiClass.indexOf('.');\n                if(pos > 0){\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\n                    var subClass = renderer.qtiClass.slice(pos + 1);\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if(!classCorrect){\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if(!renderer.template){\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    var _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        'img',\n        'math',\n        'object',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include'\n    ];\n    \n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    var _dependencies = {\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock : ['_container'],\n        associateInteraction : ['simpleAssociableChoice'],\n        choiceInteraction : ['simpleChoice'],\n        gapMatchInteraction : ['gap', 'gapText'],\n        graphicAssociateInteraction : ['associableHotspot'],\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction : ['hotspotChoice'],\n        hotspotInteraction : ['hotspotChoice'],\n        hottextInteraction : ['hottext'],\n        inlineChoiceInteraction : ['inlineChoice'],\n        matchInteraction : ['simpleAssociableChoice'],\n        orderInteraction : ['simpleChoice']\n    };\n    \n    /**\n     * The list of supported qti subclasses.\n     */\n    var _renderableSubclasses = {\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\n    };\n    \n    /**\n     * List of the default properties for the item\n     */\n    var _defaults = {\n        shuffleChoices : true\n    };\n    \n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl(){\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    var Renderer = function(options){\n\n        /**\n         * Store the registered renderer location\n         */\n        var _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        var _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        var _getClassRenderer = function(qtiClass){\n            var ret = null;\n            if(_renderers[qtiClass]){\n                ret = _renderers[qtiClass];\n            }else{\n                var pos = qtiClass.indexOf('.');\n                if(pos > 0){\n                    qtiClass = qtiClass.slice(0, pos);\n                    if(_renderers[qtiClass]){\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value){\n            if(typeof (key) === 'string'){\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts){\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key){\n            if(typeof (key) === 'string' && options[key]){\n                return options[key];\n            }\n            return null;\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager(){\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader(){\n            return this.themeLoader;\n        };\n\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass){\n\n            var res;\n            var ret        = '';\n            var tplFound   = false;\n            var qtiClass   = qtiSubclass || element.qtiClass;\n            var renderer   = _getClassRenderer(qtiClass);\n            var decorators = this.getOption('decorators');\n\n            if(!renderer || !_.isFunction(renderer.template)){\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.before)){\n\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n\n            //post rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.after)){\n\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass){\n\n            var ret = data,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getData) === 'function'){\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data){\n            return Handlebars.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\n\n            var ret = null,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                ret = renderer.getContainer(qtiElement, $scope);\n            }else{\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.render) === 'function'){\n                    ret = renderer.render.call(this, qtiElement, data);\n                }\n                //postRendering is optional, log missing call of postRender?\n            }\n\n            return ret;\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.setResponse) === 'function'){\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\n                    if($container instanceof $ && $container.length){\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getResponse) === 'function'){\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.resetResponse) === 'function'){\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass){\n\n            var ret = false;\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.getState)){\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState =  function(qtiInteraction, state, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.setState)){\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function(){\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations){\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses){\n           var self = this;\n            var required = [];\n\n            if(options.themes){\n\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index){\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load();\n            }\n\n            if(requiredClasses){\n                if(_.isArray(requiredClasses)){\n\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass){\n                        var deps = _dependencies[reqClass];\n                        if(deps){\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass){\n\n                        if(_renderableSubclasses[qtiClass]){\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass){\n                                if(_locations[qtiClass + '.' + subclass]){\n                                    required.push(_locations[qtiClass + '.' + subclass]);\n                                }else if(_locations[qtiClass]){\n                                    required.push(_locations[qtiClass]);\n                                }else{\n                                    throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\n                                }\n                            });\n                        } else {\n                            if(_locations[qtiClass] === false){\n                                _renderers[qtiClass] = false;//mark this class as not renderable\n                            }else if(_locations[qtiClass]){\n                                required.push(_locations[qtiClass]);\n                            }else{\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n\n            }else{\n                required = _.values(_locations);\n            }\n\n            var _this = this;\n            require(required, function(){\n\n                _.each(arguments, function(clazz){\n                    if(_isValidRenderer(clazz)){\n                        _renderers[clazz.qtiClass] = clazz;\n                    }\n                });\n\n                if(typeof (callback) === 'function'){\n                    callback.call(_this, _renderers);\n                }\n            });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload(){\n            if(this.themeLoader){\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType){\n            if(Element.isA(interaction, 'interaction')){\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(interactionHelper.findChoices(interaction, choices, identificationType), 'serial');\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\n            var choices = [];\n            var shuffled = [];\n            var serial, i;\n\n            if(Element.isA(interaction, 'interaction')){\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if(!this.shuffledChoices[serial] || reshuffle){\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        this.shuffledChoices[serial] = [];\n                        for(i = 0; i < 2; i++){\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                //otherwise get the choices from the serials\n                } else {\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        _.forEach(choices, function(choice, index){\n                            if(index < 2){\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial){\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial){\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if(returnedType === 'serial' || returnedType === 'identifier'){\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function(){\n            return _renderers;\n        };\n\n        this.getLocations = function(){\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url){\n            if(!options.assetManager){\n                return url;\n            }\n            if(typeof url === 'string' && url.length > 0){\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl){\n\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if(this.getOption('userRelativeUrl')){\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if(/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)){\n                //already absolute or base64 encoded\n                return relUrl;\n            }else{\n\n                var absUrl = '';\n                var runtimeLocations = this.getOption('runtimeLocations');\n\n                if(runtimeLocations && _.size(runtimeLocations)){\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\n                        if(relUrl.indexOf(typeIdentifier) === 0){\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false;//break\n                        }\n                    });\n                }\n\n                if(absUrl){\n                    return absUrl;\n                }else{\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n\n            }\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    return {\n\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build : function(renderersLocations, name, defaultOptions){\n            var NewRenderer = function(){\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * The asset manager proposes you to resolve your asset URLs for you!\n * You need to add the resolution strategies, it will then evaluate each strategy until the right one is found\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/manager',[\n    'lodash',\n    'util/url'\n], function(_, urlUtil){\n    'use strict';\n\n    /**\n     * @typedef AssetStrategy Defines a way to resolve an asset path\n     * @property {String} name - the strategy name\n     * @property {assetStrategyHandle} handle - how to resolve the strategy.\n     */\n\n    /**\n     * @callback assetStrategyHandle\n     * @param {String|Object} url - the URL to resolved. If parseUrl, it's an object that contains host, port, search, queryString, etc.\n     * @param {Object} data - the context data\n     * @returns {String?} falsy if not resolved otherwise the resolved URL\n     */\n\n\n    /**\n     * The assetManagerFactory create a new assetManager with the given resolution stratgies and a data context.\n     *\n     * @example\n     *   //define AssetStrategies with a name and a handle method\n     *   var strategies = [{\n     *       name : 'external',\n     *       handle : function(url, data){\n     *           if(/^http/.test(url)){\n     *               return path;\n     *           }\n     *       }\n     *   }, {\n     *       name : 'relative',\n     *       handle : function(url, data){\n     *           if(/^((\\.\\/)|(\\w\\/))/){\n     *               return data.baseUrl + '/' + url ;\n     *           }\n     *       }\n     *   }]);\n     *\n     *   var assetManager = assetManagerFactory(strategies, { baseUrl : 'http://t.oa/public/assets/' });\n     *   assetManager.resolve('http://foo/bar.png'); //will resolved using external\n     *   assetManager.resolve('bar.png'); //will resolved using relative strategy\n     *\n     * @param {AssetStrategy[]} strategies - the strategies\n     * @param {Object} data - the context data\n     * @param {Object} [options] - the manager options\n     * @param {Boolean} [options.parseUrl = true] - If the URL to give to the stragies should be parsed or given as it is.\n     * @param {Boolean} [options.cache] - resolve the same URL only once and store the result in memory.\n     *\n     * @exports taoItems/assets/manager\n     * @namespace assetManagerFactory\n     */\n    var assetManagerFactory = function assetManagerFactory(strategies, data, options) {\n\n        var cache  = {};\n\n        strategies = _.isArray(strategies) ? strategies : [strategies];\n        data       = data || {};\n        options    = _.defaults(options || {}, {\n            parseUrl : true\n        });\n\n        /**\n         * A brand new asset manager is created by the factory\n         */\n        var assetManager = {\n\n            /**\n             * The stack of strategies that would be used to resolve the asset path\n             * @type {AssetStrategy[]}\n             */\n            _strategies : [],\n\n            /**\n             * Add an asset resolution strategy.\n             * The strategies will be evaluated in the order they've been added.\n             * @param {AssetStrategy} strategy - the strategy to add\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            addStrategy : function addStrategy (strategy){\n\n                if(!_.isPlainObject(strategy) || !_.isFunction(strategy.handle) || !_.isString(strategy.name)){\n                    throw new TypeError('An asset resolution strategy is an object with a handle method and a name');\n                }\n\n                this._strategies.push(strategy);\n            },\n\n            /**\n             * Change the strategies\n             * @param {AssetStrategy[]} strategies - the strategies\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            setStrategies : function setStrategies(newStrategies){\n                var self = this;\n\n                this._strategies = [];\n\n                //assign the strategies to the assetManager\n                _.forEach(newStrategies, function(strategy){\n\n                    //if it's an object we add it directly\n                    if(_.isPlainObject(strategy)){\n                        assetManager.addStrategy(strategy);\n\n                    //if it's a function, we create the strategy with a generated name\n                    } else if(_.isFunction(strategy)){\n                        self.addStrategy({\n                            name   : 'strategy_' + (self._strategies.length + 1),\n                            handle : strategy\n                        });\n                    }\n                });\n            },\n\n            /**\n             * Set context data\n             * @param {String|Object} [key] - the key of the data to set or the data values if it's an object\n             * @param {*} [value] - the value to set if a key is given\n             */\n            setData : function setData(key, value){\n                if(_.isString(key) && typeof value !== 'undefined'){\n                    data[key] = value;\n                } else if(_.isPlainObject(key)){\n                    data = key;\n                }\n            },\n\n            /**\n             * Get context data\n             * @param {String} [key] - if we want the value of a particuar key\n             * @returns {Object|*} all the data or the proprety value if key is given\n             */\n            getData : function getData(key){\n                if(_.isString(key)){\n                    return data[key];\n                }\n                return data;\n            },\n\n            /**\n             * Resolve the given URL against the strategies\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolve : function resolve(url){\n                var resolved;\n                var inputUrl;\n\n                //if caching try to load the value from the cache\n                if(options.cache && cache.hasOwnProperty(url)){\n                    return cache[url];\n                }\n\n                //parse the url ?\n                inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n\n                //call strategies handlers, in their order until once returns somethin\n                _.forEach(this._strategies, function(strategy){\n                    var result = strategy.handle(inputUrl, data);\n                    if(result){\n                        resolved = result;\n                        return false;\n                    }\n                });\n\n                resolved = resolved || '';\n\n                if(options.cache){\n                    cache[url] = resolved;\n                }\n\n                return resolved;\n            },\n\n            /**\n             * Resolve the given URL against the strategy identified by the given name\n             * @param {String} name - the strategy name\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolveBy : function resolveBy(name, url){\n                var inputUrl;\n                var resolved = '';\n                var strategy = _.find(this._strategies, {name : name});\n                if(strategy){\n                    //parse the url ?\n                    inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n                    resolved = strategy.handle(inputUrl, data);\n                }\n                return resolved;\n            },\n\n            /**\n             * When the cache is used, it could be useful to clear the cache\n             */\n            clearCache : function clearCache(){\n                if(options.cache){\n                    cache = {};\n                }\n            }\n        };\n\n        assetManager.setStrategies(strategies);\n\n        return assetManager;\n    };\n\n    return assetManagerFactory;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Provides common strategies to resolved assets\n * that may be used by any type of items.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/strategies',[\n    'util/url'\n], function(urlUtil){\n    'use strict';\n\n    /**\n     * Unrelated strategies accessible by there name.\n     * Remember to not use the whole object, but each one in an array since the order matters.\n     *\n     * @exports taoItems/assets/strategies\n     */\n    var strategies = {\n\n        //the baseUrl concats the baseUrl in data if the url is relative\n        baseUrl : {\n            name : 'baseUrl',\n            handle : function handleBaseUrl(url, data){\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) ){\n\n                    //is slashcat we manage slash concact\n                    if(data.slashcat === true){\n                        return data.baseUrl.replace(/\\/$/, '') + '/' + url.toString().replace(/^\\.\\//, '').replace(/^\\//, '');\n                    }\n\n                    return data.baseUrl + url.toString().replace(/^\\.?\\//, '');\n                }\n            }\n        },\n\n        //absolute URL are just left intact\n        external : {\n            name : 'external',\n            handle : function handleExternal(url, data){\n                if(urlUtil.isAbsolute(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //the base64 encoded resources are also left intact\n        base64 : {\n            name : 'base64',\n            handle : function handleB64(url){\n                if(urlUtil.isBase64(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //special tao media protocol\n        taomedia : {\n            name : 'taomedia',\n            handle : function handleTaoMedia(url, data){\n                //either a baseUrl is given or if empty, taomedia resources are managed as relative resources\n                var baseUrl = data.baseUrl || './';\n                if( (typeof url === 'object' && url.protocol === 'taomedia') ||\n                    (/^taomedia:\\/\\//.test(url.toString())) ){\n                    return baseUrl + url.toString();\n                }\n            }\n        }\n    };\n    return strategies;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/config',[\n    'lodash',\n    'context',\n    'ui/themes',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies',\n], function(_, context, themes, assetManagerFactory, assetStrategies){\n    'use strict';\n\n    var itemThemes = themes.get('items');\n\n    //stratgy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the ususal way and should be called only using resolveBy.\n    var portableAssetStrategy = {\n        name : 'portableElementLocation',\n        handle : function handlePortableElementLocation(url){\n            if(url.source === url.relative){\n                return window.location.pathname.replace(/([^\\/]*)$/, '') + url.toString() + '/';\n            }\n        }\n    };\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory([{\n            name : 'theme',\n            handle : function handleTheme(url){\n                if(itemThemes && url.path && (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))){\n                    return context.root_url + url.toString();\n                }\n            }\n        },\n        assetStrategies.taomedia,\n        assetStrategies.external,\n        assetStrategies.base64,\n        assetStrategies.baseUrl,\n        portableAssetStrategy\n    ], {baseUrl : ''});\n\n    //renderers locations\n    var locations = {\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        '_simpleFeedbackRule' : false,\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        'outcomeDeclaration' : false,\n        'responseDeclaration' : false,\n        'responseProcessing' : false,\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        'hotspotChoice' : false,\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        'associableHotspot' : false,\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    return {\n        name:'commonRenderer',\n        locations: locations,\n        options:   {\n            assetManager: assetManager,\n            themes : itemThemes\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Qti Item Common Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Renderer',[\n    'taoQtiItem/qtiRunner/core/Renderer',\n    'taoQtiItem/qtiCommonRenderer/renderers/config'\n], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","// @license http://opensource.org/licenses/MIT\n// copyright Paul Irish 2015\n\n\n// Date.now() is supported everywhere except IE8. For IE8 we use the Date.now polyfill\n//   github.com/Financial-Times/polyfill-service/blob/master/polyfills/Date.now/polyfill.js\n// as Safari 6 doesn't have support for NavigationTiming, we use a Date.now() timestamp for relative values\n\n// if you want values similar to what you'd get with real perf.now, place this towards the head of the page\n// but in reality, you're just getting the delta between now() calls, so it's not terribly important where it's placed\n\n\n//changes (AMDify, style guide matching) by Bertrand Chevrier <bertrand@taotesting.com> for OAT S.A.\ndefine('lib/polyfill/performance-now',[], function() {\n    'use strict';\n\n    if ( !(\"performance\" in window) ){\n        window.performance = {};\n    }\n\n    Date.now = (Date.now || function() { // thanks IE8\n        return new Date().getTime();\n    });\n\n    if ( !(\"now\" in window.performance)) {\n\n        var nowOffset = Date.now();\n\n        if (window.performance.timing && window.performance.timing.navigationStart) {\n            nowOffset = window.performance.timing.navigationStart;\n        }\n\n        window.performance.now = function now() {\n            return Date.now() - nowOffset;\n        };\n    }\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/performances/tester',[\n    'jquery',\n    'lodash',\n    'async',\n    'context',\n    'helpers',\n    'taoClientDiagnostic/tools/stats',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'lib/polyfill/performance-now'\n], function($, _, async, context, helpers, stats, Loader, Renderer) {\n    'use strict';\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * List of descriptors defining the pages to load.\n     * - url : location of the folder of the sample\n     * - timeout : the timeout for the run\n     * - nb : number of tests iterations\n     * @type {Object}\n     * @private\n     */\n    var _samples = {\n        'sample1' : {\n            id : 'sample1',\n            url : 'taoClientDiagnostic/tools/performances/data/sample1/',\n            timeout : 30 * _second,\n            nb : 11\n        },\n        'sample2' : {\n            id : 'sample2',\n            url : 'taoClientDiagnostic/tools/performances/data/sample2/',\n            timeout : 30 * _second,\n            nb : 10\n        },\n        'sample3' : {\n            id : 'sample3',\n            url : 'taoClientDiagnostic/tools/performances/data/sample3/',\n            timeout : 30 * _second,\n            nb : 10\n        }\n    };\n\n    /**\n     * Loads a page inside a div and compute the time to load\n     * @param {Object} data The descriptor of the page to load\n     * @param {Function} done A callback function called to provide the result\n     */\n    function loadItem(data, done){\n\n        //item location config\n        var qtiJsonFile = data.url + 'qti.json';\n        var urlTokens = data.url.split('/');\n        var extension = urlTokens[0];\n        var fullpath = require.s.contexts._.config.paths[extension];\n        var baseUrl = data.url.replace(extension, fullpath);\n        var loader = new Loader();\n        var renderer = new Renderer({\n            baseUrl : baseUrl       // compatibility mode for legacy installations\n        });\n\n        // check needed by compatibility mode for legacy installations\n        if (renderer.getAssetManager) {\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\n        }\n\n        require(['json!'+qtiJsonFile], function(itemData){\n\n            loader.loadItemData(itemData, function(item){\n                renderer.load(function(){\n\n                    var $container,\n                        duration,\n                        displayDuration,\n                        start,\n                        end,\n                        result;\n\n                    //start right before rendering\n                    start = window.performance.now();\n\n                    //set renderer\n                    item.setRenderer(this);\n\n                    //render markup\n                    $container = $('<div>').appendTo('body');\n                    $container.append(item.render());\n\n                    //execute javascript\n                    item.postRender();\n\n                    //remove item\n                    $container.remove();\n\n                    //done\n                    end = window.performance.now();\n\n                    duration = (end - start) / _second;\n\n                    result = {\n                        id : data.id,\n                        url : data.url,\n                        duration: duration\n                    };\n\n                    done(null, result);\n\n                }, this.getLoadedClasses());\n            });\n\n        });\n\n    }\n\n    /**\n     * Performs a browser performances test by running a heavy page\n     *\n     * @returns {{start: Function}}\n     */\n    var performancesTester = function performancesTester() {\n        return {\n            /**\n             * Performs a performances test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start: function start(done) {\n                var tests = [];\n                _.forEach(_samples, function(data) {\n                    var cb = _.partial(loadItem, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                async.series(tests, function(err, measures) {\n                    var decimals = 2;\n                    var results;\n\n                    if(err && !measures.length){\n                        //something went wrong\n                        throw err;\n                    }\n\n                    measures.shift();\n                    results = stats(measures, 'duration', decimals);\n\n                    done(results.average, results);\n                });\n            }\n        };\n    };\n\n    return performancesTester;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\n    'lodash',\n    'async',\n    'context',\n    'taoClientDiagnostic/tools/stats',\n    'taoClientDiagnostic/tools/fixedDecimals',\n    'lib/polyfill/performance-now'\n], function(_, async, context, stats, fixedDecimals) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {Number}\n     * @private\n     */\n    var _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {Number}\n     * @private\n     */\n    var _mega = _kilo * _kilo;\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * List of descriptors defining the data sets to download.\n     * - file : path of the file containing the test data\n     * - size : the given size of the file\n     * - timeout : the timeout for the download\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\n     * - nb : number of download iterations\n     * @type {Object}\n     */\n    var _downloadData = {\n        \"10KB\" : {\n            id : '10KB',\n            file : 'data/bin10KB.data',\n            size : 10 * _kilo,\n            timeout : _second,\n            threshold : 0,\n            nb : 10\n        },\n        \"100KB\" : {\n            id : '100KB',\n            file : 'data/bin100KB.data',\n            size : 100 * _kilo,\n            timeout : 2 * _second,\n            threshold : 0,\n            nb : 5\n        },\n        \"1MB\" : {\n            id : '1MB',\n            file : 'data/bin1MB.data',\n            size : _mega,\n            timeout : 20 * _second,\n            threshold : 0,\n            nb : 3\n        },\n        \"10MB\" : {\n            id : '10MB',\n            file : 'data/bin10MB.data',\n            size : 10 * _mega,\n            timeout : 20 * _second,\n            threshold : 8,\n            nb : 3\n        },\n        \"100MB\" : {\n            id : '100MB',\n            file : 'data/bin100MB.data',\n            size : 100 * _mega,\n            timeout : 60 * _second,\n            threshold : 20,\n            nb : 3\n        }\n    };\n\n    /**\n     * Download a data set as described by the provided descriptor and compute the duration.\n     * @param {Object} data The data set descriptor to use for download\n     * @param {Function} cb A callback function called at the end of the download.\n     * This callback is also called if a timeout breaks the download;\n     */\n    var download = function download(data, cb) {\n        var self = this;\n        var start, end;\n        var timeoutId;\n        var url;\n        var request;\n\n        if (data.threshold && this.bandwidth < data.threshold) {\n            return cb('threshold');\n        }\n\n        url = context.root_url + '/taoClientDiagnostic/views/js/tools/bandwidth/' + data.file + '?' + Date.now();\n        request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.setRequestHeader('Accept', 'application/octet-stream');\n\n        request.onload = function onRequestLoad () {\n            var duration;\n            var bytes;\n            var seconds;\n            var speed;\n\n            end = window.performance.now();\n            clearTimeout(timeoutId);\n\n            duration = end - start;\n            bytes = data.size;\n            seconds = duration / _second;\n\n            // speed in Mbps\n            speed = ((bytes * 8) / seconds) / _mega;\n\n            self.bandwidth = Math.max(self.bandwidth, speed);\n\n            return cb(null, {\n                id : data.id,\n                file : data.file,\n                size : data.size,\n                duration : duration,\n                speed : speed\n            });\n        };\n        request.onerror = function onRequestError (err) {\n            clearTimeout(timeoutId);\n            cb(err);\n        };\n\n        timeoutId = _.delay(cb, data.timeout, 'timeout');\n        start = window.performance.now();\n        request.send();\n    };\n\n    /**\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\n     *\n     * @returns {{start: Function}}\n     */\n    var bandwidthTester = function bandwidthTester (){\n        return {\n            /**\n             * Performs a bandwidth test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start : function start(done){\n                var self = this;\n                var tests = [];\n                _.forEach(_downloadData, function(data) {\n                    var cb = _.bind(download, self, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                this.bandwidth = 0;\n\n                async.series(tests, function(err, measures) {\n                    var duration = 0;\n                    var size = 0;\n                    var decimals = 2;\n                    var getValue;\n                    var results;\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n\n                    getValue = function(value) {\n                        var speed = 0;\n\n                        if (value) {\n                            duration += value.duration;\n                            size += value.size;\n\n                            speed = value.speed;\n                            value.speed = fixedDecimals(speed, decimals);\n                        }\n\n                        return speed;\n                    };\n\n                    results = stats(measures, getValue, decimals);\n\n                    results.duration = fixedDecimals(duration / _second, decimals);\n                    results.size = size;\n\n                    done(results.average, results);\n                });\n            }\n        };\n    };\n\n    return bandwidthTester;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n *\n * @author dieter <dieter@taotesting.com>\n */\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/diagnostics',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'helpers',\n    'layout/loading-bar',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/bandwidth/tester',\n    'ui/feedback'\n], function ($, _, __, async, helpers, loadingBar, performancesTester, bandwidthTester, feedback) {\n    'use strict';\n\n    /**\n     * The typical bandwidth needed for a test taker (Mbps)\n     * @type {Number}\n     */\n    var bandwidthUnit = 0.16;\n\n    /**\n     * The thresholds for optimal bandwidth. One by bar.\n     * @type {Array}\n     */\n    var testTakers = [\n        45\n    ];\n\n    /**\n     * Maximum number of test takers to display\n     * @type {Number}\n     */\n    var maxTestTakers = 100;\n\n    /**\n     * The threshold for optimal performances\n     * @type {Number}\n     */\n    var performanceOptimal = 0.025;\n\n    /**\n     * The threshold for minimal performances\n     * @type {Number}\n     */\n    var performanceThreshold = 0.25;\n\n    /**\n     * The range of performance displayed on a bar\n     * @type {Number}\n     */\n    var performanceRange = Math.abs(performanceOptimal - performanceThreshold);\n\n    /**\n     * A list of thresholds\n     * @type {Array}\n     */\n    var thresholds = [{\n        threshold: 0,\n        message: __('Very slow performance'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average performance'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good performance'),\n        type: 'success'\n    }];\n\n    /**\n     * A list of thresholds for bandwidth\n     * @type {Array}\n     */\n    var bandwidthThresholds = [{\n        threshold: 0,\n        message: __('Low bandwidth'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average bandwidth'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good bandwidth'),\n        type: 'success'\n    }];\n\n    /**\n     * A list of thresholds for summary\n     * @type {Array}\n     */\n    var summaryThresholds = [{\n        threshold: 0,\n        message: __('Your system requires a compatibility update, please contact your system administrator.'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Your system is not optimal, please contact your system administrator.'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Your system is fully compliant.'),\n        type: 'success'\n    }];\n\n    /**\n     * Gets the correct status message for a given percentage\n     * @param {Number} percentage\n     * @returns {String}\n     */\n    var getStatus = function(thresholds, percentage) {\n        var len = thresholds.length;\n        var status = thresholds[0];\n        var i, step;\n\n        percentage = Math.max(0, Math.min(100, Math.round(percentage)));\n\n        for(i = 1; i < len; i++) {\n            step = thresholds[i];\n            if (step && percentage >= step.threshold) {\n                status = step;\n            } else {\n                break;\n            }\n        }\n\n        status = _.clone(status);\n        status.percentage = percentage;\n\n        return status;\n    };\n\n    /**\n     * Set indicator and display bar\n     *\n     * @param {string} name\n     * @param {object} status\n     */\n    function displayTestResult(name, status) {\n        var $bar = $('[data-result=\"' + name + '\"]'),\n            $indicator = $bar.find('.quality-indicator');\n\n        $bar.find('.feedback')\n            .removeClass('feedback-error feedback-warning feedback-success')\n            .addClass('feedback-' + status.type)\n            .find('.msg').text(status.message);\n\n        $bar.find('.icon')\n            .removeClass('icon-error icon-warning icon-success')\n            .addClass('icon-' + status.type);\n\n        if (_.isNumber(status.label) || _.isString(status.label)) {\n            $indicator.attr('title', status.label);\n            $indicator.toggleClass('wide', status.label.toString().length > 2);\n        }\n\n        $bar.fadeIn(function() {\n            if($indicator.length){\n                $indicator.animate({\n                    left: (status.percentage * $bar.outerWidth() / 100) - ($indicator.outerWidth() / 2)\n                });\n            }\n        });\n    }\n\n    /**\n     * Sets a particular bar, and update the total\n     * @param {String} name\n     * @param {Object} status\n     * @param {Object} score\n     */\n    function updateTestResult(name, status, score) {\n        displayTestResult(name, status);\n        if (score) {\n            score[name] = status;\n        }\n    }\n\n    /**\n     * Displays the results summary\n     * @param {Object} score\n     */\n    function displaySummary(score) {\n        var total = _.min(score, 'percentage');\n        displayTestResult('total', getStatus(summaryThresholds, total.percentage));\n    }\n\n    /**\n     * Performs a browser checks\n     * @param {Function} done\n     */\n    function checkBrowser(done) {\n        var info = new WhichBrowser();\n        var browser = info.browser;\n        var os = info.os;\n        var information = {\n            browser: browser && browser.name || __('Unknown browser'),\n            browserVersion: browser && browser.version && browser.version.original || __('Unknown version'),\n            os: os && os.name || __('Unknown OS'),\n            osVersion: os && os.version && (os.version.alias || os.version.original) || __('Unknown version')\n        };\n\n        // which browser\n        $.post(\n            helpers._url('check', 'CompatibilityChecker', 'taoClientDiagnostic'),\n            information,\n            function(data){\n                if ('success' === data.type) {\n                    data.percentage = 100;\n                } else {\n                    data.percentage = 0;\n                }\n                done(data, information);\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     * Sends the detailed stats to the server\n     * @param {String} type The type of stats\n     * @param {Object} details The stats details\n     * @param {Function} done A callback method called once server has responded\n     */\n    function storeData(type, details, done) {\n        details = _.omit(details, 'values');\n        details.type = type;\n\n        $.post(\n            helpers._url('storeData', 'CompatibilityChecker', 'taoClientDiagnostic'),\n            details,\n            done,\n            \"json\"\n        );\n    };\n\n    /**\n     * Performs a browser bandwidth check\n     * @param {Function} done\n     */\n    function checkBandwidth(done) {\n        bandwidthTester().start(function(average, details) {\n            storeData('bandwidth', details, function(){\n                var status = [];\n\n                _.forEach(testTakers, function(threshold) {\n                    var max = threshold * bandwidthUnit;\n                    var st = getStatus(bandwidthThresholds, details.max / max * 100);\n                    var nb = Math.floor(details.max / bandwidthUnit);\n\n                    if (nb > maxTestTakers) {\n                        nb = '>' + maxTestTakers;\n                    }\n\n                    st.label = nb;\n                    status.push(st);\n                });\n\n                done(status, details);\n            });\n        });\n    }\n\n    /**\n     * Performs a browser performances check\n     * @param {Function} done\n     */\n    function checkPerformance(done) {\n        performancesTester().start(function(average, details) {\n            var cursor = performanceRange - average + performanceOptimal;\n            var status = getStatus(thresholds, cursor / performanceRange * 100);\n\n            storeData('performance', details, function(){\n                done(status, details);\n            });\n        });\n    }\n\n    /**\n     * Updates the displayed details\n     * @param {Object} information\n     */\n    function displayDetails(information) {\n        var $detailsTable = $('#details');\n        $('tbody', $detailsTable).empty();\n        $.each(information, function(index, object) {\n            var line = '<td>'+ object.message +'</td><td>'+ object.value +'</td>';\n            $('tbody', $detailsTable).append('<tr>' + line + '</tr>');\n        });\n    }\n\n    /**\n     *\n     */\n    var init = function init(){\n        var $testTriggerBtn = $('[data-action=\"test-launcher\"]');\n        var $detailsBtn = $('[data-action=\"display-details\"]');\n        var status, information = {};\n        var scores = {};\n        var $feedbackBox = $('#feedback-box');\n\n        $testTriggerBtn.on('click', function(){\n            loadingBar.start();\n            $testTriggerBtn.hide();\n\n            async.series([function(cb) {\n                checkBrowser(function(status, details) {\n                    _.assign(information, {\n                        browser: {message: __('Web browser'), value: details.browser + ' ' + details.browserVersion},\n                        os: {message: __('Operating system'), value: details.os + ' ' + details.osVersion}\n                    });\n                    displayDetails(information);\n                    updateTestResult('browser', status, scores);\n                    cb();\n                });\n            }, function(cb) {\n                checkPerformance(function(status, details) {\n                    _.assign(information, {\n                        performancesMin : {message : __('Minimum rendering time'), value:details.min + ' s'},\n                        performancesMax : {message : __('Maximum rendering time'), value:details.max + ' s'},\n                        performancesAverage : {message : __('Average rendering time'), value:details.average + ' s'}\n                    });\n                    displayDetails(information);\n                    updateTestResult('performance', status, scores);\n                    cb();\n                });\n            }, function(cb) {\n                checkBandwidth(function(status, details) {\n                    _.assign(information, {\n                        bandwidthMin : {message : __('Minimum bandwidth'), value:details.min + ' Mbps'},\n                        bandwidthMax : {message : __('Maximum bandwidth'), value:details.max + ' Mbps'},\n                        bandwidthAverage : {message : __('Average bandwidth'), value:details.average + ' Mbps'}\n                    });\n                    displayDetails(information);\n\n                    _.forEach(status, function(st, i) {\n                        updateTestResult('bandwidth-' + i, st, scores);\n                    });\n\n                    cb();\n                });\n            }], function() {\n                displaySummary(scores);\n                loadingBar.stop();\n            });\n        });\n\n        $detailsBtn.on('click', function() {\n            loadingBar.start();\n            $detailsBtn.hide();\n\n            displayDetails(information);\n\n            status = getStatus(thresholds, 68);\n            displayTestResult('details', status);\n\n            loadingBar.stop();\n        });\n\n\n        if(!!$feedbackBox.data('error')){\n            feedback().error($feedbackBox.data('error'));\n        }\n        if($feedbackBox.data('message')){\n            feedback().error($feedbackBox.data('message'));\n        }\n    };\n\n    /**\n     * @exports\n     */\n    return init();\n});\n\n"]}